{"ast":null,"code":"var _jsxFileName = \"/Users/srailkar/Desktop/my-app/client/src/App.js\";\n// Uncomment the editor you would like to see\nimport Editor from './components/TipTap/TipTap'; // import Editor from './components/Draft/Draft';\n// import Editor from './components/Slate/MySlate';\n\nimport { ApolloClient, InMemoryCache, ApolloProvider, HttpLink, from } from '@apollo/client';\nimport { onError } from '@apollo/client/link/error';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst errorLink = onError(({\n  graphqlErrors,\n  networkError\n}) => {\n  if (graphqlErrors) {\n    graphqlErrors.map(({\n      message,\n      location,\n      path\n    }) => {\n      alert(`GraphQL error ${message}`);\n    });\n  }\n});\nconst link = from([errorLink, new HttpLink({\n  uri: \"http://localhost:8000/graphql\"\n})]);\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: link\n});\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Editor, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/srailkar/Desktop/my-app/client/src/App.js"],"names":["Editor","ApolloClient","InMemoryCache","ApolloProvider","HttpLink","from","onError","errorLink","graphqlErrors","networkError","map","message","location","path","alert","link","uri","client","cache","App"],"mappings":";AAAA;AAEA,OAAOA,MAAP,MAAmB,4BAAnB,C,CACA;AACA;;AAEA,SAASC,YAAT,EAAuBC,aAAvB,EAAsCC,cAAtC,EAAsDC,QAAtD,EAAgEC,IAAhE,QAA4E,gBAA5E;AACA,SAASC,OAAT,QAAwB,2BAAxB;;AAEA,MAAMC,SAAS,GAAGD,OAAO,CAAC,CAAC;AAAEE,EAAAA,aAAF;AAAiBC,EAAAA;AAAjB,CAAD,KAAqC;AAC7D,MAAID,aAAJ,EAAmB;AACjBA,IAAAA,aAAa,CAACE,GAAd,CAAkB,CAAC;AAAEC,MAAAA,OAAF;AAAWC,MAAAA,QAAX;AAAqBC,MAAAA;AAArB,KAAD,KAAiC;AACjDC,MAAAA,KAAK,CAAE,iBAAgBH,OAAQ,EAA1B,CAAL;AACD,KAFD;AAGD;AACF,CANwB,CAAzB;AAQA,MAAMI,IAAI,GAAGV,IAAI,CAAC,CAChBE,SADgB,EAEhB,IAAIH,QAAJ,CAAa;AAACY,EAAAA,GAAG,EAAE;AAAN,CAAb,CAFgB,CAAD,CAAjB;AAKA,MAAMC,MAAM,GAAG,IAAIhB,YAAJ,CAAiB;AAC9BiB,EAAAA,KAAK,EAAE,IAAIhB,aAAJ,EADuB;AAE9Ba,EAAAA,IAAI,EAAEA;AAFwB,CAAjB,CAAf;;AAKA,SAASI,GAAT,GAAe;AACb,sBACE,QAAC,cAAD;AAAgB,IAAA,MAAM,EAAEF,MAAxB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;KARQE,G;AAUT,eAAeA,GAAf","sourcesContent":["// Uncomment the editor you would like to see\n\nimport Editor from './components/TipTap/TipTap';\n// import Editor from './components/Draft/Draft';\n// import Editor from './components/Slate/MySlate';\n\nimport { ApolloClient, InMemoryCache, ApolloProvider, HttpLink, from } from '@apollo/client';\nimport { onError } from '@apollo/client/link/error';\n\nconst errorLink = onError(({ graphqlErrors, networkError }) => {\n  if (graphqlErrors) {\n    graphqlErrors.map(({ message, location, path }) => {\n      alert(`GraphQL error ${message}`);\n    })\n  }\n});\n\nconst link = from([\n  errorLink,\n  new HttpLink({uri: \"http://localhost:8000/graphql\"}),\n]);\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: link\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <div className=\"App\">\n        <Editor />\n      </div>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}