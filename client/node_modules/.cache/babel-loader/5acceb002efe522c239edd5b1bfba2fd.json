{"ast":null,"code":"var _jsxFileName = \"/Users/srailkar/Desktop/my-app/client/src/components/TipTap/TipTap.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useEditor, EditorContent } from '@tiptap/react';\nimport { defaultExtensions } from '@tiptap/starter-kit';\nimport './styles.scss';\nimport MenuBar from './MenuBar';\nimport { useQuery, gql } from '@apollo/client';\nimport { LOAD_HUB } from '../../graphql/queries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Editor = () => {\n  _s();\n\n  const editor = useEditor({\n    extensions: [...defaultExtensions()],\n    content: `\n      <h2>\n        Hi there,\n      </h2>\n      <p>\n        this is a basic <em>basic</em> example of <strong>tiptap</strong>. Sure, there are all kind of basic text styles you’d probably expect from a text editor. But wait until you see the lists:\n      </p>\n      <ul>\n        <li>\n          That’s a bullet list with one …\n        </li>\n        <li>\n          … or two list items.\n        </li>\n      </ul>\n      <p>\n        Isn’t that great? And all of that is editable. But wait, there’s more. Let’s try a code block:\n      </p>\n      <pre><code class=\"language-css\">body {\n  display: none;\n}</code></pre>\n      <p>\n        I know, I know, this is impressive. It’s only the tip of the iceberg though. Give it a try and click a little bit around. Don’t forget to check the other examples too.\n      </p>\n      <blockquote>\n        Wow, that’s amazing. Good work, boy! 👏\n        <br />\n        — Mom\n      </blockquote>\n    `,\n\n    onUpdate({\n      editor\n    }) {\n      console.log(JSON.stringify(editor.getJSON()));\n      console.log(editor.getHTML());\n    }\n\n  });\n  const {\n    error,\n    loading,\n    data\n  } = useQuery(LOAD_HUBS);\n  useEffect(() => {\n    console.log(data);\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MenuBar, {\n      editor: editor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(EditorContent, {\n      editor: editor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Editor, \"/29tEAzAW8g6fBUh5oZn7F9tDuQ=\", false, function () {\n  return [useEditor, useQuery];\n});\n\n_c = Editor;\nexport default Editor;\n\nvar _c;\n\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"sources":["/Users/srailkar/Desktop/my-app/client/src/components/TipTap/TipTap.jsx"],"names":["React","useEffect","useEditor","EditorContent","defaultExtensions","MenuBar","useQuery","gql","LOAD_HUB","Editor","editor","extensions","content","onUpdate","console","log","JSON","stringify","getJSON","getHTML","error","loading","data","LOAD_HUBS"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,aAApB,QAAyC,eAAzC;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,OAAO,eAAP;AAEA,OAAOC,OAAP,MAAoB,WAApB;AAEA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AACA,SAASC,QAAT,QAAyB,uBAAzB;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AAEnB,QAAMC,MAAM,GAAGR,SAAS,CAAC;AACvBS,IAAAA,UAAU,EAAE,CACV,GAAGP,iBAAiB,EADV,CADW;AAIvBQ,IAAAA,OAAO,EAAG;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAjC2B;;AAkCvBC,IAAAA,QAAQ,CAAC;AAAEH,MAAAA;AAAF,KAAD,EAAa;AACnBI,MAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeP,MAAM,CAACQ,OAAP,EAAf,CAAZ;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACS,OAAP,EAAZ;AACD;;AArCsB,GAAD,CAAxB;AAwCE,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA;AAAlB,MAA2BhB,QAAQ,CAACiB,SAAD,CAAzC;AAEAtB,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,OAAO,CAACC,GAAR,CAAYO,IAAZ;AACD,GAFQ,EAEN,CAACA,IAAD,CAFM,CAAT;AAIA,sBACE;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,MAAM,EAAEZ;AAAjB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,aAAD;AAAe,MAAA,MAAM,EAAEA;AAAvB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAtDH;;GAAMD,M;UAEWP,S,EAwCoBI,Q;;;KA1C/BG,M;AAwDN,eAAeA,MAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport { useEditor, EditorContent } from '@tiptap/react'\nimport { defaultExtensions } from '@tiptap/starter-kit'\nimport './styles.scss'\n\nimport MenuBar from './MenuBar';\n\nimport { useQuery, gql } from '@apollo/client';\nimport { LOAD_HUB } from '../../graphql/queries';\n\nconst Editor = () => {\n\n  const editor = useEditor({\n    extensions: [\n      ...defaultExtensions(),\n    ],\n    content: `\n      <h2>\n        Hi there,\n      </h2>\n      <p>\n        this is a basic <em>basic</em> example of <strong>tiptap</strong>. Sure, there are all kind of basic text styles you’d probably expect from a text editor. But wait until you see the lists:\n      </p>\n      <ul>\n        <li>\n          That’s a bullet list with one …\n        </li>\n        <li>\n          … or two list items.\n        </li>\n      </ul>\n      <p>\n        Isn’t that great? And all of that is editable. But wait, there’s more. Let’s try a code block:\n      </p>\n      <pre><code class=\"language-css\">body {\n  display: none;\n}</code></pre>\n      <p>\n        I know, I know, this is impressive. It’s only the tip of the iceberg though. Give it a try and click a little bit around. Don’t forget to check the other examples too.\n      </p>\n      <blockquote>\n        Wow, that’s amazing. Good work, boy! 👏\n        <br />\n        — Mom\n      </blockquote>\n    `,\n    onUpdate({ editor }) {\n      console.log(JSON.stringify(editor.getJSON()));\n      console.log(editor.getHTML());\n    },\n  })\n\n    const { error, loading, data } = useQuery(LOAD_HUBS);\n\n    useEffect(() => {\n      console.log(data);\n    }, [data]);\n  \n    return (\n      <div>\n        <MenuBar editor={editor} />\n        <EditorContent editor={editor} />\n      </div>\n    )\n  }\n\nexport default Editor;"]},"metadata":{},"sourceType":"module"}