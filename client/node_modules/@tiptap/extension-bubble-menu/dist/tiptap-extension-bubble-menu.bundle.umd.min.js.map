{"version":3,"file":"tiptap-extension-bubble-menu.bundle.umd.min.js","sources":["../../../node_modules/prosemirror-model/src/diff.js","../../../node_modules/prosemirror-model/src/fragment.js","../../../node_modules/prosemirror-model/src/comparedeep.js","../../../node_modules/prosemirror-model/src/mark.js","../../../node_modules/prosemirror-model/src/replace.js","../../../node_modules/prosemirror-model/src/resolvedpos.js","../../../node_modules/prosemirror-model/src/node.js","../../../node_modules/prosemirror-model/src/content.js","../../../node_modules/prosemirror-model/src/schema.js","../../../node_modules/prosemirror-model/src/from_dom.js","../../../node_modules/prosemirror-model/src/to_dom.js","../../../node_modules/prosemirror-transform/src/map.js","../../../node_modules/prosemirror-transform/src/transform.js","../../../node_modules/prosemirror-transform/src/step.js","../../../node_modules/prosemirror-transform/src/replace_step.js","../../../node_modules/prosemirror-transform/src/mark_step.js","../../../node_modules/prosemirror-transform/src/structure.js","../../../node_modules/prosemirror-transform/src/replace.js","../../../node_modules/prosemirror-transform/src/mark.js","../../../node_modules/prosemirror-state/src/selection.js","../../../node_modules/prosemirror-state/src/transaction.js","../../../node_modules/prosemirror-state/src/state.js","../../../node_modules/prosemirror-state/src/plugin.js","../../../node_modules/@popperjs/core/lib/enums.js","../../../node_modules/@popperjs/core/lib/dom-utils/getNodeName.js","../../../node_modules/@popperjs/core/lib/dom-utils/getWindow.js","../../../node_modules/@popperjs/core/lib/dom-utils/instanceOf.js","../../../node_modules/@popperjs/core/lib/modifiers/applyStyles.js","../../../node_modules/@popperjs/core/lib/utils/getBasePlacement.js","../../../node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js","../../../node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js","../../../node_modules/@popperjs/core/lib/dom-utils/contains.js","../../../node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js","../../../node_modules/@popperjs/core/lib/dom-utils/isTableElement.js","../../../node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js","../../../node_modules/@popperjs/core/lib/dom-utils/getParentNode.js","../../../node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js","../../../node_modules/@popperjs/core/lib/utils/getMainAxisFromPlacement.js","../../../node_modules/@popperjs/core/lib/utils/math.js","../../../node_modules/@popperjs/core/lib/utils/within.js","../../../node_modules/@popperjs/core/lib/utils/mergePaddingObject.js","../../../node_modules/@popperjs/core/lib/utils/getFreshSideObject.js","../../../node_modules/@popperjs/core/lib/utils/expandToHashMap.js","../../../node_modules/@popperjs/core/lib/modifiers/computeStyles.js","../../../node_modules/@popperjs/core/lib/modifiers/eventListeners.js","../../../node_modules/@popperjs/core/lib/utils/getOppositePlacement.js","../../../node_modules/@popperjs/core/lib/utils/getOppositeVariationPlacement.js","../../../node_modules/@popperjs/core/lib/dom-utils/getWindowScroll.js","../../../node_modules/@popperjs/core/lib/dom-utils/getWindowScrollBarX.js","../../../node_modules/@popperjs/core/lib/dom-utils/isScrollParent.js","../../../node_modules/@popperjs/core/lib/dom-utils/getScrollParent.js","../../../node_modules/@popperjs/core/lib/dom-utils/listScrollParents.js","../../../node_modules/@popperjs/core/lib/utils/rectToClientRect.js","../../../node_modules/@popperjs/core/lib/dom-utils/getClippingRect.js","../../../node_modules/@popperjs/core/lib/dom-utils/getViewportRect.js","../../../node_modules/@popperjs/core/lib/dom-utils/getDocumentRect.js","../../../node_modules/@popperjs/core/lib/utils/getVariation.js","../../../node_modules/@popperjs/core/lib/utils/computeOffsets.js","../../../node_modules/@popperjs/core/lib/utils/detectOverflow.js","../../../node_modules/@popperjs/core/lib/utils/computeAutoPlacement.js","../../../node_modules/@popperjs/core/lib/modifiers/hide.js","../../../node_modules/@popperjs/core/lib/dom-utils/getCompositeRect.js","../../../node_modules/@popperjs/core/lib/dom-utils/getNodeScroll.js","../../../node_modules/@popperjs/core/lib/dom-utils/getHTMLElementScroll.js","../../../node_modules/@popperjs/core/lib/utils/orderModifiers.js","../../../node_modules/@popperjs/core/lib/utils/format.js","../../../node_modules/@popperjs/core/lib/utils/validateModifiers.js","../../../node_modules/@popperjs/core/lib/createPopper.js","../../../node_modules/@popperjs/core/lib/utils/debounce.js","../../../node_modules/@popperjs/core/lib/utils/uniqueBy.js","../../../node_modules/@popperjs/core/lib/utils/mergeByName.js","../../../node_modules/@popperjs/core/lib/popper.js","../../../node_modules/@popperjs/core/lib/modifiers/popperOffsets.js","../../../node_modules/@popperjs/core/lib/modifiers/offset.js","../../../node_modules/@popperjs/core/lib/modifiers/flip.js","../../../node_modules/@popperjs/core/lib/modifiers/preventOverflow.js","../../../node_modules/@popperjs/core/lib/utils/getAltAxis.js","../../../node_modules/@popperjs/core/lib/modifiers/arrow.js","../../../node_modules/tippy.js/src/constants.ts","../../../node_modules/tippy.js/src/utils.ts","../../../node_modules/tippy.js/src/dom-utils.ts","../../../node_modules/tippy.js/src/bindGlobalEventListeners.ts","../../../node_modules/tippy.js/src/browser.ts","../../../node_modules/tippy.js/src/validation.ts","../../../node_modules/tippy.js/src/props.ts","../../../node_modules/tippy.js/src/template.ts","../../../node_modules/tippy.js/src/createTippy.ts","../../../node_modules/tippy.js/src/index.ts","../../../node_modules/tippy.js/src/addons/createSingleton.ts","../../../node_modules/tippy.js/build/base.js","../src/bubble-menu-plugin.ts","../src/bubble-menu.ts"],"sourcesContent":["export function findDiffStart(a, b, pos) {\n  for (let i = 0;; i++) {\n    if (i == a.childCount || i == b.childCount)\n      return a.childCount == b.childCount ? null : pos\n\n    let childA = a.child(i), childB = b.child(i)\n    if (childA == childB) { pos += childA.nodeSize; continue }\n\n    if (!childA.sameMarkup(childB)) return pos\n\n    if (childA.isText && childA.text != childB.text) {\n      for (let j = 0; childA.text[j] == childB.text[j]; j++)\n        pos++\n      return pos\n    }\n    if (childA.content.size || childB.content.size) {\n      let inner = findDiffStart(childA.content, childB.content, pos + 1)\n      if (inner != null) return inner\n    }\n    pos += childA.nodeSize\n  }\n}\n\nexport function findDiffEnd(a, b, posA, posB) {\n  for (let iA = a.childCount, iB = b.childCount;;) {\n    if (iA == 0 || iB == 0)\n      return iA == iB ? null : {a: posA, b: posB}\n\n    let childA = a.child(--iA), childB = b.child(--iB), size = childA.nodeSize\n    if (childA == childB) {\n      posA -= size; posB -= size\n      continue\n    }\n\n    if (!childA.sameMarkup(childB)) return {a: posA, b: posB}\n\n    if (childA.isText && childA.text != childB.text) {\n      let same = 0, minSize = Math.min(childA.text.length, childB.text.length)\n      while (same < minSize && childA.text[childA.text.length - same - 1] == childB.text[childB.text.length - same - 1]) {\n        same++; posA--; posB--\n      }\n      return {a: posA, b: posB}\n    }\n    if (childA.content.size || childB.content.size) {\n      let inner = findDiffEnd(childA.content, childB.content, posA - 1, posB - 1)\n      if (inner) return inner\n    }\n    posA -= size; posB -= size\n  }\n}\n","import {findDiffStart, findDiffEnd} from \"./diff\"\n\n// ::- A fragment represents a node's collection of child nodes.\n//\n// Like nodes, fragments are persistent data structures, and you\n// should not mutate them or their content. Rather, you create new\n// instances whenever needed. The API tries to make this easy.\nexport class Fragment {\n  constructor(content, size) {\n    this.content = content\n    // :: number\n    // The size of the fragment, which is the total of the size of its\n    // content nodes.\n    this.size = size || 0\n    if (size == null) for (let i = 0; i < content.length; i++)\n      this.size += content[i].nodeSize\n  }\n\n  // :: (number, number, (node: Node, start: number, parent: Node, index: number) → ?bool, ?number)\n  // Invoke a callback for all descendant nodes between the given two\n  // positions (relative to start of this fragment). Doesn't descend\n  // into a node when the callback returns `false`.\n  nodesBetween(from, to, f, nodeStart = 0, parent) {\n    for (let i = 0, pos = 0; pos < to; i++) {\n      let child = this.content[i], end = pos + child.nodeSize\n      if (end > from && f(child, nodeStart + pos, parent, i) !== false && child.content.size) {\n        let start = pos + 1\n        child.nodesBetween(Math.max(0, from - start),\n                           Math.min(child.content.size, to - start),\n                           f, nodeStart + start)\n      }\n      pos = end\n    }\n  }\n\n  // :: ((node: Node, pos: number, parent: Node) → ?bool)\n  // Call the given callback for every descendant node. The callback\n  // may return `false` to prevent traversal of a given node's children.\n  descendants(f) {\n    this.nodesBetween(0, this.size, f)\n  }\n\n  // :: (number, number, ?string, ?string) → string\n  // Extract the text between `from` and `to`. See the same method on\n  // [`Node`](#model.Node.textBetween).\n  textBetween(from, to, blockSeparator, leafText) {\n    let text = \"\", separated = true\n    this.nodesBetween(from, to, (node, pos) => {\n      if (node.isText) {\n        text += node.text.slice(Math.max(from, pos) - pos, to - pos)\n        separated = !blockSeparator\n      } else if (node.isLeaf && leafText) {\n        text += leafText\n        separated = !blockSeparator\n      } else if (!separated && node.isBlock) {\n        text += blockSeparator\n        separated = true\n      }\n    }, 0)\n    return text\n  }\n\n  // :: (Fragment) → Fragment\n  // Create a new fragment containing the combined content of this\n  // fragment and the other.\n  append(other) {\n    if (!other.size) return this\n    if (!this.size) return other\n    let last = this.lastChild, first = other.firstChild, content = this.content.slice(), i = 0\n    if (last.isText && last.sameMarkup(first)) {\n      content[content.length - 1] = last.withText(last.text + first.text)\n      i = 1\n    }\n    for (; i < other.content.length; i++) content.push(other.content[i])\n    return new Fragment(content, this.size + other.size)\n  }\n\n  // :: (number, ?number) → Fragment\n  // Cut out the sub-fragment between the two given positions.\n  cut(from, to) {\n    if (to == null) to = this.size\n    if (from == 0 && to == this.size) return this\n    let result = [], size = 0\n    if (to > from) for (let i = 0, pos = 0; pos < to; i++) {\n      let child = this.content[i], end = pos + child.nodeSize\n      if (end > from) {\n        if (pos < from || end > to) {\n          if (child.isText)\n            child = child.cut(Math.max(0, from - pos), Math.min(child.text.length, to - pos))\n          else\n            child = child.cut(Math.max(0, from - pos - 1), Math.min(child.content.size, to - pos - 1))\n        }\n        result.push(child)\n        size += child.nodeSize\n      }\n      pos = end\n    }\n    return new Fragment(result, size)\n  }\n\n  cutByIndex(from, to) {\n    if (from == to) return Fragment.empty\n    if (from == 0 && to == this.content.length) return this\n    return new Fragment(this.content.slice(from, to))\n  }\n\n  // :: (number, Node) → Fragment\n  // Create a new fragment in which the node at the given index is\n  // replaced by the given node.\n  replaceChild(index, node) {\n    let current = this.content[index]\n    if (current == node) return this\n    let copy = this.content.slice()\n    let size = this.size + node.nodeSize - current.nodeSize\n    copy[index] = node\n    return new Fragment(copy, size)\n  }\n\n  // : (Node) → Fragment\n  // Create a new fragment by prepending the given node to this\n  // fragment.\n  addToStart(node) {\n    return new Fragment([node].concat(this.content), this.size + node.nodeSize)\n  }\n\n  // : (Node) → Fragment\n  // Create a new fragment by appending the given node to this\n  // fragment.\n  addToEnd(node) {\n    return new Fragment(this.content.concat(node), this.size + node.nodeSize)\n  }\n\n  // :: (Fragment) → bool\n  // Compare this fragment to another one.\n  eq(other) {\n    if (this.content.length != other.content.length) return false\n    for (let i = 0; i < this.content.length; i++)\n      if (!this.content[i].eq(other.content[i])) return false\n    return true\n  }\n\n  // :: ?Node\n  // The first child of the fragment, or `null` if it is empty.\n  get firstChild() { return this.content.length ? this.content[0] : null }\n\n  // :: ?Node\n  // The last child of the fragment, or `null` if it is empty.\n  get lastChild() { return this.content.length ? this.content[this.content.length - 1] : null }\n\n  // :: number\n  // The number of child nodes in this fragment.\n  get childCount() { return this.content.length }\n\n  // :: (number) → Node\n  // Get the child node at the given index. Raise an error when the\n  // index is out of range.\n  child(index) {\n    let found = this.content[index]\n    if (!found) throw new RangeError(\"Index \" + index + \" out of range for \" + this)\n    return found\n  }\n\n  // :: (number) → ?Node\n  // Get the child node at the given index, if it exists.\n  maybeChild(index) {\n    return this.content[index]\n  }\n\n  // :: ((node: Node, offset: number, index: number))\n  // Call `f` for every child node, passing the node, its offset\n  // into this parent node, and its index.\n  forEach(f) {\n    for (let i = 0, p = 0; i < this.content.length; i++) {\n      let child = this.content[i]\n      f(child, p, i)\n      p += child.nodeSize\n    }\n  }\n\n  // :: (Fragment) → ?number\n  // Find the first position at which this fragment and another\n  // fragment differ, or `null` if they are the same.\n  findDiffStart(other, pos = 0) {\n    return findDiffStart(this, other, pos)\n  }\n\n  // :: (Fragment) → ?{a: number, b: number}\n  // Find the first position, searching from the end, at which this\n  // fragment and the given fragment differ, or `null` if they are the\n  // same. Since this position will not be the same in both nodes, an\n  // object with two separate positions is returned.\n  findDiffEnd(other, pos = this.size, otherPos = other.size) {\n    return findDiffEnd(this, other, pos, otherPos)\n  }\n\n  // : (number, ?number) → {index: number, offset: number}\n  // Find the index and inner offset corresponding to a given relative\n  // position in this fragment. The result object will be reused\n  // (overwritten) the next time the function is called. (Not public.)\n  findIndex(pos, round = -1) {\n    if (pos == 0) return retIndex(0, pos)\n    if (pos == this.size) return retIndex(this.content.length, pos)\n    if (pos > this.size || pos < 0) throw new RangeError(`Position ${pos} outside of fragment (${this})`)\n    for (let i = 0, curPos = 0;; i++) {\n      let cur = this.child(i), end = curPos + cur.nodeSize\n      if (end >= pos) {\n        if (end == pos || round > 0) return retIndex(i + 1, end)\n        return retIndex(i, curPos)\n      }\n      curPos = end\n    }\n  }\n\n  // :: () → string\n  // Return a debugging string that describes this fragment.\n  toString() { return \"<\" + this.toStringInner() + \">\" }\n\n  toStringInner() { return this.content.join(\", \") }\n\n  // :: () → ?Object\n  // Create a JSON-serializeable representation of this fragment.\n  toJSON() {\n    return this.content.length ? this.content.map(n => n.toJSON()) : null\n  }\n\n  // :: (Schema, ?Object) → Fragment\n  // Deserialize a fragment from its JSON representation.\n  static fromJSON(schema, value) {\n    if (!value) return Fragment.empty\n    if (!Array.isArray(value)) throw new RangeError(\"Invalid input for Fragment.fromJSON\")\n    return new Fragment(value.map(schema.nodeFromJSON))\n  }\n\n  // :: ([Node]) → Fragment\n  // Build a fragment from an array of nodes. Ensures that adjacent\n  // text nodes with the same marks are joined together.\n  static fromArray(array) {\n    if (!array.length) return Fragment.empty\n    let joined, size = 0\n    for (let i = 0; i < array.length; i++) {\n      let node = array[i]\n      size += node.nodeSize\n      if (i && node.isText && array[i - 1].sameMarkup(node)) {\n        if (!joined) joined = array.slice(0, i)\n        joined[joined.length - 1] = node.withText(joined[joined.length - 1].text + node.text)\n      } else if (joined) {\n        joined.push(node)\n      }\n    }\n    return new Fragment(joined || array, size)\n  }\n\n  // :: (?union<Fragment, Node, [Node]>) → Fragment\n  // Create a fragment from something that can be interpreted as a set\n  // of nodes. For `null`, it returns the empty fragment. For a\n  // fragment, the fragment itself. For a node or array of nodes, a\n  // fragment containing those nodes.\n  static from(nodes) {\n    if (!nodes) return Fragment.empty\n    if (nodes instanceof Fragment) return nodes\n    if (Array.isArray(nodes)) return this.fromArray(nodes)\n    if (nodes.attrs) return new Fragment([nodes], nodes.nodeSize)\n    throw new RangeError(\"Can not convert \" + nodes + \" to a Fragment\" +\n                         (nodes.nodesBetween ? \" (looks like multiple versions of prosemirror-model were loaded)\" : \"\"))\n  }\n}\n\nconst found = {index: 0, offset: 0}\nfunction retIndex(index, offset) {\n  found.index = index\n  found.offset = offset\n  return found\n}\n\n// :: Fragment\n// An empty fragment. Intended to be reused whenever a node doesn't\n// contain anything (rather than allocating a new empty fragment for\n// each leaf node).\nFragment.empty = new Fragment([], 0)\n","export function compareDeep(a, b) {\n  if (a === b) return true\n  if (!(a && typeof a == \"object\") ||\n      !(b && typeof b == \"object\")) return false\n  let array = Array.isArray(a)\n  if (Array.isArray(b) != array) return false\n  if (array) {\n    if (a.length != b.length) return false\n    for (let i = 0; i < a.length; i++) if (!compareDeep(a[i], b[i])) return false\n  } else {\n    for (let p in a) if (!(p in b) || !compareDeep(a[p], b[p])) return false\n    for (let p in b) if (!(p in a)) return false\n  }\n  return true\n}\n","import {compareDeep} from \"./comparedeep\"\n\n// ::- A mark is a piece of information that can be attached to a node,\n// such as it being emphasized, in code font, or a link. It has a type\n// and optionally a set of attributes that provide further information\n// (such as the target of the link). Marks are created through a\n// `Schema`, which controls which types exist and which\n// attributes they have.\nexport class Mark {\n  constructor(type, attrs) {\n    // :: MarkType\n    // The type of this mark.\n    this.type = type\n    // :: Object\n    // The attributes associated with this mark.\n    this.attrs = attrs\n  }\n\n  // :: ([Mark]) → [Mark]\n  // Given a set of marks, create a new set which contains this one as\n  // well, in the right position. If this mark is already in the set,\n  // the set itself is returned. If any marks that are set to be\n  // [exclusive](#model.MarkSpec.excludes) with this mark are present,\n  // those are replaced by this one.\n  addToSet(set) {\n    let copy, placed = false\n    for (let i = 0; i < set.length; i++) {\n      let other = set[i]\n      if (this.eq(other)) return set\n      if (this.type.excludes(other.type)) {\n        if (!copy) copy = set.slice(0, i)\n      } else if (other.type.excludes(this.type)) {\n        return set\n      } else {\n        if (!placed && other.type.rank > this.type.rank) {\n          if (!copy) copy = set.slice(0, i)\n          copy.push(this)\n          placed = true\n        }\n        if (copy) copy.push(other)\n      }\n    }\n    if (!copy) copy = set.slice()\n    if (!placed) copy.push(this)\n    return copy\n  }\n\n  // :: ([Mark]) → [Mark]\n  // Remove this mark from the given set, returning a new set. If this\n  // mark is not in the set, the set itself is returned.\n  removeFromSet(set) {\n    for (let i = 0; i < set.length; i++)\n      if (this.eq(set[i]))\n        return set.slice(0, i).concat(set.slice(i + 1))\n    return set\n  }\n\n  // :: ([Mark]) → bool\n  // Test whether this mark is in the given set of marks.\n  isInSet(set) {\n    for (let i = 0; i < set.length; i++)\n      if (this.eq(set[i])) return true\n    return false\n  }\n\n  // :: (Mark) → bool\n  // Test whether this mark has the same type and attributes as\n  // another mark.\n  eq(other) {\n    return this == other ||\n      (this.type == other.type && compareDeep(this.attrs, other.attrs))\n  }\n\n  // :: () → Object\n  // Convert this mark to a JSON-serializeable representation.\n  toJSON() {\n    let obj = {type: this.type.name}\n    for (let _ in this.attrs) {\n      obj.attrs = this.attrs\n      break\n    }\n    return obj\n  }\n\n  // :: (Schema, Object) → Mark\n  static fromJSON(schema, json) {\n    if (!json) throw new RangeError(\"Invalid input for Mark.fromJSON\")\n    let type = schema.marks[json.type]\n    if (!type) throw new RangeError(`There is no mark type ${json.type} in this schema`)\n    return type.create(json.attrs)\n  }\n\n  // :: ([Mark], [Mark]) → bool\n  // Test whether two sets of marks are identical.\n  static sameSet(a, b) {\n    if (a == b) return true\n    if (a.length != b.length) return false\n    for (let i = 0; i < a.length; i++)\n      if (!a[i].eq(b[i])) return false\n    return true\n  }\n\n  // :: (?union<Mark, [Mark]>) → [Mark]\n  // Create a properly sorted mark set from null, a single mark, or an\n  // unsorted array of marks.\n  static setFrom(marks) {\n    if (!marks || marks.length == 0) return Mark.none\n    if (marks instanceof Mark) return [marks]\n    let copy = marks.slice()\n    copy.sort((a, b) => a.type.rank - b.type.rank)\n    return copy\n  }\n}\n\n// :: [Mark] The empty set of marks.\nMark.none = []\n","import {Fragment} from \"./fragment\"\n\n// ReplaceError:: class extends Error\n// Error type raised by [`Node.replace`](#model.Node.replace) when\n// given an invalid replacement.\n\nexport function ReplaceError(message) {\n  let err = Error.call(this, message)\n  err.__proto__ = ReplaceError.prototype\n  return err\n}\n\nReplaceError.prototype = Object.create(Error.prototype)\nReplaceError.prototype.constructor = ReplaceError\nReplaceError.prototype.name = \"ReplaceError\"\n\n// ::- A slice represents a piece cut out of a larger document. It\n// stores not only a fragment, but also the depth up to which nodes on\n// both side are ‘open’ (cut through).\nexport class Slice {\n  // :: (Fragment, number, number)\n  // Create a slice. When specifying a non-zero open depth, you must\n  // make sure that there are nodes of at least that depth at the\n  // appropriate side of the fragment—i.e. if the fragment is an empty\n  // paragraph node, `openStart` and `openEnd` can't be greater than 1.\n  //\n  // It is not necessary for the content of open nodes to conform to\n  // the schema's content constraints, though it should be a valid\n  // start/end/middle for such a node, depending on which sides are\n  // open.\n  constructor(content, openStart, openEnd) {\n    // :: Fragment The slice's content.\n    this.content = content\n    // :: number The open depth at the start.\n    this.openStart = openStart\n    // :: number The open depth at the end.\n    this.openEnd = openEnd\n  }\n\n  // :: number\n  // The size this slice would add when inserted into a document.\n  get size() {\n    return this.content.size - this.openStart - this.openEnd\n  }\n\n  insertAt(pos, fragment) {\n    let content = insertInto(this.content, pos + this.openStart, fragment, null)\n    return content && new Slice(content, this.openStart, this.openEnd)\n  }\n\n  removeBetween(from, to) {\n    return new Slice(removeRange(this.content, from + this.openStart, to + this.openStart), this.openStart, this.openEnd)\n  }\n\n  // :: (Slice) → bool\n  // Tests whether this slice is equal to another slice.\n  eq(other) {\n    return this.content.eq(other.content) && this.openStart == other.openStart && this.openEnd == other.openEnd\n  }\n\n  toString() {\n    return this.content + \"(\" + this.openStart + \",\" + this.openEnd + \")\"\n  }\n\n  // :: () → ?Object\n  // Convert a slice to a JSON-serializable representation.\n  toJSON() {\n    if (!this.content.size) return null\n    let json = {content: this.content.toJSON()}\n    if (this.openStart > 0) json.openStart = this.openStart\n    if (this.openEnd > 0) json.openEnd = this.openEnd\n    return json\n  }\n\n  // :: (Schema, ?Object) → Slice\n  // Deserialize a slice from its JSON representation.\n  static fromJSON(schema, json) {\n    if (!json) return Slice.empty\n    let openStart = json.openStart || 0, openEnd = json.openEnd || 0\n    if (typeof openStart != \"number\" || typeof openEnd != \"number\")\n      throw new RangeError(\"Invalid input for Slice.fromJSON\")\n    return new Slice(Fragment.fromJSON(schema, json.content), openStart, openEnd)\n  }\n\n  // :: (Fragment, ?bool) → Slice\n  // Create a slice from a fragment by taking the maximum possible\n  // open value on both side of the fragment.\n  static maxOpen(fragment, openIsolating=true) {\n    let openStart = 0, openEnd = 0\n    for (let n = fragment.firstChild; n && !n.isLeaf && (openIsolating || !n.type.spec.isolating); n = n.firstChild) openStart++\n    for (let n = fragment.lastChild; n && !n.isLeaf && (openIsolating || !n.type.spec.isolating); n = n.lastChild) openEnd++\n    return new Slice(fragment, openStart, openEnd)\n  }\n}\n\nfunction removeRange(content, from, to) {\n  let {index, offset} = content.findIndex(from), child = content.maybeChild(index)\n  let {index: indexTo, offset: offsetTo} = content.findIndex(to)\n  if (offset == from || child.isText) {\n    if (offsetTo != to && !content.child(indexTo).isText) throw new RangeError(\"Removing non-flat range\")\n    return content.cut(0, from).append(content.cut(to))\n  }\n  if (index != indexTo) throw new RangeError(\"Removing non-flat range\")\n  return content.replaceChild(index, child.copy(removeRange(child.content, from - offset - 1, to - offset - 1)))\n}\n\nfunction insertInto(content, dist, insert, parent) {\n  let {index, offset} = content.findIndex(dist), child = content.maybeChild(index)\n  if (offset == dist || child.isText) {\n    if (parent && !parent.canReplace(index, index, insert)) return null\n    return content.cut(0, dist).append(insert).append(content.cut(dist))\n  }\n  let inner = insertInto(child.content, dist - offset - 1, insert)\n  return inner && content.replaceChild(index, child.copy(inner))\n}\n\n// :: Slice\n// The empty slice.\nSlice.empty = new Slice(Fragment.empty, 0, 0)\n\nexport function replace($from, $to, slice) {\n  if (slice.openStart > $from.depth)\n    throw new ReplaceError(\"Inserted content deeper than insertion position\")\n  if ($from.depth - slice.openStart != $to.depth - slice.openEnd)\n    throw new ReplaceError(\"Inconsistent open depths\")\n  return replaceOuter($from, $to, slice, 0)\n}\n\nfunction replaceOuter($from, $to, slice, depth) {\n  let index = $from.index(depth), node = $from.node(depth)\n  if (index == $to.index(depth) && depth < $from.depth - slice.openStart) {\n    let inner = replaceOuter($from, $to, slice, depth + 1)\n    return node.copy(node.content.replaceChild(index, inner))\n  } else if (!slice.content.size) {\n    return close(node, replaceTwoWay($from, $to, depth))\n  } else if (!slice.openStart && !slice.openEnd && $from.depth == depth && $to.depth == depth) { // Simple, flat case\n    let parent = $from.parent, content = parent.content\n    return close(parent, content.cut(0, $from.parentOffset).append(slice.content).append(content.cut($to.parentOffset)))\n  } else {\n    let {start, end} = prepareSliceForReplace(slice, $from)\n    return close(node, replaceThreeWay($from, start, end, $to, depth))\n  }\n}\n\nfunction checkJoin(main, sub) {\n  if (!sub.type.compatibleContent(main.type))\n    throw new ReplaceError(\"Cannot join \" + sub.type.name + \" onto \" + main.type.name)\n}\n\nfunction joinable($before, $after, depth) {\n  let node = $before.node(depth)\n  checkJoin(node, $after.node(depth))\n  return node\n}\n\nfunction addNode(child, target) {\n  let last = target.length - 1\n  if (last >= 0 && child.isText && child.sameMarkup(target[last]))\n    target[last] = child.withText(target[last].text + child.text)\n  else\n    target.push(child)\n}\n\nfunction addRange($start, $end, depth, target) {\n  let node = ($end || $start).node(depth)\n  let startIndex = 0, endIndex = $end ? $end.index(depth) : node.childCount\n  if ($start) {\n    startIndex = $start.index(depth)\n    if ($start.depth > depth) {\n      startIndex++\n    } else if ($start.textOffset) {\n      addNode($start.nodeAfter, target)\n      startIndex++\n    }\n  }\n  for (let i = startIndex; i < endIndex; i++) addNode(node.child(i), target)\n  if ($end && $end.depth == depth && $end.textOffset)\n    addNode($end.nodeBefore, target)\n}\n\nfunction close(node, content) {\n  if (!node.type.validContent(content))\n    throw new ReplaceError(\"Invalid content for node \" + node.type.name)\n  return node.copy(content)\n}\n\nfunction replaceThreeWay($from, $start, $end, $to, depth) {\n  let openStart = $from.depth > depth && joinable($from, $start, depth + 1)\n  let openEnd = $to.depth > depth && joinable($end, $to, depth + 1)\n\n  let content = []\n  addRange(null, $from, depth, content)\n  if (openStart && openEnd && $start.index(depth) == $end.index(depth)) {\n    checkJoin(openStart, openEnd)\n    addNode(close(openStart, replaceThreeWay($from, $start, $end, $to, depth + 1)), content)\n  } else {\n    if (openStart)\n      addNode(close(openStart, replaceTwoWay($from, $start, depth + 1)), content)\n    addRange($start, $end, depth, content)\n    if (openEnd)\n      addNode(close(openEnd, replaceTwoWay($end, $to, depth + 1)), content)\n  }\n  addRange($to, null, depth, content)\n  return new Fragment(content)\n}\n\nfunction replaceTwoWay($from, $to, depth) {\n  let content = []\n  addRange(null, $from, depth, content)\n  if ($from.depth > depth) {\n    let type = joinable($from, $to, depth + 1)\n    addNode(close(type, replaceTwoWay($from, $to, depth + 1)), content)\n  }\n  addRange($to, null, depth, content)\n  return new Fragment(content)\n}\n\nfunction prepareSliceForReplace(slice, $along) {\n  let extra = $along.depth - slice.openStart, parent = $along.node(extra)\n  let node = parent.copy(slice.content)\n  for (let i = extra - 1; i >= 0; i--)\n    node = $along.node(i).copy(Fragment.from(node))\n  return {start: node.resolveNoCache(slice.openStart + extra),\n          end: node.resolveNoCache(node.content.size - slice.openEnd - extra)}\n}\n","import {Mark} from \"./mark\"\n\n// ::- You can [_resolve_](#model.Node.resolve) a position to get more\n// information about it. Objects of this class represent such a\n// resolved position, providing various pieces of context information,\n// and some helper methods.\n//\n// Throughout this interface, methods that take an optional `depth`\n// parameter will interpret undefined as `this.depth` and negative\n// numbers as `this.depth + value`.\nexport class ResolvedPos {\n  constructor(pos, path, parentOffset) {\n    // :: number The position that was resolved.\n    this.pos = pos\n    this.path = path\n    // :: number\n    // The number of levels the parent node is from the root. If this\n    // position points directly into the root node, it is 0. If it\n    // points into a top-level paragraph, 1, and so on.\n    this.depth = path.length / 3 - 1\n    // :: number The offset this position has into its parent node.\n    this.parentOffset = parentOffset\n  }\n\n  resolveDepth(val) {\n    if (val == null) return this.depth\n    if (val < 0) return this.depth + val\n    return val\n  }\n\n  // :: Node\n  // The parent node that the position points into. Note that even if\n  // a position points into a text node, that node is not considered\n  // the parent—text nodes are ‘flat’ in this model, and have no content.\n  get parent() { return this.node(this.depth) }\n\n  // :: Node\n  // The root node in which the position was resolved.\n  get doc() { return this.node(0) }\n\n  // :: (?number) → Node\n  // The ancestor node at the given level. `p.node(p.depth)` is the\n  // same as `p.parent`.\n  node(depth) { return this.path[this.resolveDepth(depth) * 3] }\n\n  // :: (?number) → number\n  // The index into the ancestor at the given level. If this points at\n  // the 3rd node in the 2nd paragraph on the top level, for example,\n  // `p.index(0)` is 1 and `p.index(1)` is 2.\n  index(depth) { return this.path[this.resolveDepth(depth) * 3 + 1] }\n\n  // :: (?number) → number\n  // The index pointing after this position into the ancestor at the\n  // given level.\n  indexAfter(depth) {\n    depth = this.resolveDepth(depth)\n    return this.index(depth) + (depth == this.depth && !this.textOffset ? 0 : 1)\n  }\n\n  // :: (?number) → number\n  // The (absolute) position at the start of the node at the given\n  // level.\n  start(depth) {\n    depth = this.resolveDepth(depth)\n    return depth == 0 ? 0 : this.path[depth * 3 - 1] + 1\n  }\n\n  // :: (?number) → number\n  // The (absolute) position at the end of the node at the given\n  // level.\n  end(depth) {\n    depth = this.resolveDepth(depth)\n    return this.start(depth) + this.node(depth).content.size\n  }\n\n  // :: (?number) → number\n  // The (absolute) position directly before the wrapping node at the\n  // given level, or, when `depth` is `this.depth + 1`, the original\n  // position.\n  before(depth) {\n    depth = this.resolveDepth(depth)\n    if (!depth) throw new RangeError(\"There is no position before the top-level node\")\n    return depth == this.depth + 1 ? this.pos : this.path[depth * 3 - 1]\n  }\n\n  // :: (?number) → number\n  // The (absolute) position directly after the wrapping node at the\n  // given level, or the original position when `depth` is `this.depth + 1`.\n  after(depth) {\n    depth = this.resolveDepth(depth)\n    if (!depth) throw new RangeError(\"There is no position after the top-level node\")\n    return depth == this.depth + 1 ? this.pos : this.path[depth * 3 - 1] + this.path[depth * 3].nodeSize\n  }\n\n  // :: number\n  // When this position points into a text node, this returns the\n  // distance between the position and the start of the text node.\n  // Will be zero for positions that point between nodes.\n  get textOffset() { return this.pos - this.path[this.path.length - 1] }\n\n  // :: ?Node\n  // Get the node directly after the position, if any. If the position\n  // points into a text node, only the part of that node after the\n  // position is returned.\n  get nodeAfter() {\n    let parent = this.parent, index = this.index(this.depth)\n    if (index == parent.childCount) return null\n    let dOff = this.pos - this.path[this.path.length - 1], child = parent.child(index)\n    return dOff ? parent.child(index).cut(dOff) : child\n  }\n\n  // :: ?Node\n  // Get the node directly before the position, if any. If the\n  // position points into a text node, only the part of that node\n  // before the position is returned.\n  get nodeBefore() {\n    let index = this.index(this.depth)\n    let dOff = this.pos - this.path[this.path.length - 1]\n    if (dOff) return this.parent.child(index).cut(0, dOff)\n    return index == 0 ? null : this.parent.child(index - 1)\n  }\n\n  // :: (number, ?number) → number\n  // Get the position at the given index in the parent node at the\n  // given depth (which defaults to `this.depth`).\n  posAtIndex(index, depth) {\n    depth = this.resolveDepth(depth)\n    let node = this.path[depth * 3], pos = depth == 0 ? 0 : this.path[depth * 3 - 1] + 1\n    for (let i = 0; i < index; i++) pos += node.child(i).nodeSize\n    return pos\n  }\n\n  // :: () → [Mark]\n  // Get the marks at this position, factoring in the surrounding\n  // marks' [`inclusive`](#model.MarkSpec.inclusive) property. If the\n  // position is at the start of a non-empty node, the marks of the\n  // node after it (if any) are returned.\n  marks() {\n    let parent = this.parent, index = this.index()\n\n    // In an empty parent, return the empty array\n    if (parent.content.size == 0) return Mark.none\n\n    // When inside a text node, just return the text node's marks\n    if (this.textOffset) return parent.child(index).marks\n\n    let main = parent.maybeChild(index - 1), other = parent.maybeChild(index)\n    // If the `after` flag is true of there is no node before, make\n    // the node after this position the main reference.\n    if (!main) { let tmp = main; main = other; other = tmp }\n\n    // Use all marks in the main node, except those that have\n    // `inclusive` set to false and are not present in the other node.\n    let marks = main.marks\n    for (var i = 0; i < marks.length; i++)\n      if (marks[i].type.spec.inclusive === false && (!other || !marks[i].isInSet(other.marks)))\n        marks = marks[i--].removeFromSet(marks)\n\n    return marks\n  }\n\n  // :: (ResolvedPos) → ?[Mark]\n  // Get the marks after the current position, if any, except those\n  // that are non-inclusive and not present at position `$end`. This\n  // is mostly useful for getting the set of marks to preserve after a\n  // deletion. Will return `null` if this position is at the end of\n  // its parent node or its parent node isn't a textblock (in which\n  // case no marks should be preserved).\n  marksAcross($end) {\n    let after = this.parent.maybeChild(this.index())\n    if (!after || !after.isInline) return null\n\n    let marks = after.marks, next = $end.parent.maybeChild($end.index())\n    for (var i = 0; i < marks.length; i++)\n      if (marks[i].type.spec.inclusive === false && (!next || !marks[i].isInSet(next.marks)))\n        marks = marks[i--].removeFromSet(marks)\n    return marks\n  }\n\n  // :: (number) → number\n  // The depth up to which this position and the given (non-resolved)\n  // position share the same parent nodes.\n  sharedDepth(pos) {\n    for (let depth = this.depth; depth > 0; depth--)\n      if (this.start(depth) <= pos && this.end(depth) >= pos) return depth\n    return 0\n  }\n\n  // :: (?ResolvedPos, ?(Node) → bool) → ?NodeRange\n  // Returns a range based on the place where this position and the\n  // given position diverge around block content. If both point into\n  // the same textblock, for example, a range around that textblock\n  // will be returned. If they point into different blocks, the range\n  // around those blocks in their shared ancestor is returned. You can\n  // pass in an optional predicate that will be called with a parent\n  // node to see if a range into that parent is acceptable.\n  blockRange(other = this, pred) {\n    if (other.pos < this.pos) return other.blockRange(this)\n    for (let d = this.depth - (this.parent.inlineContent || this.pos == other.pos ? 1 : 0); d >= 0; d--)\n      if (other.pos <= this.end(d) && (!pred || pred(this.node(d))))\n        return new NodeRange(this, other, d)\n  }\n\n  // :: (ResolvedPos) → bool\n  // Query whether the given position shares the same parent node.\n  sameParent(other) {\n    return this.pos - this.parentOffset == other.pos - other.parentOffset\n  }\n\n  // :: (ResolvedPos) → ResolvedPos\n  // Return the greater of this and the given position.\n  max(other) {\n    return other.pos > this.pos ? other : this\n  }\n\n  // :: (ResolvedPos) → ResolvedPos\n  // Return the smaller of this and the given position.\n  min(other) {\n    return other.pos < this.pos ? other : this\n  }\n\n  toString() {\n    let str = \"\"\n    for (let i = 1; i <= this.depth; i++)\n      str += (str ? \"/\" : \"\") + this.node(i).type.name + \"_\" + this.index(i - 1)\n    return str + \":\" + this.parentOffset\n  }\n\n  static resolve(doc, pos) {\n    if (!(pos >= 0 && pos <= doc.content.size)) throw new RangeError(\"Position \" + pos + \" out of range\")\n    let path = []\n    let start = 0, parentOffset = pos\n    for (let node = doc;;) {\n      let {index, offset} = node.content.findIndex(parentOffset)\n      let rem = parentOffset - offset\n      path.push(node, index, start + offset)\n      if (!rem) break\n      node = node.child(index)\n      if (node.isText) break\n      parentOffset = rem - 1\n      start += offset + 1\n    }\n    return new ResolvedPos(pos, path, parentOffset)\n  }\n\n  static resolveCached(doc, pos) {\n    for (let i = 0; i < resolveCache.length; i++) {\n      let cached = resolveCache[i]\n      if (cached.pos == pos && cached.doc == doc) return cached\n    }\n    let result = resolveCache[resolveCachePos] = ResolvedPos.resolve(doc, pos)\n    resolveCachePos = (resolveCachePos + 1) % resolveCacheSize\n    return result\n  }\n}\n\nlet resolveCache = [], resolveCachePos = 0, resolveCacheSize = 12\n\n// ::- Represents a flat range of content, i.e. one that starts and\n// ends in the same node.\nexport class NodeRange {\n  // :: (ResolvedPos, ResolvedPos, number)\n  // Construct a node range. `$from` and `$to` should point into the\n  // same node until at least the given `depth`, since a node range\n  // denotes an adjacent set of nodes in a single parent node.\n  constructor($from, $to, depth) {\n    // :: ResolvedPos A resolved position along the start of the\n    // content. May have a `depth` greater than this object's `depth`\n    // property, since these are the positions that were used to\n    // compute the range, not re-resolved positions directly at its\n    // boundaries.\n    this.$from = $from\n    // :: ResolvedPos A position along the end of the content. See\n    // caveat for [`$from`](#model.NodeRange.$from).\n    this.$to = $to\n    // :: number The depth of the node that this range points into.\n    this.depth = depth\n  }\n\n  // :: number The position at the start of the range.\n  get start() { return this.$from.before(this.depth + 1) }\n  // :: number The position at the end of the range.\n  get end() { return this.$to.after(this.depth + 1) }\n\n  // :: Node The parent node that the range points into.\n  get parent() { return this.$from.node(this.depth) }\n  // :: number The start index of the range in the parent node.\n  get startIndex() { return this.$from.index(this.depth) }\n  // :: number The end index of the range in the parent node.\n  get endIndex() { return this.$to.indexAfter(this.depth) }\n}\n","import {Fragment} from \"./fragment\"\nimport {Mark} from \"./mark\"\nimport {Slice, replace} from \"./replace\"\nimport {ResolvedPos} from \"./resolvedpos\"\nimport {compareDeep} from \"./comparedeep\"\n\nconst emptyAttrs = Object.create(null)\n\n// ::- This class represents a node in the tree that makes up a\n// ProseMirror document. So a document is an instance of `Node`, with\n// children that are also instances of `Node`.\n//\n// Nodes are persistent data structures. Instead of changing them, you\n// create new ones with the content you want. Old ones keep pointing\n// at the old document shape. This is made cheaper by sharing\n// structure between the old and new data as much as possible, which a\n// tree shape like this (without back pointers) makes easy.\n//\n// **Do not** directly mutate the properties of a `Node` object. See\n// [the guide](/docs/guide/#doc) for more information.\nexport class Node {\n  constructor(type, attrs, content, marks) {\n    // :: NodeType\n    // The type of node that this is.\n    this.type = type\n\n    // :: Object\n    // An object mapping attribute names to values. The kind of\n    // attributes allowed and required are\n    // [determined](#model.NodeSpec.attrs) by the node type.\n    this.attrs = attrs\n\n    // :: Fragment\n    // A container holding the node's children.\n    this.content = content || Fragment.empty\n\n    // :: [Mark]\n    // The marks (things like whether it is emphasized or part of a\n    // link) applied to this node.\n    this.marks = marks || Mark.none\n  }\n\n  // text:: ?string\n  // For text nodes, this contains the node's text content.\n\n  // :: number\n  // The size of this node, as defined by the integer-based [indexing\n  // scheme](/docs/guide/#doc.indexing). For text nodes, this is the\n  // amount of characters. For other leaf nodes, it is one. For\n  // non-leaf nodes, it is the size of the content plus two (the start\n  // and end token).\n  get nodeSize() { return this.isLeaf ? 1 : 2 + this.content.size }\n\n  // :: number\n  // The number of children that the node has.\n  get childCount() { return this.content.childCount }\n\n  // :: (number) → Node\n  // Get the child node at the given index. Raises an error when the\n  // index is out of range.\n  child(index) { return this.content.child(index) }\n\n  // :: (number) → ?Node\n  // Get the child node at the given index, if it exists.\n  maybeChild(index) { return this.content.maybeChild(index) }\n\n  // :: ((node: Node, offset: number, index: number))\n  // Call `f` for every child node, passing the node, its offset\n  // into this parent node, and its index.\n  forEach(f) { this.content.forEach(f) }\n\n  // :: (number, number, (node: Node, pos: number, parent: Node, index: number) → ?bool, ?number)\n  // Invoke a callback for all descendant nodes recursively between\n  // the given two positions that are relative to start of this node's\n  // content. The callback is invoked with the node, its\n  // parent-relative position, its parent node, and its child index.\n  // When the callback returns false for a given node, that node's\n  // children will not be recursed over. The last parameter can be\n  // used to specify a starting position to count from.\n  nodesBetween(from, to, f, startPos = 0) {\n    this.content.nodesBetween(from, to, f, startPos, this)\n  }\n\n  // :: ((node: Node, pos: number, parent: Node) → ?bool)\n  // Call the given callback for every descendant node. Doesn't\n  // descend into a node when the callback returns `false`.\n  descendants(f) {\n    this.nodesBetween(0, this.content.size, f)\n  }\n\n  // :: string\n  // Concatenates all the text nodes found in this fragment and its\n  // children.\n  get textContent() { return this.textBetween(0, this.content.size, \"\") }\n\n  // :: (number, number, ?string, ?string) → string\n  // Get all text between positions `from` and `to`. When\n  // `blockSeparator` is given, it will be inserted whenever a new\n  // block node is started. When `leafText` is given, it'll be\n  // inserted for every non-text leaf node encountered.\n  textBetween(from, to, blockSeparator, leafText) {\n    return this.content.textBetween(from, to, blockSeparator, leafText)\n  }\n\n  // :: ?Node\n  // Returns this node's first child, or `null` if there are no\n  // children.\n  get firstChild() { return this.content.firstChild }\n\n  // :: ?Node\n  // Returns this node's last child, or `null` if there are no\n  // children.\n  get lastChild() { return this.content.lastChild }\n\n  // :: (Node) → bool\n  // Test whether two nodes represent the same piece of document.\n  eq(other) {\n    return this == other || (this.sameMarkup(other) && this.content.eq(other.content))\n  }\n\n  // :: (Node) → bool\n  // Compare the markup (type, attributes, and marks) of this node to\n  // those of another. Returns `true` if both have the same markup.\n  sameMarkup(other) {\n    return this.hasMarkup(other.type, other.attrs, other.marks)\n  }\n\n  // :: (NodeType, ?Object, ?[Mark]) → bool\n  // Check whether this node's markup correspond to the given type,\n  // attributes, and marks.\n  hasMarkup(type, attrs, marks) {\n    return this.type == type &&\n      compareDeep(this.attrs, attrs || type.defaultAttrs || emptyAttrs) &&\n      Mark.sameSet(this.marks, marks || Mark.none)\n  }\n\n  // :: (?Fragment) → Node\n  // Create a new node with the same markup as this node, containing\n  // the given content (or empty, if no content is given).\n  copy(content = null) {\n    if (content == this.content) return this\n    return new this.constructor(this.type, this.attrs, content, this.marks)\n  }\n\n  // :: ([Mark]) → Node\n  // Create a copy of this node, with the given set of marks instead\n  // of the node's own marks.\n  mark(marks) {\n    return marks == this.marks ? this : new this.constructor(this.type, this.attrs, this.content, marks)\n  }\n\n  // :: (number, ?number) → Node\n  // Create a copy of this node with only the content between the\n  // given positions. If `to` is not given, it defaults to the end of\n  // the node.\n  cut(from, to) {\n    if (from == 0 && to == this.content.size) return this\n    return this.copy(this.content.cut(from, to))\n  }\n\n  // :: (number, ?number) → Slice\n  // Cut out the part of the document between the given positions, and\n  // return it as a `Slice` object.\n  slice(from, to = this.content.size, includeParents = false) {\n    if (from == to) return Slice.empty\n\n    let $from = this.resolve(from), $to = this.resolve(to)\n    let depth = includeParents ? 0 : $from.sharedDepth(to)\n    let start = $from.start(depth), node = $from.node(depth)\n    let content = node.content.cut($from.pos - start, $to.pos - start)\n    return new Slice(content, $from.depth - depth, $to.depth - depth)\n  }\n\n  // :: (number, number, Slice) → Node\n  // Replace the part of the document between the given positions with\n  // the given slice. The slice must 'fit', meaning its open sides\n  // must be able to connect to the surrounding content, and its\n  // content nodes must be valid children for the node they are placed\n  // into. If any of this is violated, an error of type\n  // [`ReplaceError`](#model.ReplaceError) is thrown.\n  replace(from, to, slice) {\n    return replace(this.resolve(from), this.resolve(to), slice)\n  }\n\n  // :: (number) → ?Node\n  // Find the node directly after the given position.\n  nodeAt(pos) {\n    for (let node = this;;) {\n      let {index, offset} = node.content.findIndex(pos)\n      node = node.maybeChild(index)\n      if (!node) return null\n      if (offset == pos || node.isText) return node\n      pos -= offset + 1\n    }\n  }\n\n  // :: (number) → {node: ?Node, index: number, offset: number}\n  // Find the (direct) child node after the given offset, if any,\n  // and return it along with its index and offset relative to this\n  // node.\n  childAfter(pos) {\n    let {index, offset} = this.content.findIndex(pos)\n    return {node: this.content.maybeChild(index), index, offset}\n  }\n\n  // :: (number) → {node: ?Node, index: number, offset: number}\n  // Find the (direct) child node before the given offset, if any,\n  // and return it along with its index and offset relative to this\n  // node.\n  childBefore(pos) {\n    if (pos == 0) return {node: null, index: 0, offset: 0}\n    let {index, offset} = this.content.findIndex(pos)\n    if (offset < pos) return {node: this.content.child(index), index, offset}\n    let node = this.content.child(index - 1)\n    return {node, index: index - 1, offset: offset - node.nodeSize}\n  }\n\n  // :: (number) → ResolvedPos\n  // Resolve the given position in the document, returning an\n  // [object](#model.ResolvedPos) with information about its context.\n  resolve(pos) { return ResolvedPos.resolveCached(this, pos) }\n\n  resolveNoCache(pos) { return ResolvedPos.resolve(this, pos) }\n\n  // :: (number, number, union<Mark, MarkType>) → bool\n  // Test whether a given mark or mark type occurs in this document\n  // between the two given positions.\n  rangeHasMark(from, to, type) {\n    let found = false\n    if (to > from) this.nodesBetween(from, to, node => {\n      if (type.isInSet(node.marks)) found = true\n      return !found\n    })\n    return found\n  }\n\n  // :: bool\n  // True when this is a block (non-inline node)\n  get isBlock() { return this.type.isBlock }\n\n  // :: bool\n  // True when this is a textblock node, a block node with inline\n  // content.\n  get isTextblock() { return this.type.isTextblock }\n\n  // :: bool\n  // True when this node allows inline content.\n  get inlineContent() { return this.type.inlineContent }\n\n  // :: bool\n  // True when this is an inline node (a text node or a node that can\n  // appear among text).\n  get isInline() { return this.type.isInline }\n\n  // :: bool\n  // True when this is a text node.\n  get isText() { return this.type.isText }\n\n  // :: bool\n  // True when this is a leaf node.\n  get isLeaf() { return this.type.isLeaf }\n\n  // :: bool\n  // True when this is an atom, i.e. when it does not have directly\n  // editable content. This is usually the same as `isLeaf`, but can\n  // be configured with the [`atom` property](#model.NodeSpec.atom) on\n  // a node's spec (typically used when the node is displayed as an\n  // uneditable [node view](#view.NodeView)).\n  get isAtom() { return this.type.isAtom }\n\n  // :: () → string\n  // Return a string representation of this node for debugging\n  // purposes.\n  toString() {\n    if (this.type.spec.toDebugString) return this.type.spec.toDebugString(this)\n    let name = this.type.name\n    if (this.content.size)\n      name += \"(\" + this.content.toStringInner() + \")\"\n    return wrapMarks(this.marks, name)\n  }\n\n  // :: (number) → ContentMatch\n  // Get the content match in this node at the given index.\n  contentMatchAt(index) {\n    let match = this.type.contentMatch.matchFragment(this.content, 0, index)\n    if (!match) throw new Error(\"Called contentMatchAt on a node with invalid content\")\n    return match\n  }\n\n  // :: (number, number, ?Fragment, ?number, ?number) → bool\n  // Test whether replacing the range between `from` and `to` (by\n  // child index) with the given replacement fragment (which defaults\n  // to the empty fragment) would leave the node's content valid. You\n  // can optionally pass `start` and `end` indices into the\n  // replacement fragment.\n  canReplace(from, to, replacement = Fragment.empty, start = 0, end = replacement.childCount) {\n    let one = this.contentMatchAt(from).matchFragment(replacement, start, end)\n    let two = one && one.matchFragment(this.content, to)\n    if (!two || !two.validEnd) return false\n    for (let i = start; i < end; i++) if (!this.type.allowsMarks(replacement.child(i).marks)) return false\n    return true\n  }\n\n  // :: (number, number, NodeType, ?[Mark]) → bool\n  // Test whether replacing the range `from` to `to` (by index) with a\n  // node of the given type would leave the node's content valid.\n  canReplaceWith(from, to, type, marks) {\n    if (marks && !this.type.allowsMarks(marks)) return false\n    let start = this.contentMatchAt(from).matchType(type)\n    let end = start && start.matchFragment(this.content, to)\n    return end ? end.validEnd : false\n  }\n\n  // :: (Node) → bool\n  // Test whether the given node's content could be appended to this\n  // node. If that node is empty, this will only return true if there\n  // is at least one node type that can appear in both nodes (to avoid\n  // merging completely incompatible nodes).\n  canAppend(other) {\n    if (other.content.size) return this.canReplace(this.childCount, this.childCount, other.content)\n    else return this.type.compatibleContent(other.type)\n  }\n\n  // :: ()\n  // Check whether this node and its descendants conform to the\n  // schema, and raise error when they do not.\n  check() {\n    if (!this.type.validContent(this.content))\n      throw new RangeError(`Invalid content for node ${this.type.name}: ${this.content.toString().slice(0, 50)}`)\n    let copy = Mark.none\n    for (let i = 0; i < this.marks.length; i++) copy = this.marks[i].addToSet(copy)\n    if (!Mark.sameSet(copy, this.marks))\n      throw new RangeError(`Invalid collection of marks for node ${this.type.name}: ${this.marks.map(m => m.type.name)}`)\n    this.content.forEach(node => node.check())\n  }\n\n  // :: () → Object\n  // Return a JSON-serializeable representation of this node.\n  toJSON() {\n    let obj = {type: this.type.name}\n    for (let _ in this.attrs) {\n      obj.attrs = this.attrs\n      break\n    }\n    if (this.content.size)\n      obj.content = this.content.toJSON()\n    if (this.marks.length)\n      obj.marks = this.marks.map(n => n.toJSON())\n    return obj\n  }\n\n  // :: (Schema, Object) → Node\n  // Deserialize a node from its JSON representation.\n  static fromJSON(schema, json) {\n    if (!json) throw new RangeError(\"Invalid input for Node.fromJSON\")\n    let marks = null\n    if (json.marks) {\n      if (!Array.isArray(json.marks)) throw new RangeError(\"Invalid mark data for Node.fromJSON\")\n      marks = json.marks.map(schema.markFromJSON)\n    }\n    if (json.type == \"text\") {\n      if (typeof json.text != \"string\") throw new RangeError(\"Invalid text node in JSON\")\n      return schema.text(json.text, marks)\n    }\n    let content = Fragment.fromJSON(schema, json.content)\n    return schema.nodeType(json.type).create(json.attrs, content, marks)\n  }\n}\n\nexport class TextNode extends Node {\n  constructor(type, attrs, content, marks) {\n    super(type, attrs, null, marks)\n\n    if (!content) throw new RangeError(\"Empty text nodes are not allowed\")\n\n    this.text = content\n  }\n\n  toString() {\n    if (this.type.spec.toDebugString) return this.type.spec.toDebugString(this)\n    return wrapMarks(this.marks, JSON.stringify(this.text))\n  }\n\n  get textContent() { return this.text }\n\n  textBetween(from, to) { return this.text.slice(from, to) }\n\n  get nodeSize() { return this.text.length }\n\n  mark(marks) {\n    return marks == this.marks ? this : new TextNode(this.type, this.attrs, this.text, marks)\n  }\n\n  withText(text) {\n    if (text == this.text) return this\n    return new TextNode(this.type, this.attrs, text, this.marks)\n  }\n\n  cut(from = 0, to = this.text.length) {\n    if (from == 0 && to == this.text.length) return this\n    return this.withText(this.text.slice(from, to))\n  }\n\n  eq(other) {\n    return this.sameMarkup(other) && this.text == other.text\n  }\n\n  toJSON() {\n    let base = super.toJSON()\n    base.text = this.text\n    return base\n  }\n}\n\nfunction wrapMarks(marks, str) {\n  for (let i = marks.length - 1; i >= 0; i--)\n    str = marks[i].type.name + \"(\" + str + \")\"\n  return str\n}\n","import {Fragment} from \"./fragment\"\n\n// ::- Instances of this class represent a match state of a node\n// type's [content expression](#model.NodeSpec.content), and can be\n// used to find out whether further content matches here, and whether\n// a given position is a valid end of the node.\nexport class ContentMatch {\n  constructor(validEnd) {\n    // :: bool\n    // True when this match state represents a valid end of the node.\n    this.validEnd = validEnd\n    this.next = []\n    this.wrapCache = []\n  }\n\n  static parse(string, nodeTypes) {\n    let stream = new TokenStream(string, nodeTypes)\n    if (stream.next == null) return ContentMatch.empty\n    let expr = parseExpr(stream)\n    if (stream.next) stream.err(\"Unexpected trailing text\")\n    let match = dfa(nfa(expr))\n    checkForDeadEnds(match, stream)\n    return match\n  }\n\n  // :: (NodeType) → ?ContentMatch\n  // Match a node type, returning a match after that node if\n  // successful.\n  matchType(type) {\n    for (let i = 0; i < this.next.length; i += 2)\n      if (this.next[i] == type) return this.next[i + 1]\n    return null\n  }\n\n  // :: (Fragment, ?number, ?number) → ?ContentMatch\n  // Try to match a fragment. Returns the resulting match when\n  // successful.\n  matchFragment(frag, start = 0, end = frag.childCount) {\n    let cur = this\n    for (let i = start; cur && i < end; i++)\n      cur = cur.matchType(frag.child(i).type)\n    return cur\n  }\n\n  get inlineContent() {\n    let first = this.next[0]\n    return first ? first.isInline : false\n  }\n\n  // :: ?NodeType\n  // Get the first matching node type at this match position that can\n  // be generated.\n  get defaultType() {\n    for (let i = 0; i < this.next.length; i += 2) {\n      let type = this.next[i]\n      if (!(type.isText || type.hasRequiredAttrs())) return type\n    }\n  }\n\n  compatible(other) {\n    for (let i = 0; i < this.next.length; i += 2)\n      for (let j = 0; j < other.next.length; j += 2)\n        if (this.next[i] == other.next[j]) return true\n    return false\n  }\n\n  // :: (Fragment, bool, ?number) → ?Fragment\n  // Try to match the given fragment, and if that fails, see if it can\n  // be made to match by inserting nodes in front of it. When\n  // successful, return a fragment of inserted nodes (which may be\n  // empty if nothing had to be inserted). When `toEnd` is true, only\n  // return a fragment if the resulting match goes to the end of the\n  // content expression.\n  fillBefore(after, toEnd = false, startIndex = 0) {\n    let seen = [this]\n    function search(match, types) {\n      let finished = match.matchFragment(after, startIndex)\n      if (finished && (!toEnd || finished.validEnd))\n        return Fragment.from(types.map(tp => tp.createAndFill()))\n\n      for (let i = 0; i < match.next.length; i += 2) {\n        let type = match.next[i], next = match.next[i + 1]\n        if (!(type.isText || type.hasRequiredAttrs()) && seen.indexOf(next) == -1) {\n          seen.push(next)\n          let found = search(next, types.concat(type))\n          if (found) return found\n        }\n      }\n    }\n\n    return search(this, [])\n  }\n\n  // :: (NodeType) → ?[NodeType]\n  // Find a set of wrapping node types that would allow a node of the\n  // given type to appear at this position. The result may be empty\n  // (when it fits directly) and will be null when no such wrapping\n  // exists.\n  findWrapping(target) {\n    for (let i = 0; i < this.wrapCache.length; i += 2)\n      if (this.wrapCache[i] == target) return this.wrapCache[i + 1]\n    let computed = this.computeWrapping(target)\n    this.wrapCache.push(target, computed)\n    return computed\n  }\n\n  computeWrapping(target) {\n    let seen = Object.create(null), active = [{match: this, type: null, via: null}]\n    while (active.length) {\n      let current = active.shift(), match = current.match\n      if (match.matchType(target)) {\n        let result = []\n        for (let obj = current; obj.type; obj = obj.via)\n          result.push(obj.type)\n        return result.reverse()\n      }\n      for (let i = 0; i < match.next.length; i += 2) {\n        let type = match.next[i]\n        if (!type.isLeaf && !type.hasRequiredAttrs() && !(type.name in seen) && (!current.type || match.next[i + 1].validEnd)) {\n          active.push({match: type.contentMatch, type, via: current})\n          seen[type.name] = true\n        }\n      }\n    }\n  }\n\n  // :: number\n  // The number of outgoing edges this node has in the finite\n  // automaton that describes the content expression.\n  get edgeCount() {\n    return this.next.length >> 1\n  }\n\n  // :: (number) → {type: NodeType, next: ContentMatch}\n  // Get the _n_​th outgoing edge from this node in the finite\n  // automaton that describes the content expression.\n  edge(n) {\n    let i = n << 1\n    if (i >= this.next.length) throw new RangeError(`There's no ${n}th edge in this content match`)\n    return {type: this.next[i], next: this.next[i + 1]}\n  }\n\n  toString() {\n    let seen = []\n    function scan(m) {\n      seen.push(m)\n      for (let i = 1; i < m.next.length; i += 2)\n        if (seen.indexOf(m.next[i]) == -1) scan(m.next[i])\n    }\n    scan(this)\n    return seen.map((m, i) => {\n      let out = i + (m.validEnd ? \"*\" : \" \") + \" \"\n      for (let i = 0; i < m.next.length; i += 2)\n        out += (i ? \", \" : \"\") + m.next[i].name + \"->\" + seen.indexOf(m.next[i + 1])\n      return out\n    }).join(\"\\n\")\n  }\n}\n\nContentMatch.empty = new ContentMatch(true)\n\nclass TokenStream {\n  constructor(string, nodeTypes) {\n    this.string = string\n    this.nodeTypes = nodeTypes\n    this.inline = null\n    this.pos = 0\n    this.tokens = string.split(/\\s*(?=\\b|\\W|$)/)\n    if (this.tokens[this.tokens.length - 1] == \"\") this.tokens.pop()\n    if (this.tokens[0] == \"\") this.tokens.shift()\n  }\n\n  get next() { return this.tokens[this.pos] }\n\n  eat(tok) { return this.next == tok && (this.pos++ || true) }\n\n  err(str) { throw new SyntaxError(str + \" (in content expression '\" + this.string + \"')\") }\n}\n\nfunction parseExpr(stream) {\n  let exprs = []\n  do { exprs.push(parseExprSeq(stream)) }\n  while (stream.eat(\"|\"))\n  return exprs.length == 1 ? exprs[0] : {type: \"choice\", exprs}\n}\n\nfunction parseExprSeq(stream) {\n  let exprs = []\n  do { exprs.push(parseExprSubscript(stream)) }\n  while (stream.next && stream.next != \")\" && stream.next != \"|\")\n  return exprs.length == 1 ? exprs[0] : {type: \"seq\", exprs}\n}\n\nfunction parseExprSubscript(stream) {\n  let expr = parseExprAtom(stream)\n  for (;;) {\n    if (stream.eat(\"+\"))\n      expr = {type: \"plus\", expr}\n    else if (stream.eat(\"*\"))\n      expr = {type: \"star\", expr}\n    else if (stream.eat(\"?\"))\n      expr = {type: \"opt\", expr}\n    else if (stream.eat(\"{\"))\n      expr = parseExprRange(stream, expr)\n    else break\n  }\n  return expr\n}\n\nfunction parseNum(stream) {\n  if (/\\D/.test(stream.next)) stream.err(\"Expected number, got '\" + stream.next + \"'\")\n  let result = Number(stream.next)\n  stream.pos++\n  return result\n}\n\nfunction parseExprRange(stream, expr) {\n  let min = parseNum(stream), max = min\n  if (stream.eat(\",\")) {\n    if (stream.next != \"}\") max = parseNum(stream)\n    else max = -1\n  }\n  if (!stream.eat(\"}\")) stream.err(\"Unclosed braced range\")\n  return {type: \"range\", min, max, expr}\n}\n\nfunction resolveName(stream, name) {\n  let types = stream.nodeTypes, type = types[name]\n  if (type) return [type]\n  let result = []\n  for (let typeName in types) {\n    let type = types[typeName]\n    if (type.groups.indexOf(name) > -1) result.push(type)\n  }\n  if (result.length == 0) stream.err(\"No node type or group '\" + name + \"' found\")\n  return result\n}\n\nfunction parseExprAtom(stream) {\n  if (stream.eat(\"(\")) {\n    let expr = parseExpr(stream)\n    if (!stream.eat(\")\")) stream.err(\"Missing closing paren\")\n    return expr\n  } else if (!/\\W/.test(stream.next)) {\n    let exprs = resolveName(stream, stream.next).map(type => {\n      if (stream.inline == null) stream.inline = type.isInline\n      else if (stream.inline != type.isInline) stream.err(\"Mixing inline and block content\")\n      return {type: \"name\", value: type}\n    })\n    stream.pos++\n    return exprs.length == 1 ? exprs[0] : {type: \"choice\", exprs}\n  } else {\n    stream.err(\"Unexpected token '\" + stream.next + \"'\")\n  }\n}\n\n// The code below helps compile a regular-expression-like language\n// into a deterministic finite automaton. For a good introduction to\n// these concepts, see https://swtch.com/~rsc/regexp/regexp1.html\n\n// : (Object) → [[{term: ?any, to: number}]]\n// Construct an NFA from an expression as returned by the parser. The\n// NFA is represented as an array of states, which are themselves\n// arrays of edges, which are `{term, to}` objects. The first state is\n// the entry state and the last node is the success state.\n//\n// Note that unlike typical NFAs, the edge ordering in this one is\n// significant, in that it is used to contruct filler content when\n// necessary.\nfunction nfa(expr) {\n  let nfa = [[]]\n  connect(compile(expr, 0), node())\n  return nfa\n\n  function node() { return nfa.push([]) - 1 }\n  function edge(from, to, term) {\n    let edge = {term, to}\n    nfa[from].push(edge)\n    return edge\n  }\n  function connect(edges, to) { edges.forEach(edge => edge.to = to) }\n\n  function compile(expr, from) {\n    if (expr.type == \"choice\") {\n      return expr.exprs.reduce((out, expr) => out.concat(compile(expr, from)), [])\n    } else if (expr.type == \"seq\") {\n      for (let i = 0;; i++) {\n        let next = compile(expr.exprs[i], from)\n        if (i == expr.exprs.length - 1) return next\n        connect(next, from = node())\n      }\n    } else if (expr.type == \"star\") {\n      let loop = node()\n      edge(from, loop)\n      connect(compile(expr.expr, loop), loop)\n      return [edge(loop)]\n    } else if (expr.type == \"plus\") {\n      let loop = node()\n      connect(compile(expr.expr, from), loop)\n      connect(compile(expr.expr, loop), loop)\n      return [edge(loop)]\n    } else if (expr.type == \"opt\") {\n      return [edge(from)].concat(compile(expr.expr, from))\n    } else if (expr.type == \"range\") {\n      let cur = from\n      for (let i = 0; i < expr.min; i++) {\n        let next = node()\n        connect(compile(expr.expr, cur), next)\n        cur = next\n      }\n      if (expr.max == -1) {\n        connect(compile(expr.expr, cur), cur)\n      } else {\n        for (let i = expr.min; i < expr.max; i++) {\n          let next = node()\n          edge(cur, next)\n          connect(compile(expr.expr, cur), next)\n          cur = next\n        }\n      }\n      return [edge(cur)]\n    } else if (expr.type == \"name\") {\n      return [edge(from, null, expr.value)]\n    }\n  }\n}\n\nfunction cmp(a, b) { return b - a }\n\n// Get the set of nodes reachable by null edges from `node`. Omit\n// nodes with only a single null-out-edge, since they may lead to\n// needless duplicated nodes.\nfunction nullFrom(nfa, node) {\n  let result = []\n  scan(node)\n  return result.sort(cmp)\n\n  function scan(node) {\n    let edges = nfa[node]\n    if (edges.length == 1 && !edges[0].term) return scan(edges[0].to)\n    result.push(node)\n    for (let i = 0; i < edges.length; i++) {\n      let {term, to} = edges[i]\n      if (!term && result.indexOf(to) == -1) scan(to)\n    }\n  }\n}\n\n// : ([[{term: ?any, to: number}]]) → ContentMatch\n// Compiles an NFA as produced by `nfa` into a DFA, modeled as a set\n// of state objects (`ContentMatch` instances) with transitions\n// between them.\nfunction dfa(nfa) {\n  let labeled = Object.create(null)\n  return explore(nullFrom(nfa, 0))\n\n  function explore(states) {\n    let out = []\n    states.forEach(node => {\n      nfa[node].forEach(({term, to}) => {\n        if (!term) return\n        let known = out.indexOf(term), set = known > -1 && out[known + 1]\n        nullFrom(nfa, to).forEach(node => {\n          if (!set) out.push(term, set = [])\n          if (set.indexOf(node) == -1) set.push(node)\n        })\n      })\n    })\n    let state = labeled[states.join(\",\")] = new ContentMatch(states.indexOf(nfa.length - 1) > -1)\n    for (let i = 0; i < out.length; i += 2) {\n      let states = out[i + 1].sort(cmp)\n      state.next.push(out[i], labeled[states.join(\",\")] || explore(states))\n    }\n    return state\n  }\n}\n\nfunction checkForDeadEnds(match, stream) {\n  for (let i = 0, work = [match]; i < work.length; i++) {\n    let state = work[i], dead = !state.validEnd, nodes = []\n    for (let j = 0; j < state.next.length; j += 2) {\n      let node = state.next[j], next = state.next[j + 1]\n      nodes.push(node.name)\n      if (dead && !(node.isText || node.hasRequiredAttrs())) dead = false\n      if (work.indexOf(next) == -1) work.push(next)\n    }\n    if (dead) stream.err(\"Only non-generatable nodes (\" + nodes.join(\", \") + \") in a required position (see https://prosemirror.net/docs/guide/#generatable)\")\n  }\n}\n","import OrderedMap from \"orderedmap\"\n\nimport {Node, TextNode} from \"./node\"\nimport {Fragment} from \"./fragment\"\nimport {Mark} from \"./mark\"\nimport {ContentMatch} from \"./content\"\n\n// For node types where all attrs have a default value (or which don't\n// have any attributes), build up a single reusable default attribute\n// object, and use it for all nodes that don't specify specific\n// attributes.\nfunction defaultAttrs(attrs) {\n  let defaults = Object.create(null)\n  for (let attrName in attrs) {\n    let attr = attrs[attrName]\n    if (!attr.hasDefault) return null\n    defaults[attrName] = attr.default\n  }\n  return defaults\n}\n\nfunction computeAttrs(attrs, value) {\n  let built = Object.create(null)\n  for (let name in attrs) {\n    let given = value && value[name]\n    if (given === undefined) {\n      let attr = attrs[name]\n      if (attr.hasDefault) given = attr.default\n      else throw new RangeError(\"No value supplied for attribute \" + name)\n    }\n    built[name] = given\n  }\n  return built\n}\n\nfunction initAttrs(attrs) {\n  let result = Object.create(null)\n  if (attrs) for (let name in attrs) result[name] = new Attribute(attrs[name])\n  return result\n}\n\n// ::- Node types are objects allocated once per `Schema` and used to\n// [tag](#model.Node.type) `Node` instances. They contain information\n// about the node type, such as its name and what kind of node it\n// represents.\nexport class NodeType {\n  constructor(name, schema, spec) {\n    // :: string\n    // The name the node type has in this schema.\n    this.name = name\n\n    // :: Schema\n    // A link back to the `Schema` the node type belongs to.\n    this.schema = schema\n\n    // :: NodeSpec\n    // The spec that this type is based on\n    this.spec = spec\n\n    this.groups = spec.group ? spec.group.split(\" \") : []\n    this.attrs = initAttrs(spec.attrs)\n\n    this.defaultAttrs = defaultAttrs(this.attrs)\n\n    // :: ContentMatch\n    // The starting match of the node type's content expression.\n    this.contentMatch = null\n\n    // : ?[MarkType]\n    // The set of marks allowed in this node. `null` means all marks\n    // are allowed.\n    this.markSet = null\n\n    // :: bool\n    // True if this node type has inline content.\n    this.inlineContent = null\n\n    // :: bool\n    // True if this is a block type\n    this.isBlock = !(spec.inline || name == \"text\")\n\n    // :: bool\n    // True if this is the text node type.\n    this.isText = name == \"text\"\n  }\n\n  // :: bool\n  // True if this is an inline type.\n  get isInline() { return !this.isBlock }\n\n  // :: bool\n  // True if this is a textblock type, a block that contains inline\n  // content.\n  get isTextblock() { return this.isBlock && this.inlineContent }\n\n  // :: bool\n  // True for node types that allow no content.\n  get isLeaf() { return this.contentMatch == ContentMatch.empty }\n\n  // :: bool\n  // True when this node is an atom, i.e. when it does not have\n  // directly editable content.\n  get isAtom() { return this.isLeaf || this.spec.atom }\n\n  // :: () → bool\n  // Tells you whether this node type has any required attributes.\n  hasRequiredAttrs() {\n    for (let n in this.attrs) if (this.attrs[n].isRequired) return true\n    return false\n  }\n\n  compatibleContent(other) {\n    return this == other || this.contentMatch.compatible(other.contentMatch)\n  }\n\n  computeAttrs(attrs) {\n    if (!attrs && this.defaultAttrs) return this.defaultAttrs\n    else return computeAttrs(this.attrs, attrs)\n  }\n\n  // :: (?Object, ?union<Fragment, Node, [Node]>, ?[Mark]) → Node\n  // Create a `Node` of this type. The given attributes are\n  // checked and defaulted (you can pass `null` to use the type's\n  // defaults entirely, if no required attributes exist). `content`\n  // may be a `Fragment`, a node, an array of nodes, or\n  // `null`. Similarly `marks` may be `null` to default to the empty\n  // set of marks.\n  create(attrs, content, marks) {\n    if (this.isText) throw new Error(\"NodeType.create can't construct text nodes\")\n    return new Node(this, this.computeAttrs(attrs), Fragment.from(content), Mark.setFrom(marks))\n  }\n\n  // :: (?Object, ?union<Fragment, Node, [Node]>, ?[Mark]) → Node\n  // Like [`create`](#model.NodeType.create), but check the given content\n  // against the node type's content restrictions, and throw an error\n  // if it doesn't match.\n  createChecked(attrs, content, marks) {\n    content = Fragment.from(content)\n    if (!this.validContent(content))\n      throw new RangeError(\"Invalid content for node \" + this.name)\n    return new Node(this, this.computeAttrs(attrs), content, Mark.setFrom(marks))\n  }\n\n  // :: (?Object, ?union<Fragment, Node, [Node]>, ?[Mark]) → ?Node\n  // Like [`create`](#model.NodeType.create), but see if it is necessary to\n  // add nodes to the start or end of the given fragment to make it\n  // fit the node. If no fitting wrapping can be found, return null.\n  // Note that, due to the fact that required nodes can always be\n  // created, this will always succeed if you pass null or\n  // `Fragment.empty` as content.\n  createAndFill(attrs, content, marks) {\n    attrs = this.computeAttrs(attrs)\n    content = Fragment.from(content)\n    if (content.size) {\n      let before = this.contentMatch.fillBefore(content)\n      if (!before) return null\n      content = before.append(content)\n    }\n    let after = this.contentMatch.matchFragment(content).fillBefore(Fragment.empty, true)\n    if (!after) return null\n    return new Node(this, attrs, content.append(after), Mark.setFrom(marks))\n  }\n\n  // :: (Fragment) → bool\n  // Returns true if the given fragment is valid content for this node\n  // type with the given attributes.\n  validContent(content) {\n    let result = this.contentMatch.matchFragment(content)\n    if (!result || !result.validEnd) return false\n    for (let i = 0; i < content.childCount; i++)\n      if (!this.allowsMarks(content.child(i).marks)) return false\n    return true\n  }\n\n  // :: (MarkType) → bool\n  // Check whether the given mark type is allowed in this node.\n  allowsMarkType(markType) {\n    return this.markSet == null || this.markSet.indexOf(markType) > -1\n  }\n\n  // :: ([Mark]) → bool\n  // Test whether the given set of marks are allowed in this node.\n  allowsMarks(marks) {\n    if (this.markSet == null) return true\n    for (let i = 0; i < marks.length; i++) if (!this.allowsMarkType(marks[i].type)) return false\n    return true\n  }\n\n  // :: ([Mark]) → [Mark]\n  // Removes the marks that are not allowed in this node from the given set.\n  allowedMarks(marks) {\n    if (this.markSet == null) return marks\n    let copy\n    for (let i = 0; i < marks.length; i++) {\n      if (!this.allowsMarkType(marks[i].type)) {\n        if (!copy) copy = marks.slice(0, i)\n      } else if (copy) {\n        copy.push(marks[i])\n      }\n    }\n    return !copy ? marks : copy.length ? copy : Mark.empty\n  }\n\n  static compile(nodes, schema) {\n    let result = Object.create(null)\n    nodes.forEach((name, spec) => result[name] = new NodeType(name, schema, spec))\n\n    let topType = schema.spec.topNode || \"doc\"\n    if (!result[topType]) throw new RangeError(\"Schema is missing its top node type ('\" + topType + \"')\")\n    if (!result.text) throw new RangeError(\"Every schema needs a 'text' type\")\n    for (let _ in result.text.attrs) throw new RangeError(\"The text node type should not have attributes\")\n\n    return result\n  }\n}\n\n// Attribute descriptors\n\nclass Attribute {\n  constructor(options) {\n    this.hasDefault = Object.prototype.hasOwnProperty.call(options, \"default\")\n    this.default = options.default\n  }\n\n  get isRequired() {\n    return !this.hasDefault\n  }\n}\n\n// Marks\n\n// ::- Like nodes, marks (which are associated with nodes to signify\n// things like emphasis or being part of a link) are\n// [tagged](#model.Mark.type) with type objects, which are\n// instantiated once per `Schema`.\nexport class MarkType {\n  constructor(name, rank, schema, spec) {\n    // :: string\n    // The name of the mark type.\n    this.name = name\n\n    // :: Schema\n    // The schema that this mark type instance is part of.\n    this.schema = schema\n\n    // :: MarkSpec\n    // The spec on which the type is based.\n    this.spec = spec\n\n    this.attrs = initAttrs(spec.attrs)\n\n    this.rank = rank\n    this.excluded = null\n    let defaults = defaultAttrs(this.attrs)\n    this.instance = defaults && new Mark(this, defaults)\n  }\n\n  // :: (?Object) → Mark\n  // Create a mark of this type. `attrs` may be `null` or an object\n  // containing only some of the mark's attributes. The others, if\n  // they have defaults, will be added.\n  create(attrs) {\n    if (!attrs && this.instance) return this.instance\n    return new Mark(this, computeAttrs(this.attrs, attrs))\n  }\n\n  static compile(marks, schema) {\n    let result = Object.create(null), rank = 0\n    marks.forEach((name, spec) => result[name] = new MarkType(name, rank++, schema, spec))\n    return result\n  }\n\n  // :: ([Mark]) → [Mark]\n  // When there is a mark of this type in the given set, a new set\n  // without it is returned. Otherwise, the input set is returned.\n  removeFromSet(set) {\n    for (var i = 0; i < set.length; i++) if (set[i].type == this) {\n      set = set.slice(0, i).concat(set.slice(i + 1))\n      i--\n    }\n    return set\n  }\n\n  // :: ([Mark]) → ?Mark\n  // Tests whether there is a mark of this type in the given set.\n  isInSet(set) {\n    for (let i = 0; i < set.length; i++)\n      if (set[i].type == this) return set[i]\n  }\n\n  // :: (MarkType) → bool\n  // Queries whether a given mark type is\n  // [excluded](#model.MarkSpec.excludes) by this one.\n  excludes(other) {\n    return this.excluded.indexOf(other) > -1\n  }\n}\n\n// SchemaSpec:: interface\n// An object describing a schema, as passed to the [`Schema`](#model.Schema)\n// constructor.\n//\n//   nodes:: union<Object<NodeSpec>, OrderedMap<NodeSpec>>\n//   The node types in this schema. Maps names to\n//   [`NodeSpec`](#model.NodeSpec) objects that describe the node type\n//   associated with that name. Their order is significant—it\n//   determines which [parse rules](#model.NodeSpec.parseDOM) take\n//   precedence by default, and which nodes come first in a given\n//   [group](#model.NodeSpec.group).\n//\n//   marks:: ?union<Object<MarkSpec>, OrderedMap<MarkSpec>>\n//   The mark types that exist in this schema. The order in which they\n//   are provided determines the order in which [mark\n//   sets](#model.Mark.addToSet) are sorted and in which [parse\n//   rules](#model.MarkSpec.parseDOM) are tried.\n//\n//   topNode:: ?string\n//   The name of the default top-level node for the schema. Defaults\n//   to `\"doc\"`.\n\n// NodeSpec:: interface\n//\n//   content:: ?string\n//   The content expression for this node, as described in the [schema\n//   guide](/docs/guide/#schema.content_expressions). When not given,\n//   the node does not allow any content.\n//\n//   marks:: ?string\n//   The marks that are allowed inside of this node. May be a\n//   space-separated string referring to mark names or groups, `\"_\"`\n//   to explicitly allow all marks, or `\"\"` to disallow marks. When\n//   not given, nodes with inline content default to allowing all\n//   marks, other nodes default to not allowing marks.\n//\n//   group:: ?string\n//   The group or space-separated groups to which this node belongs,\n//   which can be referred to in the content expressions for the\n//   schema.\n//\n//   inline:: ?bool\n//   Should be set to true for inline nodes. (Implied for text nodes.)\n//\n//   atom:: ?bool\n//   Can be set to true to indicate that, though this isn't a [leaf\n//   node](#model.NodeType.isLeaf), it doesn't have directly editable\n//   content and should be treated as a single unit in the view.\n//\n//   attrs:: ?Object<AttributeSpec>\n//   The attributes that nodes of this type get.\n//\n//   selectable:: ?bool\n//   Controls whether nodes of this type can be selected as a [node\n//   selection](#state.NodeSelection). Defaults to true for non-text\n//   nodes.\n//\n//   draggable:: ?bool\n//   Determines whether nodes of this type can be dragged without\n//   being selected. Defaults to false.\n//\n//   code:: ?bool\n//   Can be used to indicate that this node contains code, which\n//   causes some commands to behave differently.\n//\n//   defining:: ?bool\n//   Determines whether this node is considered an important parent\n//   node during replace operations (such as paste). Non-defining (the\n//   default) nodes get dropped when their entire content is replaced,\n//   whereas defining nodes persist and wrap the inserted content.\n//   Likewise, in _inserted_ content the defining parents of the\n//   content are preserved when possible. Typically,\n//   non-default-paragraph textblock types, and possibly list items,\n//   are marked as defining.\n//\n//   isolating:: ?bool\n//   When enabled (default is false), the sides of nodes of this type\n//   count as boundaries that regular editing operations, like\n//   backspacing or lifting, won't cross. An example of a node that\n//   should probably have this enabled is a table cell.\n//\n//   toDOM:: ?(node: Node) → DOMOutputSpec\n//   Defines the default way a node of this type should be serialized\n//   to DOM/HTML (as used by\n//   [`DOMSerializer.fromSchema`](#model.DOMSerializer^fromSchema)).\n//   Should return a DOM node or an [array\n//   structure](#model.DOMOutputSpec) that describes one, with an\n//   optional number zero (“hole”) in it to indicate where the node's\n//   content should be inserted.\n//\n//   For text nodes, the default is to create a text DOM node. Though\n//   it is possible to create a serializer where text is rendered\n//   differently, this is not supported inside the editor, so you\n//   shouldn't override that in your text node spec.\n//\n//   parseDOM:: ?[ParseRule]\n//   Associates DOM parser information with this node, which can be\n//   used by [`DOMParser.fromSchema`](#model.DOMParser^fromSchema) to\n//   automatically derive a parser. The `node` field in the rules is\n//   implied (the name of this node will be filled in automatically).\n//   If you supply your own parser, you do not need to also specify\n//   parsing rules in your schema.\n//\n//   toDebugString:: ?(node: Node) -> string\n//   Defines the default way a node of this type should be serialized\n//   to a string representation for debugging (e.g. in error messages).\n\n// MarkSpec:: interface\n//\n//   attrs:: ?Object<AttributeSpec>\n//   The attributes that marks of this type get.\n//\n//   inclusive:: ?bool\n//   Whether this mark should be active when the cursor is positioned\n//   at its end (or at its start when that is also the start of the\n//   parent node). Defaults to true.\n//\n//   excludes:: ?string\n//   Determines which other marks this mark can coexist with. Should\n//   be a space-separated strings naming other marks or groups of marks.\n//   When a mark is [added](#model.Mark.addToSet) to a set, all marks\n//   that it excludes are removed in the process. If the set contains\n//   any mark that excludes the new mark but is not, itself, excluded\n//   by the new mark, the mark can not be added an the set. You can\n//   use the value `\"_\"` to indicate that the mark excludes all\n//   marks in the schema.\n//\n//   Defaults to only being exclusive with marks of the same type. You\n//   can set it to an empty string (or any string not containing the\n//   mark's own name) to allow multiple marks of a given type to\n//   coexist (as long as they have different attributes).\n//\n//   group:: ?string\n//   The group or space-separated groups to which this mark belongs.\n//\n//   spanning:: ?bool\n//   Determines whether marks of this type can span multiple adjacent\n//   nodes when serialized to DOM/HTML. Defaults to true.\n//\n//   toDOM:: ?(mark: Mark, inline: bool) → DOMOutputSpec\n//   Defines the default way marks of this type should be serialized\n//   to DOM/HTML. When the resulting spec contains a hole, that is\n//   where the marked content is placed. Otherwise, it is appended to\n//   the top node.\n//\n//   parseDOM:: ?[ParseRule]\n//   Associates DOM parser information with this mark (see the\n//   corresponding [node spec field](#model.NodeSpec.parseDOM)). The\n//   `mark` field in the rules is implied.\n\n// AttributeSpec:: interface\n//\n// Used to [define](#model.NodeSpec.attrs) attributes on nodes or\n// marks.\n//\n//   default:: ?any\n//   The default value for this attribute, to use when no explicit\n//   value is provided. Attributes that have no default must be\n//   provided whenever a node or mark of a type that has them is\n//   created.\n\n// ::- A document schema. Holds [node](#model.NodeType) and [mark\n// type](#model.MarkType) objects for the nodes and marks that may\n// occur in conforming documents, and provides functionality for\n// creating and deserializing such documents.\nexport class Schema {\n  // :: (SchemaSpec)\n  // Construct a schema from a schema [specification](#model.SchemaSpec).\n  constructor(spec) {\n    // :: SchemaSpec\n    // The [spec](#model.SchemaSpec) on which the schema is based,\n    // with the added guarantee that its `nodes` and `marks`\n    // properties are\n    // [`OrderedMap`](https://github.com/marijnh/orderedmap) instances\n    // (not raw objects).\n    this.spec = {}\n    for (let prop in spec) this.spec[prop] = spec[prop]\n    this.spec.nodes = OrderedMap.from(spec.nodes)\n    this.spec.marks = OrderedMap.from(spec.marks)\n\n    // :: Object<NodeType>\n    // An object mapping the schema's node names to node type objects.\n    this.nodes = NodeType.compile(this.spec.nodes, this)\n\n    // :: Object<MarkType>\n    // A map from mark names to mark type objects.\n    this.marks = MarkType.compile(this.spec.marks, this)\n\n    let contentExprCache = Object.create(null)\n    for (let prop in this.nodes) {\n      if (prop in this.marks)\n        throw new RangeError(prop + \" can not be both a node and a mark\")\n      let type = this.nodes[prop], contentExpr = type.spec.content || \"\", markExpr = type.spec.marks\n      type.contentMatch = contentExprCache[contentExpr] ||\n        (contentExprCache[contentExpr] = ContentMatch.parse(contentExpr, this.nodes))\n      type.inlineContent = type.contentMatch.inlineContent\n      type.markSet = markExpr == \"_\" ? null :\n        markExpr ? gatherMarks(this, markExpr.split(\" \")) :\n        markExpr == \"\" || !type.inlineContent ? [] : null\n    }\n    for (let prop in this.marks) {\n      let type = this.marks[prop], excl = type.spec.excludes\n      type.excluded = excl == null ? [type] : excl == \"\" ? [] : gatherMarks(this, excl.split(\" \"))\n    }\n\n    this.nodeFromJSON = this.nodeFromJSON.bind(this)\n    this.markFromJSON = this.markFromJSON.bind(this)\n\n    // :: NodeType\n    // The type of the [default top node](#model.SchemaSpec.topNode)\n    // for this schema.\n    this.topNodeType = this.nodes[this.spec.topNode || \"doc\"]\n\n    // :: Object\n    // An object for storing whatever values modules may want to\n    // compute and cache per schema. (If you want to store something\n    // in it, try to use property names unlikely to clash.)\n    this.cached = Object.create(null)\n    this.cached.wrappings = Object.create(null)\n  }\n\n  // :: (union<string, NodeType>, ?Object, ?union<Fragment, Node, [Node]>, ?[Mark]) → Node\n  // Create a node in this schema. The `type` may be a string or a\n  // `NodeType` instance. Attributes will be extended\n  // with defaults, `content` may be a `Fragment`,\n  // `null`, a `Node`, or an array of nodes.\n  node(type, attrs, content, marks) {\n    if (typeof type == \"string\")\n      type = this.nodeType(type)\n    else if (!(type instanceof NodeType))\n      throw new RangeError(\"Invalid node type: \" + type)\n    else if (type.schema != this)\n      throw new RangeError(\"Node type from different schema used (\" + type.name + \")\")\n\n    return type.createChecked(attrs, content, marks)\n  }\n\n  // :: (string, ?[Mark]) → Node\n  // Create a text node in the schema. Empty text nodes are not\n  // allowed.\n  text(text, marks) {\n    let type = this.nodes.text\n    return new TextNode(type, type.defaultAttrs, text, Mark.setFrom(marks))\n  }\n\n  // :: (union<string, MarkType>, ?Object) → Mark\n  // Create a mark with the given type and attributes.\n  mark(type, attrs) {\n    if (typeof type == \"string\") type = this.marks[type]\n    return type.create(attrs)\n  }\n\n  // :: (Object) → Node\n  // Deserialize a node from its JSON representation. This method is\n  // bound.\n  nodeFromJSON(json) {\n    return Node.fromJSON(this, json)\n  }\n\n  // :: (Object) → Mark\n  // Deserialize a mark from its JSON representation. This method is\n  // bound.\n  markFromJSON(json) {\n    return Mark.fromJSON(this, json)\n  }\n\n  nodeType(name) {\n    let found = this.nodes[name]\n    if (!found) throw new RangeError(\"Unknown node type: \" + name)\n    return found\n  }\n}\n\nfunction gatherMarks(schema, marks) {\n  let found = []\n  for (let i = 0; i < marks.length; i++) {\n    let name = marks[i], mark = schema.marks[name], ok = mark\n    if (mark) {\n      found.push(mark)\n    } else {\n      for (let prop in schema.marks) {\n        let mark = schema.marks[prop]\n        if (name == \"_\" || (mark.spec.group && mark.spec.group.split(\" \").indexOf(name) > -1))\n          found.push(ok = mark)\n      }\n    }\n    if (!ok) throw new SyntaxError(\"Unknown mark type: '\" + marks[i] + \"'\")\n  }\n  return found\n}\n","import {Fragment} from \"./fragment\"\nimport {Slice} from \"./replace\"\nimport {Mark} from \"./mark\"\n\n// ParseOptions:: interface\n// These are the options recognized by the\n// [`parse`](#model.DOMParser.parse) and\n// [`parseSlice`](#model.DOMParser.parseSlice) methods.\n//\n//   preserveWhitespace:: ?union<bool, \"full\">\n//   By default, whitespace is collapsed as per HTML's rules. Pass\n//   `true` to preserve whitespace, but normalize newlines to\n//   spaces, and `\"full\"` to preserve whitespace entirely.\n//\n//   findPositions:: ?[{node: dom.Node, offset: number}]\n//   When given, the parser will, beside parsing the content,\n//   record the document positions of the given DOM positions. It\n//   will do so by writing to the objects, adding a `pos` property\n//   that holds the document position. DOM positions that are not\n//   in the parsed content will not be written to.\n//\n//   from:: ?number\n//   The child node index to start parsing from.\n//\n//   to:: ?number\n//   The child node index to stop parsing at.\n//\n//   topNode:: ?Node\n//   By default, the content is parsed into the schema's default\n//   [top node type](#model.Schema.topNodeType). You can pass this\n//   option to use the type and attributes from a different node\n//   as the top container.\n//\n//   topMatch:: ?ContentMatch\n//   Provide the starting content match that content parsed into the\n//   top node is matched against.\n//\n//   context:: ?ResolvedPos\n//   A set of additional nodes to count as\n//   [context](#model.ParseRule.context) when parsing, above the\n//   given [top node](#model.ParseOptions.topNode).\n\n// ParseRule:: interface\n// A value that describes how to parse a given DOM node or inline\n// style as a ProseMirror node or mark.\n//\n//   tag:: ?string\n//   A CSS selector describing the kind of DOM elements to match. A\n//   single rule should have _either_ a `tag` or a `style` property.\n//\n//   namespace:: ?string\n//   The namespace to match. This should be used with `tag`.\n//   Nodes are only matched when the namespace matches or this property\n//   is null.\n//\n//   style:: ?string\n//   A CSS property name to match. When given, this rule matches\n//   inline styles that list that property. May also have the form\n//   `\"property=value\"`, in which case the rule only matches if the\n//   property's value exactly matches the given value. (For more\n//   complicated filters, use [`getAttrs`](#model.ParseRule.getAttrs)\n//   and return false to indicate that the match failed.) Rules\n//   matching styles may only produce [marks](#model.ParseRule.mark),\n//   not nodes.\n//\n//   priority:: ?number\n//   Can be used to change the order in which the parse rules in a\n//   schema are tried. Those with higher priority come first. Rules\n//   without a priority are counted as having priority 50. This\n//   property is only meaningful in a schema—when directly\n//   constructing a parser, the order of the rule array is used.\n//\n//   consuming:: ?boolean\n//   By default, when a rule matches an element or style, no further\n//   rules get a chance to match it. By setting this to `false`, you\n//   indicate that even when this rule matches, other rules that come\n//   after it should also run.\n//\n//   context:: ?string\n//   When given, restricts this rule to only match when the current\n//   context—the parent nodes into which the content is being\n//   parsed—matches this expression. Should contain one or more node\n//   names or node group names followed by single or double slashes.\n//   For example `\"paragraph/\"` means the rule only matches when the\n//   parent node is a paragraph, `\"blockquote/paragraph/\"` restricts\n//   it to be in a paragraph that is inside a blockquote, and\n//   `\"section//\"` matches any position inside a section—a double\n//   slash matches any sequence of ancestor nodes. To allow multiple\n//   different contexts, they can be separated by a pipe (`|`)\n//   character, as in `\"blockquote/|list_item/\"`.\n//\n//   node:: ?string\n//   The name of the node type to create when this rule matches. Only\n//   valid for rules with a `tag` property, not for style rules. Each\n//   rule should have one of a `node`, `mark`, or `ignore` property\n//   (except when it appears in a [node](#model.NodeSpec.parseDOM) or\n//   [mark spec](#model.MarkSpec.parseDOM), in which case the `node`\n//   or `mark` property will be derived from its position).\n//\n//   mark:: ?string\n//   The name of the mark type to wrap the matched content in.\n//\n//   ignore:: ?bool\n//   When true, ignore content that matches this rule.\n//\n//   closeParent:: ?bool\n//   When true, finding an element that matches this rule will close\n//   the current node.\n//\n//   skip:: ?bool\n//   When true, ignore the node that matches this rule, but do parse\n//   its content.\n//\n//   attrs:: ?Object\n//   Attributes for the node or mark created by this rule. When\n//   `getAttrs` is provided, it takes precedence.\n//\n//   getAttrs:: ?(union<dom.Node, string>) → ?union<Object, false>\n//   A function used to compute the attributes for the node or mark\n//   created by this rule. Can also be used to describe further\n//   conditions the DOM element or style must match. When it returns\n//   `false`, the rule won't match. When it returns null or undefined,\n//   that is interpreted as an empty/default set of attributes.\n//\n//   Called with a DOM Element for `tag` rules, and with a string (the\n//   style's value) for `style` rules.\n//\n//   contentElement:: ?union<string, (dom.Node) → dom.Node>\n//   For `tag` rules that produce non-leaf nodes or marks, by default\n//   the content of the DOM element is parsed as content of the mark\n//   or node. If the child nodes are in a descendent node, this may be\n//   a CSS selector string that the parser must use to find the actual\n//   content element, or a function that returns the actual content\n//   element to the parser.\n//\n//   getContent:: ?(dom.Node, schema: Schema) → Fragment\n//   Can be used to override the content of a matched node. When\n//   present, instead of parsing the node's child nodes, the result of\n//   this function is used.\n//\n//   preserveWhitespace:: ?union<bool, \"full\">\n//   Controls whether whitespace should be preserved when parsing the\n//   content inside the matched element. `false` means whitespace may\n//   be collapsed, `true` means that whitespace should be preserved\n//   but newlines normalized to spaces, and `\"full\"` means that\n//   newlines should also be preserved.\n\n// ::- A DOM parser represents a strategy for parsing DOM content into\n// a ProseMirror document conforming to a given schema. Its behavior\n// is defined by an array of [rules](#model.ParseRule).\nexport class DOMParser {\n  // :: (Schema, [ParseRule])\n  // Create a parser that targets the given schema, using the given\n  // parsing rules.\n  constructor(schema, rules) {\n    // :: Schema\n    // The schema into which the parser parses.\n    this.schema = schema\n    // :: [ParseRule]\n    // The set of [parse rules](#model.ParseRule) that the parser\n    // uses, in order of precedence.\n    this.rules = rules\n    this.tags = []\n    this.styles = []\n\n    rules.forEach(rule => {\n      if (rule.tag) this.tags.push(rule)\n      else if (rule.style) this.styles.push(rule)\n    })\n\n    // Only normalize list elements when lists in the schema can't directly contain themselves\n    this.normalizeLists = !this.tags.some(r => {\n      if (!/^(ul|ol)\\b/.test(r.tag) || !r.node) return false\n      let node = schema.nodes[r.node]\n      return node.contentMatch.matchType(node)\n    })\n  }\n\n  // :: (dom.Node, ?ParseOptions) → Node\n  // Parse a document from the content of a DOM node.\n  parse(dom, options = {}) {\n    let context = new ParseContext(this, options, false)\n    context.addAll(dom, null, options.from, options.to)\n    return context.finish()\n  }\n\n  // :: (dom.Node, ?ParseOptions) → Slice\n  // Parses the content of the given DOM node, like\n  // [`parse`](#model.DOMParser.parse), and takes the same set of\n  // options. But unlike that method, which produces a whole node,\n  // this one returns a slice that is open at the sides, meaning that\n  // the schema constraints aren't applied to the start of nodes to\n  // the left of the input and the end of nodes at the end.\n  parseSlice(dom, options = {}) {\n    let context = new ParseContext(this, options, true)\n    context.addAll(dom, null, options.from, options.to)\n    return Slice.maxOpen(context.finish())\n  }\n\n  matchTag(dom, context, after) {\n    for (let i = after ? this.tags.indexOf(after) + 1 : 0; i < this.tags.length; i++) {\n      let rule = this.tags[i]\n      if (matches(dom, rule.tag) &&\n          (rule.namespace === undefined || dom.namespaceURI == rule.namespace) &&\n          (!rule.context || context.matchesContext(rule.context))) {\n        if (rule.getAttrs) {\n          let result = rule.getAttrs(dom)\n          if (result === false) continue\n          rule.attrs = result\n        }\n        return rule\n      }\n    }\n  }\n\n  matchStyle(prop, value, context, after) {\n    for (let i = after ? this.styles.indexOf(after) + 1 : 0; i < this.styles.length; i++) {\n      let rule = this.styles[i]\n      if (rule.style.indexOf(prop) != 0 ||\n          rule.context && !context.matchesContext(rule.context) ||\n          // Test that the style string either precisely matches the prop,\n          // or has an '=' sign after the prop, followed by the given\n          // value.\n          rule.style.length > prop.length &&\n          (rule.style.charCodeAt(prop.length) != 61 || rule.style.slice(prop.length + 1) != value))\n        continue\n      if (rule.getAttrs) {\n        let result = rule.getAttrs(value)\n        if (result === false) continue\n        rule.attrs = result\n      }\n      return rule\n    }\n  }\n\n  // : (Schema) → [ParseRule]\n  static schemaRules(schema) {\n    let result = []\n    function insert(rule) {\n      let priority = rule.priority == null ? 50 : rule.priority, i = 0\n      for (; i < result.length; i++) {\n        let next = result[i], nextPriority = next.priority == null ? 50 : next.priority\n        if (nextPriority < priority) break\n      }\n      result.splice(i, 0, rule)\n    }\n\n    for (let name in schema.marks) {\n      let rules = schema.marks[name].spec.parseDOM\n      if (rules) rules.forEach(rule => {\n        insert(rule = copy(rule))\n        rule.mark = name\n      })\n    }\n    for (let name in schema.nodes) {\n      let rules = schema.nodes[name].spec.parseDOM\n      if (rules) rules.forEach(rule => {\n        insert(rule = copy(rule))\n        rule.node = name\n      })\n    }\n    return result\n  }\n\n  // :: (Schema) → DOMParser\n  // Construct a DOM parser using the parsing rules listed in a\n  // schema's [node specs](#model.NodeSpec.parseDOM), reordered by\n  // [priority](#model.ParseRule.priority).\n  static fromSchema(schema) {\n    return schema.cached.domParser ||\n      (schema.cached.domParser = new DOMParser(schema, DOMParser.schemaRules(schema)))\n  }\n}\n\n// : Object<bool> The block-level tags in HTML5\nconst blockTags = {\n  address: true, article: true, aside: true, blockquote: true, canvas: true,\n  dd: true, div: true, dl: true, fieldset: true, figcaption: true, figure: true,\n  footer: true, form: true, h1: true, h2: true, h3: true, h4: true, h5: true,\n  h6: true, header: true, hgroup: true, hr: true, li: true, noscript: true, ol: true,\n  output: true, p: true, pre: true, section: true, table: true, tfoot: true, ul: true\n}\n\n// : Object<bool> The tags that we normally ignore.\nconst ignoreTags = {\n  head: true, noscript: true, object: true, script: true, style: true, title: true\n}\n\n// : Object<bool> List tags.\nconst listTags = {ol: true, ul: true}\n\n// Using a bitfield for node context options\nconst OPT_PRESERVE_WS = 1, OPT_PRESERVE_WS_FULL = 2, OPT_OPEN_LEFT = 4\n\nfunction wsOptionsFor(preserveWhitespace) {\n  return (preserveWhitespace ? OPT_PRESERVE_WS : 0) | (preserveWhitespace === \"full\" ? OPT_PRESERVE_WS_FULL : 0)\n}\n\nclass NodeContext {\n  constructor(type, attrs, marks, pendingMarks, solid, match, options) {\n    this.type = type\n    this.attrs = attrs\n    this.solid = solid\n    this.match = match || (options & OPT_OPEN_LEFT ? null : type.contentMatch)\n    this.options = options\n    this.content = []\n    // Marks applied to this node itself\n    this.marks = marks\n    // Marks applied to its children\n    this.activeMarks = Mark.none\n    // Marks that can't apply here, but will be used in children if possible\n    this.pendingMarks = pendingMarks\n    // Nested Marks with same type\n    this.stashMarks = []\n  }\n\n  findWrapping(node) {\n    if (!this.match) {\n      if (!this.type) return []\n      let fill = this.type.contentMatch.fillBefore(Fragment.from(node))\n      if (fill) {\n        this.match = this.type.contentMatch.matchFragment(fill)\n      } else {\n        let start = this.type.contentMatch, wrap\n        if (wrap = start.findWrapping(node.type)) {\n          this.match = start\n          return wrap\n        } else {\n          return null\n        }\n      }\n    }\n    return this.match.findWrapping(node.type)\n  }\n\n  finish(openEnd) {\n    if (!(this.options & OPT_PRESERVE_WS)) { // Strip trailing whitespace\n      let last = this.content[this.content.length - 1], m\n      if (last && last.isText && (m = /[ \\t\\r\\n\\u000c]+$/.exec(last.text))) {\n        if (last.text.length == m[0].length) this.content.pop()\n        else this.content[this.content.length - 1] = last.withText(last.text.slice(0, last.text.length - m[0].length))\n      }\n    }\n    let content = Fragment.from(this.content)\n    if (!openEnd && this.match)\n      content = content.append(this.match.fillBefore(Fragment.empty, true))\n    return this.type ? this.type.create(this.attrs, content, this.marks) : content\n  }\n\n  popFromStashMark(mark) {\n    for (let i = this.stashMarks.length - 1; i >= 0; i--)\n      if (mark.eq(this.stashMarks[i])) return this.stashMarks.splice(i, 1)[0]\n  }\n\n  applyPending(nextType) {\n    for (let i = 0, pending = this.pendingMarks; i < pending.length; i++) {\n      let mark = pending[i]\n      if ((this.type ? this.type.allowsMarkType(mark.type) : markMayApply(mark.type, nextType)) &&\n          !mark.isInSet(this.activeMarks)) {\n        this.activeMarks = mark.addToSet(this.activeMarks)\n        this.pendingMarks = mark.removeFromSet(this.pendingMarks)\n      }\n    }\n  }\n}\n\nclass ParseContext {\n  // : (DOMParser, Object)\n  constructor(parser, options, open) {\n    // : DOMParser The parser we are using.\n    this.parser = parser\n    // : Object The options passed to this parse.\n    this.options = options\n    this.isOpen = open\n    let topNode = options.topNode, topContext\n    let topOptions = wsOptionsFor(options.preserveWhitespace) | (open ? OPT_OPEN_LEFT : 0)\n    if (topNode)\n      topContext = new NodeContext(topNode.type, topNode.attrs, Mark.none, Mark.none, true,\n                                   options.topMatch || topNode.type.contentMatch, topOptions)\n    else if (open)\n      topContext = new NodeContext(null, null, Mark.none, Mark.none, true, null, topOptions)\n    else\n      topContext = new NodeContext(parser.schema.topNodeType, null, Mark.none, Mark.none, true, null, topOptions)\n    this.nodes = [topContext]\n    // : [Mark] The current set of marks\n    this.open = 0\n    this.find = options.findPositions\n    this.needsBlock = false\n  }\n\n  get top() {\n    return this.nodes[this.open]\n  }\n\n  // : (dom.Node)\n  // Add a DOM node to the content. Text is inserted as text node,\n  // otherwise, the node is passed to `addElement` or, if it has a\n  // `style` attribute, `addElementWithStyles`.\n  addDOM(dom) {\n    if (dom.nodeType == 3) {\n      this.addTextNode(dom)\n    } else if (dom.nodeType == 1) {\n      let style = dom.getAttribute(\"style\")\n      let marks = style ? this.readStyles(parseStyles(style)) : null, top = this.top\n      if (marks != null) for (let i = 0; i < marks.length; i++) this.addPendingMark(marks[i])\n      this.addElement(dom)\n      if (marks != null) for (let i = 0; i < marks.length; i++) this.removePendingMark(marks[i], top)\n    }\n  }\n\n  addTextNode(dom) {\n    let value = dom.nodeValue\n    let top = this.top\n    if ((top.type ? top.type.inlineContent : top.content.length && top.content[0].isInline) || /[^ \\t\\r\\n\\u000c]/.test(value)) {\n      if (!(top.options & OPT_PRESERVE_WS)) {\n        value = value.replace(/[ \\t\\r\\n\\u000c]+/g, \" \")\n        // If this starts with whitespace, and there is no node before it, or\n        // a hard break, or a text node that ends with whitespace, strip the\n        // leading space.\n        if (/^[ \\t\\r\\n\\u000c]/.test(value) && this.open == this.nodes.length - 1) {\n          let nodeBefore = top.content[top.content.length - 1]\n          let domNodeBefore = dom.previousSibling\n          if (!nodeBefore ||\n              (domNodeBefore && domNodeBefore.nodeName == 'BR') ||\n              (nodeBefore.isText && /[ \\t\\r\\n\\u000c]$/.test(nodeBefore.text)))\n            value = value.slice(1)\n        }\n      } else if (!(top.options & OPT_PRESERVE_WS_FULL)) {\n        value = value.replace(/\\r?\\n|\\r/g, \" \")\n      } else {\n        value = value.replace(/\\r\\n?/g, \"\\n\")\n      }\n      if (value) this.insertNode(this.parser.schema.text(value))\n      this.findInText(dom)\n    } else {\n      this.findInside(dom)\n    }\n  }\n\n  // : (dom.Element, ?ParseRule)\n  // Try to find a handler for the given tag and use that to parse. If\n  // none is found, the element's content nodes are added directly.\n  addElement(dom, matchAfter) {\n    let name = dom.nodeName.toLowerCase(), ruleID\n    if (listTags.hasOwnProperty(name) && this.parser.normalizeLists) normalizeList(dom)\n    let rule = (this.options.ruleFromNode && this.options.ruleFromNode(dom)) ||\n        (ruleID = this.parser.matchTag(dom, this, matchAfter))\n    if (rule ? rule.ignore : ignoreTags.hasOwnProperty(name)) {\n      this.findInside(dom)\n      this.ignoreFallback(dom)\n    } else if (!rule || rule.skip || rule.closeParent) {\n      if (rule && rule.closeParent) this.open = Math.max(0, this.open - 1)\n      else if (rule && rule.skip.nodeType) dom = rule.skip\n      let sync, top = this.top, oldNeedsBlock = this.needsBlock\n      if (blockTags.hasOwnProperty(name)) {\n        sync = true\n        if (!top.type) this.needsBlock = true\n      } else if (!dom.firstChild) {\n        this.leafFallback(dom)\n        return\n      }\n      this.addAll(dom)\n      if (sync) this.sync(top)\n      this.needsBlock = oldNeedsBlock\n    } else {\n      this.addElementByRule(dom, rule, rule.consuming === false ? ruleID : null)\n    }\n  }\n\n  // Called for leaf DOM nodes that would otherwise be ignored\n  leafFallback(dom) {\n    if (dom.nodeName == \"BR\" && this.top.type && this.top.type.inlineContent)\n      this.addTextNode(dom.ownerDocument.createTextNode(\"\\n\"))\n  }\n\n  // Called for ignored nodes\n  ignoreFallback(dom) {\n    // Ignored BR nodes should at least create an inline context\n    if (dom.nodeName == \"BR\" && (!this.top.type || !this.top.type.inlineContent))\n      this.findPlace(this.parser.schema.text(\"-\"))\n  }\n\n  // Run any style parser associated with the node's styles. Either\n  // return an array of marks, or null to indicate some of the styles\n  // had a rule with `ignore` set.\n  readStyles(styles) {\n    let marks = Mark.none\n    style: for (let i = 0; i < styles.length; i += 2) {\n      for (let after = null;;) {\n        let rule = this.parser.matchStyle(styles[i], styles[i + 1], this, after)\n        if (!rule) continue style\n        if (rule.ignore) return null\n        marks = this.parser.schema.marks[rule.mark].create(rule.attrs).addToSet(marks)\n        if (rule.consuming === false) after = rule\n        else break\n      }\n    }\n    return marks\n  }\n\n  // : (dom.Element, ParseRule) → bool\n  // Look up a handler for the given node. If none are found, return\n  // false. Otherwise, apply it, use its return value to drive the way\n  // the node's content is wrapped, and return true.\n  addElementByRule(dom, rule, continueAfter) {\n    let sync, nodeType, markType, mark\n    if (rule.node) {\n      nodeType = this.parser.schema.nodes[rule.node]\n      if (!nodeType.isLeaf) {\n        sync = this.enter(nodeType, rule.attrs, rule.preserveWhitespace)\n      } else if (!this.insertNode(nodeType.create(rule.attrs))) {\n        this.leafFallback(dom)\n      }\n    } else {\n      markType = this.parser.schema.marks[rule.mark]\n      mark = markType.create(rule.attrs)\n      this.addPendingMark(mark)\n    }\n    let startIn = this.top\n\n    if (nodeType && nodeType.isLeaf) {\n      this.findInside(dom)\n    } else if (continueAfter) {\n      this.addElement(dom, continueAfter)\n    } else if (rule.getContent) {\n      this.findInside(dom)\n      rule.getContent(dom, this.parser.schema).forEach(node => this.insertNode(node))\n    } else {\n      let contentDOM = rule.contentElement\n      if (typeof contentDOM == \"string\") contentDOM = dom.querySelector(contentDOM)\n      else if (typeof contentDOM == \"function\") contentDOM = contentDOM(dom)\n      if (!contentDOM) contentDOM = dom\n      this.findAround(dom, contentDOM, true)\n      this.addAll(contentDOM, sync)\n    }\n    if (sync) { this.sync(startIn); this.open-- }\n    if (mark) this.removePendingMark(mark, startIn)\n  }\n\n  // : (dom.Node, ?NodeBuilder, ?number, ?number)\n  // Add all child nodes between `startIndex` and `endIndex` (or the\n  // whole node, if not given). If `sync` is passed, use it to\n  // synchronize after every block element.\n  addAll(parent, sync, startIndex, endIndex) {\n    let index = startIndex || 0\n    for (let dom = startIndex ? parent.childNodes[startIndex] : parent.firstChild,\n             end = endIndex == null ? null : parent.childNodes[endIndex];\n         dom != end; dom = dom.nextSibling, ++index) {\n      this.findAtPoint(parent, index)\n      this.addDOM(dom)\n      if (sync && blockTags.hasOwnProperty(dom.nodeName.toLowerCase()))\n        this.sync(sync)\n    }\n    this.findAtPoint(parent, index)\n  }\n\n  // Try to find a way to fit the given node type into the current\n  // context. May add intermediate wrappers and/or leave non-solid\n  // nodes that we're in.\n  findPlace(node) {\n    let route, sync\n    for (let depth = this.open; depth >= 0; depth--) {\n      let cx = this.nodes[depth]\n      let found = cx.findWrapping(node)\n      if (found && (!route || route.length > found.length)) {\n        route = found\n        sync = cx\n        if (!found.length) break\n      }\n      if (cx.solid) break\n    }\n    if (!route) return false\n    this.sync(sync)\n    for (let i = 0; i < route.length; i++)\n      this.enterInner(route[i], null, false)\n    return true\n  }\n\n  // : (Node) → ?Node\n  // Try to insert the given node, adjusting the context when needed.\n  insertNode(node) {\n    if (node.isInline && this.needsBlock && !this.top.type) {\n      let block = this.textblockFromContext()\n      if (block) this.enterInner(block)\n    }\n    if (this.findPlace(node)) {\n      this.closeExtra()\n      let top = this.top\n      top.applyPending(node.type)\n      if (top.match) top.match = top.match.matchType(node.type)\n      let marks = top.activeMarks\n      for (let i = 0; i < node.marks.length; i++)\n        if (!top.type || top.type.allowsMarkType(node.marks[i].type))\n          marks = node.marks[i].addToSet(marks)\n      top.content.push(node.mark(marks))\n      return true\n    }\n    return false\n  }\n\n  // : (NodeType, ?Object) → bool\n  // Try to start a node of the given type, adjusting the context when\n  // necessary.\n  enter(type, attrs, preserveWS) {\n    let ok = this.findPlace(type.create(attrs))\n    if (ok) this.enterInner(type, attrs, true, preserveWS)\n    return ok\n  }\n\n  // Open a node of the given type\n  enterInner(type, attrs, solid, preserveWS) {\n    this.closeExtra()\n    let top = this.top\n    top.applyPending(type)\n    top.match = top.match && top.match.matchType(type, attrs)\n    let options = preserveWS == null ? top.options & ~OPT_OPEN_LEFT : wsOptionsFor(preserveWS)\n    if ((top.options & OPT_OPEN_LEFT) && top.content.length == 0) options |= OPT_OPEN_LEFT\n    this.nodes.push(new NodeContext(type, attrs, top.activeMarks, top.pendingMarks, solid, null, options))\n    this.open++\n  }\n\n  // Make sure all nodes above this.open are finished and added to\n  // their parents\n  closeExtra(openEnd) {\n    let i = this.nodes.length - 1\n    if (i > this.open) {\n      for (; i > this.open; i--) this.nodes[i - 1].content.push(this.nodes[i].finish(openEnd))\n      this.nodes.length = this.open + 1\n    }\n  }\n\n  finish() {\n    this.open = 0\n    this.closeExtra(this.isOpen)\n    return this.nodes[0].finish(this.isOpen || this.options.topOpen)\n  }\n\n  sync(to) {\n    for (let i = this.open; i >= 0; i--) if (this.nodes[i] == to) {\n      this.open = i\n      return\n    }\n  }\n\n  get currentPos() {\n    this.closeExtra()\n    let pos = 0\n    for (let i = this.open; i >= 0; i--) {\n      let content = this.nodes[i].content\n      for (let j = content.length - 1; j >= 0; j--)\n        pos += content[j].nodeSize\n      if (i) pos++\n    }\n    return pos\n  }\n\n  findAtPoint(parent, offset) {\n    if (this.find) for (let i = 0; i < this.find.length; i++) {\n      if (this.find[i].node == parent && this.find[i].offset == offset)\n        this.find[i].pos = this.currentPos\n    }\n  }\n\n  findInside(parent) {\n    if (this.find) for (let i = 0; i < this.find.length; i++) {\n      if (this.find[i].pos == null && parent.nodeType == 1 && parent.contains(this.find[i].node))\n        this.find[i].pos = this.currentPos\n    }\n  }\n\n  findAround(parent, content, before) {\n    if (parent != content && this.find) for (let i = 0; i < this.find.length; i++) {\n      if (this.find[i].pos == null && parent.nodeType == 1 && parent.contains(this.find[i].node)) {\n        let pos = content.compareDocumentPosition(this.find[i].node)\n        if (pos & (before ? 2 : 4))\n          this.find[i].pos = this.currentPos\n      }\n    }\n  }\n\n  findInText(textNode) {\n    if (this.find) for (let i = 0; i < this.find.length; i++) {\n      if (this.find[i].node == textNode)\n        this.find[i].pos = this.currentPos - (textNode.nodeValue.length - this.find[i].offset)\n    }\n  }\n\n  // : (string) → bool\n  // Determines whether the given [context\n  // string](#ParseRule.context) matches this context.\n  matchesContext(context) {\n    if (context.indexOf(\"|\") > -1)\n      return context.split(/\\s*\\|\\s*/).some(this.matchesContext, this)\n\n    let parts = context.split(\"/\")\n    let option = this.options.context\n    let useRoot = !this.isOpen && (!option || option.parent.type == this.nodes[0].type)\n    let minDepth = -(option ? option.depth + 1 : 0) + (useRoot ? 0 : 1)\n    let match = (i, depth) => {\n      for (; i >= 0; i--) {\n        let part = parts[i]\n        if (part == \"\") {\n          if (i == parts.length - 1 || i == 0) continue\n          for (; depth >= minDepth; depth--)\n            if (match(i - 1, depth)) return true\n          return false\n        } else {\n          let next = depth > 0 || (depth == 0 && useRoot) ? this.nodes[depth].type\n              : option && depth >= minDepth ? option.node(depth - minDepth).type\n              : null\n          if (!next || (next.name != part && next.groups.indexOf(part) == -1))\n            return false\n          depth--\n        }\n      }\n      return true\n    }\n    return match(parts.length - 1, this.open)\n  }\n\n  textblockFromContext() {\n    let $context = this.options.context\n    if ($context) for (let d = $context.depth; d >= 0; d--) {\n      let deflt = $context.node(d).contentMatchAt($context.indexAfter(d)).defaultType\n      if (deflt && deflt.isTextblock && deflt.defaultAttrs) return deflt\n    }\n    for (let name in this.parser.schema.nodes) {\n      let type = this.parser.schema.nodes[name]\n      if (type.isTextblock && type.defaultAttrs) return type\n    }\n  }\n\n  addPendingMark(mark) {\n    let found = findSameMarkInSet(mark, this.top.pendingMarks)\n    if (found) this.top.stashMarks.push(found)\n    this.top.pendingMarks = mark.addToSet(this.top.pendingMarks)\n  }\n\n  removePendingMark(mark, upto) {\n    for (let depth = this.open; depth >= 0; depth--) {\n      let level = this.nodes[depth]\n      let found = level.pendingMarks.lastIndexOf(mark)\n      if (found > -1) {\n        level.pendingMarks = mark.removeFromSet(level.pendingMarks)\n      } else {\n        level.activeMarks = mark.removeFromSet(level.activeMarks)\n        let stashMark = level.popFromStashMark(mark)\n        if (stashMark && level.type && level.type.allowsMarkType(stashMark.type))\n          level.activeMarks = stashMark.addToSet(level.activeMarks)\n      }\n      if (level == upto) break\n    }\n  }\n}\n\n// Kludge to work around directly nested list nodes produced by some\n// tools and allowed by browsers to mean that the nested list is\n// actually part of the list item above it.\nfunction normalizeList(dom) {\n  for (let child = dom.firstChild, prevItem = null; child; child = child.nextSibling) {\n    let name = child.nodeType == 1 ? child.nodeName.toLowerCase() : null\n    if (name && listTags.hasOwnProperty(name) && prevItem) {\n      prevItem.appendChild(child)\n      child = prevItem\n    } else if (name == \"li\") {\n      prevItem = child\n    } else if (name) {\n      prevItem = null\n    }\n  }\n}\n\n// Apply a CSS selector.\nfunction matches(dom, selector) {\n  return (dom.matches || dom.msMatchesSelector || dom.webkitMatchesSelector || dom.mozMatchesSelector).call(dom, selector)\n}\n\n// : (string) → [string]\n// Tokenize a style attribute into property/value pairs.\nfunction parseStyles(style) {\n  let re = /\\s*([\\w-]+)\\s*:\\s*([^;]+)/g, m, result = []\n  while (m = re.exec(style)) result.push(m[1], m[2].trim())\n  return result\n}\n\nfunction copy(obj) {\n  let copy = {}\n  for (let prop in obj) copy[prop] = obj[prop]\n  return copy\n}\n\n// Used when finding a mark at the top level of a fragment parse.\n// Checks whether it would be reasonable to apply a given mark type to\n// a given node, by looking at the way the mark occurs in the schema.\nfunction markMayApply(markType, nodeType) {\n  let nodes = nodeType.schema.nodes\n  for (let name in nodes) {\n    let parent = nodes[name]\n    if (!parent.allowsMarkType(markType)) continue\n    let seen = [], scan = match => {\n      seen.push(match)\n      for (let i = 0; i < match.edgeCount; i++) {\n        let {type, next} = match.edge(i)\n        if (type == nodeType) return true\n        if (seen.indexOf(next) < 0 && scan(next)) return true\n      }\n    }\n    if (scan(parent.contentMatch)) return true\n  }\n}\n\nfunction findSameMarkInSet(mark, set) {\n  for (let i = 0; i < set.length; i++) {\n    if (mark.eq(set[i])) return set[i]\n  }\n}\n","// DOMOutputSpec:: interface\n// A description of a DOM structure. Can be either a string, which is\n// interpreted as a text node, a DOM node, which is interpreted as\n// itself, a `{dom: Node, contentDOM: ?Node}` object, or an array.\n//\n// An array describes a DOM element. The first value in the array\n// should be a string—the name of the DOM element, optionally prefixed\n// by a namespace URL and a space. If the second element is plain\n// object, it is interpreted as a set of attributes for the element.\n// Any elements after that (including the 2nd if it's not an attribute\n// object) are interpreted as children of the DOM elements, and must\n// either be valid `DOMOutputSpec` values, or the number zero.\n//\n// The number zero (pronounced “hole”) is used to indicate the place\n// where a node's child nodes should be inserted. If it occurs in an\n// output spec, it should be the only child element in its parent\n// node.\n\n// ::- A DOM serializer knows how to convert ProseMirror nodes and\n// marks of various types to DOM nodes.\nexport class DOMSerializer {\n  // :: (Object<(node: Node) → DOMOutputSpec>, Object<?(mark: Mark, inline: bool) → DOMOutputSpec>)\n  // Create a serializer. `nodes` should map node names to functions\n  // that take a node and return a description of the corresponding\n  // DOM. `marks` does the same for mark names, but also gets an\n  // argument that tells it whether the mark's content is block or\n  // inline content (for typical use, it'll always be inline). A mark\n  // serializer may be `null` to indicate that marks of that type\n  // should not be serialized.\n  constructor(nodes, marks) {\n    // :: Object<(node: Node) → DOMOutputSpec>\n    // The node serialization functions.\n    this.nodes = nodes || {}\n    // :: Object<?(mark: Mark, inline: bool) → DOMOutputSpec>\n    // The mark serialization functions.\n    this.marks = marks || {}\n  }\n\n  // :: (Fragment, ?Object) → dom.DocumentFragment\n  // Serialize the content of this fragment to a DOM fragment. When\n  // not in the browser, the `document` option, containing a DOM\n  // document, should be passed so that the serializer can create\n  // nodes.\n  serializeFragment(fragment, options = {}, target) {\n    if (!target) target = doc(options).createDocumentFragment()\n\n    let top = target, active = null\n    fragment.forEach(node => {\n      if (active || node.marks.length) {\n        if (!active) active = []\n        let keep = 0, rendered = 0\n        while (keep < active.length && rendered < node.marks.length) {\n          let next = node.marks[rendered]\n          if (!this.marks[next.type.name]) { rendered++; continue }\n          if (!next.eq(active[keep]) || next.type.spec.spanning === false) break\n          keep += 2; rendered++\n        }\n        while (keep < active.length) {\n          top = active.pop()\n          active.pop()\n        }\n        while (rendered < node.marks.length) {\n          let add = node.marks[rendered++]\n          let markDOM = this.serializeMark(add, node.isInline, options)\n          if (markDOM) {\n            active.push(add, top)\n            top.appendChild(markDOM.dom)\n            top = markDOM.contentDOM || markDOM.dom\n          }\n        }\n      }\n      top.appendChild(this.serializeNode(node, options))\n    })\n\n    return target\n  }\n\n  // :: (Node, ?Object) → dom.Node\n  // Serialize this node to a DOM node. This can be useful when you\n  // need to serialize a part of a document, as opposed to the whole\n  // document. To serialize a whole document, use\n  // [`serializeFragment`](#model.DOMSerializer.serializeFragment) on\n  // its [content](#model.Node.content).\n  serializeNode(node, options = {}) {\n    let {dom, contentDOM} =\n        DOMSerializer.renderSpec(doc(options), this.nodes[node.type.name](node))\n    if (contentDOM) {\n      if (node.isLeaf)\n        throw new RangeError(\"Content hole not allowed in a leaf node spec\")\n      if (options.onContent)\n        options.onContent(node, contentDOM, options)\n      else\n        this.serializeFragment(node.content, options, contentDOM)\n    }\n    return dom\n  }\n\n  serializeNodeAndMarks(node, options = {}) {\n    let dom = this.serializeNode(node, options)\n    for (let i = node.marks.length - 1; i >= 0; i--) {\n      let wrap = this.serializeMark(node.marks[i], node.isInline, options)\n      if (wrap) {\n        ;(wrap.contentDOM || wrap.dom).appendChild(dom)\n        dom = wrap.dom\n      }\n    }\n    return dom\n  }\n\n  serializeMark(mark, inline, options = {}) {\n    let toDOM = this.marks[mark.type.name]\n    return toDOM && DOMSerializer.renderSpec(doc(options), toDOM(mark, inline))\n  }\n\n  // :: (dom.Document, DOMOutputSpec) → {dom: dom.Node, contentDOM: ?dom.Node}\n  // Render an [output spec](#model.DOMOutputSpec) to a DOM node. If\n  // the spec has a hole (zero) in it, `contentDOM` will point at the\n  // node with the hole.\n  static renderSpec(doc, structure, xmlNS = null) {\n    if (typeof structure == \"string\")\n      return {dom: doc.createTextNode(structure)}\n    if (structure.nodeType != null)\n      return {dom: structure}\n    if (structure.dom && structure.dom.nodeType != null)\n      return structure\n    let tagName = structure[0], space = tagName.indexOf(\" \")\n    if (space > 0) {\n      xmlNS = tagName.slice(0, space)\n      tagName = tagName.slice(space + 1)\n    }\n    let contentDOM = null, dom = xmlNS ? doc.createElementNS(xmlNS, tagName) : doc.createElement(tagName)\n    let attrs = structure[1], start = 1\n    if (attrs && typeof attrs == \"object\" && attrs.nodeType == null && !Array.isArray(attrs)) {\n      start = 2\n      for (let name in attrs) if (attrs[name] != null) {\n        let space = name.indexOf(\" \")\n        if (space > 0) dom.setAttributeNS(name.slice(0, space), name.slice(space + 1), attrs[name])\n        else dom.setAttribute(name, attrs[name])\n      }\n    }\n    for (let i = start; i < structure.length; i++) {\n      let child = structure[i]\n      if (child === 0) {\n        if (i < structure.length - 1 || i > start)\n          throw new RangeError(\"Content hole must be the only child of its parent node\")\n        return {dom, contentDOM: dom}\n      } else {\n        let {dom: inner, contentDOM: innerContent} = DOMSerializer.renderSpec(doc, child, xmlNS)\n        dom.appendChild(inner)\n        if (innerContent) {\n          if (contentDOM) throw new RangeError(\"Multiple content holes\")\n          contentDOM = innerContent\n        }\n      }\n    }\n    return {dom, contentDOM}\n  }\n\n  // :: (Schema) → DOMSerializer\n  // Build a serializer using the [`toDOM`](#model.NodeSpec.toDOM)\n  // properties in a schema's node and mark specs.\n  static fromSchema(schema) {\n    return schema.cached.domSerializer ||\n      (schema.cached.domSerializer = new DOMSerializer(this.nodesFromSchema(schema), this.marksFromSchema(schema)))\n  }\n\n  // : (Schema) → Object<(node: Node) → DOMOutputSpec>\n  // Gather the serializers in a schema's node specs into an object.\n  // This can be useful as a base to build a custom serializer from.\n  static nodesFromSchema(schema) {\n    let result = gatherToDOM(schema.nodes)\n    if (!result.text) result.text = node => node.text\n    return result\n  }\n\n  // : (Schema) → Object<(mark: Mark) → DOMOutputSpec>\n  // Gather the serializers in a schema's mark specs into an object.\n  static marksFromSchema(schema) {\n    return gatherToDOM(schema.marks)\n  }\n}\n\nfunction gatherToDOM(obj) {\n  let result = {}\n  for (let name in obj) {\n    let toDOM = obj[name].spec.toDOM\n    if (toDOM) result[name] = toDOM\n  }\n  return result\n}\n\nfunction doc(options) {\n  // declare global: window\n  return options.document || window.document\n}\n","// Mappable:: interface\n// There are several things that positions can be mapped through.\n// Such objects conform to this interface.\n//\n//   map:: (pos: number, assoc: ?number) → number\n//   Map a position through this object. When given, `assoc` (should\n//   be -1 or 1, defaults to 1) determines with which side the\n//   position is associated, which determines in which direction to\n//   move when a chunk of content is inserted at the mapped position.\n//\n//   mapResult:: (pos: number, assoc: ?number) → MapResult\n//   Map a position, and return an object containing additional\n//   information about the mapping. The result's `deleted` field tells\n//   you whether the position was deleted (completely enclosed in a\n//   replaced range) during the mapping. When content on only one side\n//   is deleted, the position itself is only considered deleted when\n//   `assoc` points in the direction of the deleted content.\n\n// Recovery values encode a range index and an offset. They are\n// represented as numbers, because tons of them will be created when\n// mapping, for example, a large number of decorations. The number's\n// lower 16 bits provide the index, the remaining bits the offset.\n//\n// Note: We intentionally don't use bit shift operators to en- and\n// decode these, since those clip to 32 bits, which we might in rare\n// cases want to overflow. A 64-bit float can represent 48-bit\n// integers precisely.\n\nconst lower16 = 0xffff\nconst factor16 = Math.pow(2, 16)\n\nfunction makeRecover(index, offset) { return index + offset * factor16 }\nfunction recoverIndex(value) { return value & lower16 }\nfunction recoverOffset(value) { return (value - (value & lower16)) / factor16 }\n\n// ::- An object representing a mapped position with extra\n// information.\nexport class MapResult {\n  constructor(pos, deleted = false, recover = null) {\n    // :: number The mapped version of the position.\n    this.pos = pos\n    // :: bool Tells you whether the position was deleted, that is,\n    // whether the step removed its surroundings from the document.\n    this.deleted = deleted\n    this.recover = recover\n  }\n}\n\n// :: class extends Mappable\n// A map describing the deletions and insertions made by a step, which\n// can be used to find the correspondence between positions in the\n// pre-step version of a document and the same position in the\n// post-step version.\nexport class StepMap {\n  // :: ([number])\n  // Create a position map. The modifications to the document are\n  // represented as an array of numbers, in which each group of three\n  // represents a modified chunk as `[start, oldSize, newSize]`.\n  constructor(ranges, inverted = false) {\n    this.ranges = ranges\n    this.inverted = inverted\n  }\n\n  recover(value) {\n    let diff = 0, index = recoverIndex(value)\n    if (!this.inverted) for (let i = 0; i < index; i++)\n      diff += this.ranges[i * 3 + 2] - this.ranges[i * 3 + 1]\n    return this.ranges[index * 3] + diff + recoverOffset(value)\n  }\n\n  // : (number, ?number) → MapResult\n  mapResult(pos, assoc = 1) { return this._map(pos, assoc, false) }\n\n  // : (number, ?number) → number\n  map(pos, assoc = 1) { return this._map(pos, assoc, true) }\n\n  _map(pos, assoc, simple) {\n    let diff = 0, oldIndex = this.inverted ? 2 : 1, newIndex = this.inverted ? 1 : 2\n    for (let i = 0; i < this.ranges.length; i += 3) {\n      let start = this.ranges[i] - (this.inverted ? diff : 0)\n      if (start > pos) break\n      let oldSize = this.ranges[i + oldIndex], newSize = this.ranges[i + newIndex], end = start + oldSize\n      if (pos <= end) {\n        let side = !oldSize ? assoc : pos == start ? -1 : pos == end ? 1 : assoc\n        let result = start + diff + (side < 0 ? 0 : newSize)\n        if (simple) return result\n        let recover = pos == (assoc < 0 ? start : end) ? null : makeRecover(i / 3, pos - start)\n        return new MapResult(result, assoc < 0 ? pos != start : pos != end, recover)\n      }\n      diff += newSize - oldSize\n    }\n    return simple ? pos + diff : new MapResult(pos + diff)\n  }\n\n  touches(pos, recover) {\n    let diff = 0, index = recoverIndex(recover)\n    let oldIndex = this.inverted ? 2 : 1, newIndex = this.inverted ? 1 : 2\n    for (let i = 0; i < this.ranges.length; i += 3) {\n      let start = this.ranges[i] - (this.inverted ? diff : 0)\n      if (start > pos) break\n      let oldSize = this.ranges[i + oldIndex], end = start + oldSize\n      if (pos <= end && i == index * 3) return true\n      diff += this.ranges[i + newIndex] - oldSize\n    }\n    return false\n  }\n\n  // :: ((oldStart: number, oldEnd: number, newStart: number, newEnd: number))\n  // Calls the given function on each of the changed ranges included in\n  // this map.\n  forEach(f) {\n    let oldIndex = this.inverted ? 2 : 1, newIndex = this.inverted ? 1 : 2\n    for (let i = 0, diff = 0; i < this.ranges.length; i += 3) {\n      let start = this.ranges[i], oldStart = start - (this.inverted ? diff : 0), newStart = start + (this.inverted ? 0 : diff)\n      let oldSize = this.ranges[i + oldIndex], newSize = this.ranges[i + newIndex]\n      f(oldStart, oldStart + oldSize, newStart, newStart + newSize)\n      diff += newSize - oldSize\n    }\n  }\n\n  // :: () → StepMap\n  // Create an inverted version of this map. The result can be used to\n  // map positions in the post-step document to the pre-step document.\n  invert() {\n    return new StepMap(this.ranges, !this.inverted)\n  }\n\n  toString() {\n    return (this.inverted ? \"-\" : \"\") + JSON.stringify(this.ranges)\n  }\n\n  // :: (n: number) → StepMap\n  // Create a map that moves all positions by offset `n` (which may be\n  // negative). This can be useful when applying steps meant for a\n  // sub-document to a larger document, or vice-versa.\n  static offset(n) {\n    return n == 0 ? StepMap.empty : new StepMap(n < 0 ? [0, -n, 0] : [0, 0, n])\n  }\n}\n\nStepMap.empty = new StepMap([])\n\n// :: class extends Mappable\n// A mapping represents a pipeline of zero or more [step\n// maps](#transform.StepMap). It has special provisions for losslessly\n// handling mapping positions through a series of steps in which some\n// steps are inverted versions of earlier steps. (This comes up when\n// ‘[rebasing](/docs/guide/#transform.rebasing)’ steps for\n// collaboration or history management.)\nexport class Mapping {\n  // :: (?[StepMap])\n  // Create a new mapping with the given position maps.\n  constructor(maps, mirror, from, to) {\n    // :: [StepMap]\n    // The step maps in this mapping.\n    this.maps = maps || []\n    // :: number\n    // The starting position in the `maps` array, used when `map` or\n    // `mapResult` is called.\n    this.from = from || 0\n    // :: number\n    // The end position in the `maps` array.\n    this.to = to == null ? this.maps.length : to\n    this.mirror = mirror\n  }\n\n  // :: (?number, ?number) → Mapping\n  // Create a mapping that maps only through a part of this one.\n  slice(from = 0, to = this.maps.length) {\n    return new Mapping(this.maps, this.mirror, from, to)\n  }\n\n  copy() {\n    return new Mapping(this.maps.slice(), this.mirror && this.mirror.slice(), this.from, this.to)\n  }\n\n  // :: (StepMap, ?number)\n  // Add a step map to the end of this mapping. If `mirrors` is\n  // given, it should be the index of the step map that is the mirror\n  // image of this one.\n  appendMap(map, mirrors) {\n    this.to = this.maps.push(map)\n    if (mirrors != null) this.setMirror(this.maps.length - 1, mirrors)\n  }\n\n  // :: (Mapping)\n  // Add all the step maps in a given mapping to this one (preserving\n  // mirroring information).\n  appendMapping(mapping) {\n    for (let i = 0, startSize = this.maps.length; i < mapping.maps.length; i++) {\n      let mirr = mapping.getMirror(i)\n      this.appendMap(mapping.maps[i], mirr != null && mirr < i ? startSize + mirr : null)\n    }\n  }\n\n  // :: (number) → ?number\n  // Finds the offset of the step map that mirrors the map at the\n  // given offset, in this mapping (as per the second argument to\n  // `appendMap`).\n  getMirror(n) {\n    if (this.mirror) for (let i = 0; i < this.mirror.length; i++)\n      if (this.mirror[i] == n) return this.mirror[i + (i % 2 ? -1 : 1)]\n  }\n\n  setMirror(n, m) {\n    if (!this.mirror) this.mirror = []\n    this.mirror.push(n, m)\n  }\n\n  // :: (Mapping)\n  // Append the inverse of the given mapping to this one.\n  appendMappingInverted(mapping) {\n    for (let i = mapping.maps.length - 1, totalSize = this.maps.length + mapping.maps.length; i >= 0; i--) {\n      let mirr = mapping.getMirror(i)\n      this.appendMap(mapping.maps[i].invert(), mirr != null && mirr > i ? totalSize - mirr - 1 : null)\n    }\n  }\n\n  // :: () → Mapping\n  // Create an inverted version of this mapping.\n  invert() {\n    let inverse = new Mapping\n    inverse.appendMappingInverted(this)\n    return inverse\n  }\n\n  // : (number, ?number) → number\n  // Map a position through this mapping.\n  map(pos, assoc = 1) {\n    if (this.mirror) return this._map(pos, assoc, true)\n    for (let i = this.from; i < this.to; i++)\n      pos = this.maps[i].map(pos, assoc)\n    return pos\n  }\n\n  // : (number, ?number) → MapResult\n  // Map a position through this mapping, returning a mapping\n  // result.\n  mapResult(pos, assoc = 1) { return this._map(pos, assoc, false) }\n\n  _map(pos, assoc, simple) {\n    let deleted = false\n\n    for (let i = this.from; i < this.to; i++) {\n      let map = this.maps[i], result = map.mapResult(pos, assoc)\n      if (result.recover != null) {\n        let corr = this.getMirror(i)\n        if (corr != null && corr > i && corr < this.to) {\n          i = corr\n          pos = this.maps[corr].recover(result.recover)\n          continue\n        }\n      }\n\n      if (result.deleted) deleted = true\n      pos = result.pos\n    }\n\n    return simple ? pos : new MapResult(pos, deleted)\n  }\n}\n","import {Mapping} from \"./map\"\n\nexport function TransformError(message) {\n  let err = Error.call(this, message)\n  err.__proto__ = TransformError.prototype\n  return err\n}\n\nTransformError.prototype = Object.create(Error.prototype)\nTransformError.prototype.constructor = TransformError\nTransformError.prototype.name = \"TransformError\"\n\n// ::- Abstraction to build up and track an array of\n// [steps](#transform.Step) representing a document transformation.\n//\n// Most transforming methods return the `Transform` object itself, so\n// that they can be chained.\nexport class Transform {\n  // :: (Node)\n  // Create a transform that starts with the given document.\n  constructor(doc) {\n    // :: Node\n    // The current document (the result of applying the steps in the\n    // transform).\n    this.doc = doc\n    // :: [Step]\n    // The steps in this transform.\n    this.steps = []\n    // :: [Node]\n    // The documents before each of the steps.\n    this.docs = []\n    // :: Mapping\n    // A mapping with the maps for each of the steps in this transform.\n    this.mapping = new Mapping\n  }\n\n  // :: Node The starting document.\n  get before() { return this.docs.length ? this.docs[0] : this.doc }\n\n  // :: (step: Step) → this\n  // Apply a new step in this transform, saving the result. Throws an\n  // error when the step fails.\n  step(object) {\n    let result = this.maybeStep(object)\n    if (result.failed) throw new TransformError(result.failed)\n    return this\n  }\n\n  // :: (Step) → StepResult\n  // Try to apply a step in this transformation, ignoring it if it\n  // fails. Returns the step result.\n  maybeStep(step) {\n    let result = step.apply(this.doc)\n    if (!result.failed) this.addStep(step, result.doc)\n    return result\n  }\n\n  // :: bool\n  // True when the document has been changed (when there are any\n  // steps).\n  get docChanged() {\n    return this.steps.length > 0\n  }\n\n  addStep(step, doc) {\n    this.docs.push(this.doc)\n    this.steps.push(step)\n    this.mapping.appendMap(step.getMap())\n    this.doc = doc\n  }\n}\n","import {ReplaceError} from \"prosemirror-model\"\n\nimport {StepMap} from \"./map\"\n\nfunction mustOverride() { throw new Error(\"Override me\") }\n\nconst stepsByID = Object.create(null)\n\n// ::- A step object represents an atomic change. It generally applies\n// only to the document it was created for, since the positions\n// stored in it will only make sense for that document.\n//\n// New steps are defined by creating classes that extend `Step`,\n// overriding the `apply`, `invert`, `map`, `getMap` and `fromJSON`\n// methods, and registering your class with a unique\n// JSON-serialization identifier using\n// [`Step.jsonID`](#transform.Step^jsonID).\nexport class Step {\n  // :: (doc: Node) → StepResult\n  // Applies this step to the given document, returning a result\n  // object that either indicates failure, if the step can not be\n  // applied to this document, or indicates success by containing a\n  // transformed document.\n  apply(_doc) { return mustOverride() }\n\n  // :: () → StepMap\n  // Get the step map that represents the changes made by this step,\n  // and which can be used to transform between positions in the old\n  // and the new document.\n  getMap() { return StepMap.empty }\n\n  // :: (doc: Node) → Step\n  // Create an inverted version of this step. Needs the document as it\n  // was before the step as argument.\n  invert(_doc) { return mustOverride() }\n\n  // :: (mapping: Mappable) → ?Step\n  // Map this step through a mappable thing, returning either a\n  // version of that step with its positions adjusted, or `null` if\n  // the step was entirely deleted by the mapping.\n  map(_mapping) { return mustOverride() }\n\n  // :: (other: Step) → ?Step\n  // Try to merge this step with another one, to be applied directly\n  // after it. Returns the merged step when possible, null if the\n  // steps can't be merged.\n  merge(_other) { return null }\n\n  // :: () → Object\n  // Create a JSON-serializeable representation of this step. When\n  // defining this for a custom subclass, make sure the result object\n  // includes the step type's [JSON id](#transform.Step^jsonID) under\n  // the `stepType` property.\n  toJSON() { return mustOverride() }\n\n  // :: (Schema, Object) → Step\n  // Deserialize a step from its JSON representation. Will call\n  // through to the step class' own implementation of this method.\n  static fromJSON(schema, json) {\n    if (!json || !json.stepType) throw new RangeError(\"Invalid input for Step.fromJSON\")\n    let type = stepsByID[json.stepType]\n    if (!type) throw new RangeError(`No step type ${json.stepType} defined`)\n    return type.fromJSON(schema, json)\n  }\n\n  // :: (string, constructor<Step>)\n  // To be able to serialize steps to JSON, each step needs a string\n  // ID to attach to its JSON representation. Use this method to\n  // register an ID for your step classes. Try to pick something\n  // that's unlikely to clash with steps from other modules.\n  static jsonID(id, stepClass) {\n    if (id in stepsByID) throw new RangeError(\"Duplicate use of step JSON ID \" + id)\n    stepsByID[id] = stepClass\n    stepClass.prototype.jsonID = id\n    return stepClass\n  }\n}\n\n// ::- The result of [applying](#transform.Step.apply) a step. Contains either a\n// new document or a failure value.\nexport class StepResult {\n  // : (?Node, ?string)\n  constructor(doc, failed) {\n    // :: ?Node The transformed document.\n    this.doc = doc\n    // :: ?string Text providing information about a failed step.\n    this.failed = failed\n  }\n\n  // :: (Node) → StepResult\n  // Create a successful step result.\n  static ok(doc) { return new StepResult(doc, null) }\n\n  // :: (string) → StepResult\n  // Create a failed step result.\n  static fail(message) { return new StepResult(null, message) }\n\n  // :: (Node, number, number, Slice) → StepResult\n  // Call [`Node.replace`](#model.Node.replace) with the given\n  // arguments. Create a successful result if it succeeds, and a\n  // failed one if it throws a `ReplaceError`.\n  static fromReplace(doc, from, to, slice) {\n    try {\n      return StepResult.ok(doc.replace(from, to, slice))\n    } catch (e) {\n      if (e instanceof ReplaceError) return StepResult.fail(e.message)\n      throw e\n    }\n  }\n}\n","import {Slice} from \"prosemirror-model\"\n\nimport {Step, StepResult} from \"./step\"\nimport {StepMap} from \"./map\"\n\n// ::- Replace a part of the document with a slice of new content.\nexport class ReplaceStep extends Step {\n  // :: (number, number, Slice, ?bool)\n  // The given `slice` should fit the 'gap' between `from` and\n  // `to`—the depths must line up, and the surrounding nodes must be\n  // able to be joined with the open sides of the slice. When\n  // `structure` is true, the step will fail if the content between\n  // from and to is not just a sequence of closing and then opening\n  // tokens (this is to guard against rebased replace steps\n  // overwriting something they weren't supposed to).\n  constructor(from, to, slice, structure) {\n    super()\n    // :: number\n    // The start position of the replaced range.\n    this.from = from\n    // :: number\n    // The end position of the replaced range.\n    this.to = to\n    // :: Slice\n    // The slice to insert.\n    this.slice = slice\n    this.structure = !!structure\n  }\n\n  apply(doc) {\n    if (this.structure && contentBetween(doc, this.from, this.to))\n      return StepResult.fail(\"Structure replace would overwrite content\")\n    return StepResult.fromReplace(doc, this.from, this.to, this.slice)\n  }\n\n  getMap() {\n    return new StepMap([this.from, this.to - this.from, this.slice.size])\n  }\n\n  invert(doc) {\n    return new ReplaceStep(this.from, this.from + this.slice.size, doc.slice(this.from, this.to))\n  }\n\n  map(mapping) {\n    let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1)\n    if (from.deleted && to.deleted) return null\n    return new ReplaceStep(from.pos, Math.max(from.pos, to.pos), this.slice)\n  }\n\n  merge(other) {\n    if (!(other instanceof ReplaceStep) || other.structure || this.structure) return null\n\n    if (this.from + this.slice.size == other.from && !this.slice.openEnd && !other.slice.openStart) {\n      let slice = this.slice.size + other.slice.size == 0 ? Slice.empty\n          : new Slice(this.slice.content.append(other.slice.content), this.slice.openStart, other.slice.openEnd)\n      return new ReplaceStep(this.from, this.to + (other.to - other.from), slice, this.structure)\n    } else if (other.to == this.from && !this.slice.openStart && !other.slice.openEnd) {\n      let slice = this.slice.size + other.slice.size == 0 ? Slice.empty\n          : new Slice(other.slice.content.append(this.slice.content), other.slice.openStart, this.slice.openEnd)\n      return new ReplaceStep(other.from, this.to, slice, this.structure)\n    } else {\n      return null\n    }\n  }\n\n  toJSON() {\n    let json = {stepType: \"replace\", from: this.from, to: this.to}\n    if (this.slice.size) json.slice = this.slice.toJSON()\n    if (this.structure) json.structure = true\n    return json\n  }\n\n  static fromJSON(schema, json) {\n    if (typeof json.from != \"number\" || typeof json.to != \"number\")\n      throw new RangeError(\"Invalid input for ReplaceStep.fromJSON\")\n    return new ReplaceStep(json.from, json.to, Slice.fromJSON(schema, json.slice), !!json.structure)\n  }\n}\n\nStep.jsonID(\"replace\", ReplaceStep)\n\n// ::- Replace a part of the document with a slice of content, but\n// preserve a range of the replaced content by moving it into the\n// slice.\nexport class ReplaceAroundStep extends Step {\n  // :: (number, number, number, number, Slice, number, ?bool)\n  // Create a replace-around step with the given range and gap.\n  // `insert` should be the point in the slice into which the content\n  // of the gap should be moved. `structure` has the same meaning as\n  // it has in the [`ReplaceStep`](#transform.ReplaceStep) class.\n  constructor(from, to, gapFrom, gapTo, slice, insert, structure) {\n    super()\n    // :: number\n    // The start position of the replaced range.\n    this.from = from\n    // :: number\n    // The end position of the replaced range.\n    this.to = to\n    // :: number\n    // The start of preserved range.\n    this.gapFrom = gapFrom\n    // :: number\n    // The end of preserved range.\n    this.gapTo = gapTo\n    // :: Slice\n    // The slice to insert.\n    this.slice = slice\n    // :: number\n    // The position in the slice where the preserved range should be\n    // inserted.\n    this.insert = insert\n    this.structure = !!structure\n  }\n\n  apply(doc) {\n    if (this.structure && (contentBetween(doc, this.from, this.gapFrom) ||\n                           contentBetween(doc, this.gapTo, this.to)))\n      return StepResult.fail(\"Structure gap-replace would overwrite content\")\n\n    let gap = doc.slice(this.gapFrom, this.gapTo)\n    if (gap.openStart || gap.openEnd)\n      return StepResult.fail(\"Gap is not a flat range\")\n    let inserted = this.slice.insertAt(this.insert, gap.content)\n    if (!inserted) return StepResult.fail(\"Content does not fit in gap\")\n    return StepResult.fromReplace(doc, this.from, this.to, inserted)\n  }\n\n  getMap() {\n    return new StepMap([this.from, this.gapFrom - this.from, this.insert,\n                        this.gapTo, this.to - this.gapTo, this.slice.size - this.insert])\n  }\n\n  invert(doc) {\n    let gap = this.gapTo - this.gapFrom\n    return new ReplaceAroundStep(this.from, this.from + this.slice.size + gap,\n                                 this.from + this.insert, this.from + this.insert + gap,\n                                 doc.slice(this.from, this.to).removeBetween(this.gapFrom - this.from, this.gapTo - this.from),\n                                 this.gapFrom - this.from, this.structure)\n  }\n\n  map(mapping) {\n    let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1)\n    let gapFrom = mapping.map(this.gapFrom, -1), gapTo = mapping.map(this.gapTo, 1)\n    if ((from.deleted && to.deleted) || gapFrom < from.pos || gapTo > to.pos) return null\n    return new ReplaceAroundStep(from.pos, to.pos, gapFrom, gapTo, this.slice, this.insert, this.structure)\n  }\n\n  toJSON() {\n    let json = {stepType: \"replaceAround\", from: this.from, to: this.to,\n                gapFrom: this.gapFrom, gapTo: this.gapTo, insert: this.insert}\n    if (this.slice.size) json.slice = this.slice.toJSON()\n    if (this.structure) json.structure = true\n    return json\n  }\n\n  static fromJSON(schema, json) {\n    if (typeof json.from != \"number\" || typeof json.to != \"number\" ||\n        typeof json.gapFrom != \"number\" || typeof json.gapTo != \"number\" || typeof json.insert != \"number\")\n      throw new RangeError(\"Invalid input for ReplaceAroundStep.fromJSON\")\n    return new ReplaceAroundStep(json.from, json.to, json.gapFrom, json.gapTo,\n                                 Slice.fromJSON(schema, json.slice), json.insert, !!json.structure)\n  }\n}\n\nStep.jsonID(\"replaceAround\", ReplaceAroundStep)\n\nfunction contentBetween(doc, from, to) {\n  let $from = doc.resolve(from), dist = to - from, depth = $from.depth\n  while (dist > 0 && depth > 0 && $from.indexAfter(depth) == $from.node(depth).childCount) {\n    depth--\n    dist--\n  }\n  if (dist > 0) {\n    let next = $from.node(depth).maybeChild($from.indexAfter(depth))\n    while (dist > 0) {\n      if (!next || next.isLeaf) return true\n      next = next.firstChild\n      dist--\n    }\n  }\n  return false\n}\n","import {Fragment, Slice} from \"prosemirror-model\"\nimport {Step, StepResult} from \"./step\"\n\nfunction mapFragment(fragment, f, parent) {\n  let mapped = []\n  for (let i = 0; i < fragment.childCount; i++) {\n    let child = fragment.child(i)\n    if (child.content.size) child = child.copy(mapFragment(child.content, f, child))\n    if (child.isInline) child = f(child, parent, i)\n    mapped.push(child)\n  }\n  return Fragment.fromArray(mapped)\n}\n\n// ::- Add a mark to all inline content between two positions.\nexport class AddMarkStep extends Step {\n  // :: (number, number, Mark)\n  constructor(from, to, mark) {\n    super()\n    // :: number\n    // The start of the marked range.\n    this.from = from\n    // :: number\n    // The end of the marked range.\n    this.to = to\n    // :: Mark\n    // The mark to add.\n    this.mark = mark\n  }\n\n  apply(doc) {\n    let oldSlice = doc.slice(this.from, this.to), $from = doc.resolve(this.from)\n    let parent = $from.node($from.sharedDepth(this.to))\n    let slice = new Slice(mapFragment(oldSlice.content, (node, parent) => {\n      if (!node.isAtom || !parent.type.allowsMarkType(this.mark.type)) return node\n      return node.mark(this.mark.addToSet(node.marks))\n    }, parent), oldSlice.openStart, oldSlice.openEnd)\n    return StepResult.fromReplace(doc, this.from, this.to, slice)\n  }\n\n  invert() {\n    return new RemoveMarkStep(this.from, this.to, this.mark)\n  }\n\n  map(mapping) {\n    let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1)\n    if (from.deleted && to.deleted || from.pos >= to.pos) return null\n    return new AddMarkStep(from.pos, to.pos, this.mark)\n  }\n\n  merge(other) {\n    if (other instanceof AddMarkStep &&\n        other.mark.eq(this.mark) &&\n        this.from <= other.to && this.to >= other.from)\n      return new AddMarkStep(Math.min(this.from, other.from),\n                             Math.max(this.to, other.to), this.mark)\n  }\n\n  toJSON() {\n    return {stepType: \"addMark\", mark: this.mark.toJSON(),\n            from: this.from, to: this.to}\n  }\n\n  static fromJSON(schema, json) {\n    if (typeof json.from != \"number\" || typeof json.to != \"number\")\n      throw new RangeError(\"Invalid input for AddMarkStep.fromJSON\")\n    return new AddMarkStep(json.from, json.to, schema.markFromJSON(json.mark))\n  }\n}\n\nStep.jsonID(\"addMark\", AddMarkStep)\n\n// ::- Remove a mark from all inline content between two positions.\nexport class RemoveMarkStep extends Step {\n  // :: (number, number, Mark)\n  constructor(from, to, mark) {\n    super()\n    // :: number\n    // The start of the unmarked range.\n    this.from = from\n    // :: number\n    // The end of the unmarked range.\n    this.to = to\n    // :: Mark\n    // The mark to remove.\n    this.mark = mark\n  }\n\n  apply(doc) {\n    let oldSlice = doc.slice(this.from, this.to)\n    let slice = new Slice(mapFragment(oldSlice.content, node => {\n      return node.mark(this.mark.removeFromSet(node.marks))\n    }), oldSlice.openStart, oldSlice.openEnd)\n    return StepResult.fromReplace(doc, this.from, this.to, slice)\n  }\n\n  invert() {\n    return new AddMarkStep(this.from, this.to, this.mark)\n  }\n\n  map(mapping) {\n    let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1)\n    if (from.deleted && to.deleted || from.pos >= to.pos) return null\n    return new RemoveMarkStep(from.pos, to.pos, this.mark)\n  }\n\n  merge(other) {\n    if (other instanceof RemoveMarkStep &&\n        other.mark.eq(this.mark) &&\n        this.from <= other.to && this.to >= other.from)\n      return new RemoveMarkStep(Math.min(this.from, other.from),\n                                Math.max(this.to, other.to), this.mark)\n  }\n\n  toJSON() {\n    return {stepType: \"removeMark\", mark: this.mark.toJSON(),\n            from: this.from, to: this.to}\n  }\n\n  static fromJSON(schema, json) {\n    if (typeof json.from != \"number\" || typeof json.to != \"number\")\n      throw new RangeError(\"Invalid input for RemoveMarkStep.fromJSON\")\n    return new RemoveMarkStep(json.from, json.to, schema.markFromJSON(json.mark))\n  }\n}\n\nStep.jsonID(\"removeMark\", RemoveMarkStep)\n","import {Slice, Fragment} from \"prosemirror-model\"\n\nimport {Transform} from \"./transform\"\nimport {ReplaceStep, ReplaceAroundStep} from \"./replace_step\"\n\nfunction canCut(node, start, end) {\n  return (start == 0 || node.canReplace(start, node.childCount)) &&\n    (end == node.childCount || node.canReplace(0, end))\n}\n\n// :: (NodeRange) → ?number\n// Try to find a target depth to which the content in the given range\n// can be lifted. Will not go across\n// [isolating](#model.NodeSpec.isolating) parent nodes.\nexport function liftTarget(range) {\n  let parent = range.parent\n  let content = parent.content.cutByIndex(range.startIndex, range.endIndex)\n  for (let depth = range.depth;; --depth) {\n    let node = range.$from.node(depth)\n    let index = range.$from.index(depth), endIndex = range.$to.indexAfter(depth)\n    if (depth < range.depth && node.canReplace(index, endIndex, content))\n      return depth\n    if (depth == 0 || node.type.spec.isolating || !canCut(node, index, endIndex)) break\n  }\n}\n\n// :: (NodeRange, number) → this\n// Split the content in the given range off from its parent, if there\n// is sibling content before or after it, and move it up the tree to\n// the depth specified by `target`. You'll probably want to use\n// [`liftTarget`](#transform.liftTarget) to compute `target`, to make\n// sure the lift is valid.\nTransform.prototype.lift = function(range, target) {\n  let {$from, $to, depth} = range\n\n  let gapStart = $from.before(depth + 1), gapEnd = $to.after(depth + 1)\n  let start = gapStart, end = gapEnd\n\n  let before = Fragment.empty, openStart = 0\n  for (let d = depth, splitting = false; d > target; d--)\n    if (splitting || $from.index(d) > 0) {\n      splitting = true\n      before = Fragment.from($from.node(d).copy(before))\n      openStart++\n    } else {\n      start--\n    }\n  let after = Fragment.empty, openEnd = 0\n  for (let d = depth, splitting = false; d > target; d--)\n    if (splitting || $to.after(d + 1) < $to.end(d)) {\n      splitting = true\n      after = Fragment.from($to.node(d).copy(after))\n      openEnd++\n    } else {\n      end++\n    }\n\n  return this.step(new ReplaceAroundStep(start, end, gapStart, gapEnd,\n                                         new Slice(before.append(after), openStart, openEnd),\n                                         before.size - openStart, true))\n}\n\n// :: (NodeRange, NodeType, ?Object, ?NodeRange) → ?[{type: NodeType, attrs: ?Object}]\n// Try to find a valid way to wrap the content in the given range in a\n// node of the given type. May introduce extra nodes around and inside\n// the wrapper node, if necessary. Returns null if no valid wrapping\n// could be found. When `innerRange` is given, that range's content is\n// used as the content to fit into the wrapping, instead of the\n// content of `range`.\nexport function findWrapping(range, nodeType, attrs, innerRange = range) {\n  let around = findWrappingOutside(range, nodeType)\n  let inner = around && findWrappingInside(innerRange, nodeType)\n  if (!inner) return null\n  return around.map(withAttrs).concat({type: nodeType, attrs}).concat(inner.map(withAttrs))\n}\n\nfunction withAttrs(type) { return {type, attrs: null} }\n\nfunction findWrappingOutside(range, type) {\n  let {parent, startIndex, endIndex} = range\n  let around = parent.contentMatchAt(startIndex).findWrapping(type)\n  if (!around) return null\n  let outer = around.length ? around[0] : type\n  return parent.canReplaceWith(startIndex, endIndex, outer) ? around : null\n}\n\nfunction findWrappingInside(range, type) {\n  let {parent, startIndex, endIndex} = range\n  let inner = parent.child(startIndex)\n  let inside = type.contentMatch.findWrapping(inner.type)\n  if (!inside) return null\n  let lastType = inside.length ? inside[inside.length - 1] : type\n  let innerMatch = lastType.contentMatch\n  for (let i = startIndex; innerMatch && i < endIndex; i++)\n    innerMatch = innerMatch.matchType(parent.child(i).type)\n  if (!innerMatch || !innerMatch.validEnd) return null\n  return inside\n}\n\n// :: (NodeRange, [{type: NodeType, attrs: ?Object}]) → this\n// Wrap the given [range](#model.NodeRange) in the given set of wrappers.\n// The wrappers are assumed to be valid in this position, and should\n// probably be computed with [`findWrapping`](#transform.findWrapping).\nTransform.prototype.wrap = function(range, wrappers) {\n  let content = Fragment.empty\n  for (let i = wrappers.length - 1; i >= 0; i--)\n    content = Fragment.from(wrappers[i].type.create(wrappers[i].attrs, content))\n\n  let start = range.start, end = range.end\n  return this.step(new ReplaceAroundStep(start, end, start, end, new Slice(content, 0, 0), wrappers.length, true))\n}\n\n// :: (number, ?number, NodeType, ?Object) → this\n// Set the type of all textblocks (partly) between `from` and `to` to\n// the given node type with the given attributes.\nTransform.prototype.setBlockType = function(from, to = from, type, attrs) {\n  if (!type.isTextblock) throw new RangeError(\"Type given to setBlockType should be a textblock\")\n  let mapFrom = this.steps.length\n  this.doc.nodesBetween(from, to, (node, pos) => {\n    if (node.isTextblock && !node.hasMarkup(type, attrs) && canChangeType(this.doc, this.mapping.slice(mapFrom).map(pos), type)) {\n      // Ensure all markup that isn't allowed in the new node type is cleared\n      this.clearIncompatible(this.mapping.slice(mapFrom).map(pos, 1), type)\n      let mapping = this.mapping.slice(mapFrom)\n      let startM = mapping.map(pos, 1), endM = mapping.map(pos + node.nodeSize, 1)\n      this.step(new ReplaceAroundStep(startM, endM, startM + 1, endM - 1,\n                                      new Slice(Fragment.from(type.create(attrs, null, node.marks)), 0, 0), 1, true))\n      return false\n    }\n  })\n  return this\n}\n\nfunction canChangeType(doc, pos, type) {\n  let $pos = doc.resolve(pos), index = $pos.index()\n  return $pos.parent.canReplaceWith(index, index + 1, type)\n}\n\n// :: (number, ?NodeType, ?Object, ?[Mark]) → this\n// Change the type, attributes, and/or marks of the node at `pos`.\n// When `type` isn't given, the existing node type is preserved,\nTransform.prototype.setNodeMarkup = function(pos, type, attrs, marks) {\n  let node = this.doc.nodeAt(pos)\n  if (!node) throw new RangeError(\"No node at given position\")\n  if (!type) type = node.type\n  let newNode = type.create(attrs, null, marks || node.marks)\n  if (node.isLeaf)\n    return this.replaceWith(pos, pos + node.nodeSize, newNode)\n\n  if (!type.validContent(node.content))\n    throw new RangeError(\"Invalid content for node type \" + type.name)\n\n  return this.step(new ReplaceAroundStep(pos, pos + node.nodeSize, pos + 1, pos + node.nodeSize - 1,\n                                         new Slice(Fragment.from(newNode), 0, 0), 1, true))\n}\n\n// :: (Node, number, number, ?[?{type: NodeType, attrs: ?Object}]) → bool\n// Check whether splitting at the given position is allowed.\nexport function canSplit(doc, pos, depth = 1, typesAfter) {\n  let $pos = doc.resolve(pos), base = $pos.depth - depth\n  let innerType = (typesAfter && typesAfter[typesAfter.length - 1]) || $pos.parent\n  if (base < 0 || $pos.parent.type.spec.isolating ||\n      !$pos.parent.canReplace($pos.index(), $pos.parent.childCount) ||\n      !innerType.type.validContent($pos.parent.content.cutByIndex($pos.index(), $pos.parent.childCount)))\n    return false\n  for (let d = $pos.depth - 1, i = depth - 2; d > base; d--, i--) {\n    let node = $pos.node(d), index = $pos.index(d)\n    if (node.type.spec.isolating) return false\n    let rest = node.content.cutByIndex(index, node.childCount)\n    let after = (typesAfter && typesAfter[i]) || node\n    if (after != node) rest = rest.replaceChild(0, after.type.create(after.attrs))\n    if (!node.canReplace(index + 1, node.childCount) || !after.type.validContent(rest))\n      return false\n  }\n  let index = $pos.indexAfter(base)\n  let baseType = typesAfter && typesAfter[0]\n  return $pos.node(base).canReplaceWith(index, index, baseType ? baseType.type : $pos.node(base + 1).type)\n}\n\n// :: (number, ?number, ?[?{type: NodeType, attrs: ?Object}]) → this\n// Split the node at the given position, and optionally, if `depth` is\n// greater than one, any number of nodes above that. By default, the\n// parts split off will inherit the node type of the original node.\n// This can be changed by passing an array of types and attributes to\n// use after the split.\nTransform.prototype.split = function(pos, depth = 1, typesAfter) {\n  let $pos = this.doc.resolve(pos), before = Fragment.empty, after = Fragment.empty\n  for (let d = $pos.depth, e = $pos.depth - depth, i = depth - 1; d > e; d--, i--) {\n    before = Fragment.from($pos.node(d).copy(before))\n    let typeAfter = typesAfter && typesAfter[i]\n    after = Fragment.from(typeAfter ? typeAfter.type.create(typeAfter.attrs, after) : $pos.node(d).copy(after))\n  }\n  return this.step(new ReplaceStep(pos, pos, new Slice(before.append(after), depth, depth), true))\n}\n\n// :: (Node, number) → bool\n// Test whether the blocks before and after a given position can be\n// joined.\nexport function canJoin(doc, pos) {\n  let $pos = doc.resolve(pos), index = $pos.index()\n  return joinable($pos.nodeBefore, $pos.nodeAfter) &&\n    $pos.parent.canReplace(index, index + 1)\n}\n\nfunction joinable(a, b) {\n  return a && b && !a.isLeaf && a.canAppend(b)\n}\n\n// :: (Node, number, ?number) → ?number\n// Find an ancestor of the given position that can be joined to the\n// block before (or after if `dir` is positive). Returns the joinable\n// point, if any.\nexport function joinPoint(doc, pos, dir = -1) {\n  let $pos = doc.resolve(pos)\n  for (let d = $pos.depth;; d--) {\n    let before, after, index = $pos.index(d)\n    if (d == $pos.depth) {\n      before = $pos.nodeBefore\n      after = $pos.nodeAfter\n    } else if (dir > 0) {\n      before = $pos.node(d + 1)\n      index++\n      after = $pos.node(d).maybeChild(index)\n    } else {\n      before = $pos.node(d).maybeChild(index - 1)\n      after = $pos.node(d + 1)\n    }\n    if (before && !before.isTextblock && joinable(before, after) &&\n        $pos.node(d).canReplace(index, index + 1)) return pos\n    if (d == 0) break\n    pos = dir < 0 ? $pos.before(d) : $pos.after(d)\n  }\n}\n\n// :: (number, ?number) → this\n// Join the blocks around the given position. If depth is 2, their\n// last and first siblings are also joined, and so on.\nTransform.prototype.join = function(pos, depth = 1) {\n  let step = new ReplaceStep(pos - depth, pos + depth, Slice.empty, true)\n  return this.step(step)\n}\n\n// :: (Node, number, NodeType) → ?number\n// Try to find a point where a node of the given type can be inserted\n// near `pos`, by searching up the node hierarchy when `pos` itself\n// isn't a valid place but is at the start or end of a node. Return\n// null if no position was found.\nexport function insertPoint(doc, pos, nodeType) {\n  let $pos = doc.resolve(pos)\n  if ($pos.parent.canReplaceWith($pos.index(), $pos.index(), nodeType)) return pos\n\n  if ($pos.parentOffset == 0)\n    for (let d = $pos.depth - 1; d >= 0; d--) {\n      let index = $pos.index(d)\n      if ($pos.node(d).canReplaceWith(index, index, nodeType)) return $pos.before(d + 1)\n      if (index > 0) return null\n    }\n  if ($pos.parentOffset == $pos.parent.content.size)\n    for (let d = $pos.depth - 1; d >= 0; d--) {\n      let index = $pos.indexAfter(d)\n      if ($pos.node(d).canReplaceWith(index, index, nodeType)) return $pos.after(d + 1)\n      if (index < $pos.node(d).childCount) return null\n    }\n}\n\n// :: (Node, number, Slice) → ?number\n// Finds a position at or around the given position where the given\n// slice can be inserted. Will look at parent nodes' nearest boundary\n// and try there, even if the original position wasn't directly at the\n// start or end of that node. Returns null when no position was found.\nexport function dropPoint(doc, pos, slice) {\n  let $pos = doc.resolve(pos)\n  if (!slice.content.size) return pos\n  let content = slice.content\n  for (let i = 0; i < slice.openStart; i++) content = content.firstChild.content\n  for (let pass = 1; pass <= (slice.openStart == 0 && slice.size ? 2 : 1); pass++) {\n    for (let d = $pos.depth; d >= 0; d--) {\n      let bias = d == $pos.depth ? 0 : $pos.pos <= ($pos.start(d + 1) + $pos.end(d + 1)) / 2 ? -1 : 1\n      let insertPos = $pos.index(d) + (bias > 0 ? 1 : 0)\n      let parent = $pos.node(d), fits = false\n      if (pass == 1) {\n        fits = parent.canReplace(insertPos, insertPos, content)\n      } else {\n        let wrapping = parent.contentMatchAt(insertPos).findWrapping(content.firstChild.type)\n        fits = wrapping && parent.canReplaceWith(insertPos, insertPos, wrapping[0])\n      }\n      if (fits)\n        return bias == 0 ? $pos.pos : bias < 0 ? $pos.before(d + 1) : $pos.after(d + 1)\n    }\n  }\n  return null\n}\n","import {Fragment, Slice} from \"prosemirror-model\"\n\nimport {ReplaceStep, ReplaceAroundStep} from \"./replace_step\"\nimport {Transform} from \"./transform\"\nimport {insertPoint} from \"./structure\"\n\n// :: (Node, number, ?number, ?Slice) → ?Step\n// ‘Fit’ a slice into a given position in the document, producing a\n// [step](#transform.Step) that inserts it. Will return null if\n// there's no meaningful way to insert the slice here, or inserting it\n// would be a no-op (an empty slice over an empty range).\nexport function replaceStep(doc, from, to = from, slice = Slice.empty) {\n  if (from == to && !slice.size) return null\n\n  let $from = doc.resolve(from), $to = doc.resolve(to)\n  // Optimization -- avoid work if it's obvious that it's not needed.\n  if (fitsTrivially($from, $to, slice)) return new ReplaceStep(from, to, slice)\n  return new Fitter($from, $to, slice).fit()\n}\n\n// :: (number, ?number, ?Slice) → this\n// Replace the part of the document between `from` and `to` with the\n// given `slice`.\nTransform.prototype.replace = function(from, to = from, slice = Slice.empty) {\n  let step = replaceStep(this.doc, from, to, slice)\n  if (step) this.step(step)\n  return this\n}\n\n// :: (number, number, union<Fragment, Node, [Node]>) → this\n// Replace the given range with the given content, which may be a\n// fragment, node, or array of nodes.\nTransform.prototype.replaceWith = function(from, to, content) {\n  return this.replace(from, to, new Slice(Fragment.from(content), 0, 0))\n}\n\n// :: (number, number) → this\n// Delete the content between the given positions.\nTransform.prototype.delete = function(from, to) {\n  return this.replace(from, to, Slice.empty)\n}\n\n// :: (number, union<Fragment, Node, [Node]>) → this\n// Insert the given content at the given position.\nTransform.prototype.insert = function(pos, content) {\n  return this.replaceWith(pos, pos, content)\n}\n\nfunction fitsTrivially($from, $to, slice) {\n  return !slice.openStart && !slice.openEnd && $from.start() == $to.start() &&\n    $from.parent.canReplace($from.index(), $to.index(), slice.content)\n}\n\n// Algorithm for 'placing' the elements of a slice into a gap:\n//\n// We consider the content of each node that is open to the left to be\n// independently placeable. I.e. in <p(\"foo\"), p(\"bar\")>, when the\n// paragraph on the left is open, \"foo\" can be placed (somewhere on\n// the left side of the replacement gap) independently from p(\"bar\").\n//\n// This class tracks the state of the placement progress in the\n// following properties:\n//\n//  - `frontier` holds a stack of `{type, match}` objects that\n//    represent the open side of the replacement. It starts at\n//    `$from`, then moves forward as content is placed, and is finally\n//    reconciled with `$to`.\n//\n//  - `unplaced` is a slice that represents the content that hasn't\n//    been placed yet.\n//\n//  - `placed` is a fragment of placed content. Its open-start value\n//    is implicit in `$from`, and its open-end value in `frontier`.\nclass Fitter {\n  constructor($from, $to, slice) {\n    this.$to = $to\n    this.$from = $from\n    this.unplaced = slice\n\n    this.frontier = []\n    for (let i = 0; i <= $from.depth; i++) {\n      let node = $from.node(i)\n      this.frontier.push({\n        type: node.type,\n        match: node.contentMatchAt($from.indexAfter(i))\n      })\n    }\n\n    this.placed = Fragment.empty\n    for (let i = $from.depth; i > 0; i--)\n      this.placed = Fragment.from($from.node(i).copy(this.placed))\n  }\n\n  get depth() { return this.frontier.length - 1 }\n\n  fit() {\n    // As long as there's unplaced content, try to place some of it.\n    // If that fails, either increase the open score of the unplaced\n    // slice, or drop nodes from it, and then try again.\n    while (this.unplaced.size) {\n      let fit = this.findFittable()\n      if (fit) this.placeNodes(fit)\n      else this.openMore() || this.dropNode()\n    }\n    // When there's inline content directly after the frontier _and_\n    // directly after `this.$to`, we must generate a `ReplaceAround`\n    // step that pulls that content into the node after the frontier.\n    // That means the fitting must be done to the end of the textblock\n    // node after `this.$to`, not `this.$to` itself.\n    let moveInline = this.mustMoveInline(), placedSize = this.placed.size - this.depth - this.$from.depth\n    let $from = this.$from, $to = this.close(moveInline < 0 ? this.$to : $from.doc.resolve(moveInline))\n    if (!$to) return null\n\n    // If closing to `$to` succeeded, create a step\n    let content = this.placed, openStart = $from.depth, openEnd = $to.depth\n    while (openStart && openEnd && content.childCount == 1) { // Normalize by dropping open parent nodes\n      content = content.firstChild.content\n      openStart--; openEnd--\n    }\n    let slice = new Slice(content, openStart, openEnd)\n    if (moveInline > -1)\n      return new ReplaceAroundStep($from.pos, moveInline, this.$to.pos, this.$to.end(), slice, placedSize)\n    if (slice.size || $from.pos != this.$to.pos) // Don't generate no-op steps\n      return new ReplaceStep($from.pos, $to.pos, slice)\n  }\n\n  // Find a position on the start spine of `this.unplaced` that has\n  // content that can be moved somewhere on the frontier. Returns two\n  // depths, one for the slice and one for the frontier.\n  findFittable() {\n    // Only try wrapping nodes (pass 2) after finding a place without\n    // wrapping failed.\n    for (let pass = 1; pass <= 2; pass++) {\n      for (let sliceDepth = this.unplaced.openStart; sliceDepth >= 0; sliceDepth--) {\n        let fragment, parent\n        if (sliceDepth) {\n          parent = contentAt(this.unplaced.content, sliceDepth - 1).firstChild\n          fragment = parent.content\n        } else {\n          fragment = this.unplaced.content\n        }\n        let first = fragment.firstChild\n        for (let frontierDepth = this.depth; frontierDepth >= 0; frontierDepth--) {\n          let {type, match} = this.frontier[frontierDepth], wrap, inject\n          // In pass 1, if the next node matches, or there is no next\n          // node but the parents look compatible, we've found a\n          // place.\n          if (pass == 1 && (first ? match.matchType(first.type) || (inject = match.fillBefore(Fragment.from(first), false))\n                            : type.compatibleContent(parent.type)))\n            return {sliceDepth, frontierDepth, parent, inject}\n          // In pass 2, look for a set of wrapping nodes that make\n          // `first` fit here.\n          else if (pass == 2 && first && (wrap = match.findWrapping(first.type)))\n            return {sliceDepth, frontierDepth, parent, wrap}\n          // Don't continue looking further up if the parent node\n          // would fit here.\n          if (parent && match.matchType(parent.type)) break\n        }\n      }\n    }\n  }\n\n  openMore() {\n    let {content, openStart, openEnd} = this.unplaced\n    let inner = contentAt(content, openStart)\n    if (!inner.childCount || inner.firstChild.isLeaf) return false\n    this.unplaced = new Slice(content, openStart + 1,\n                              Math.max(openEnd, inner.size + openStart >= content.size - openEnd ? openStart + 1 : 0))\n    return true\n  }\n\n  dropNode() {\n    let {content, openStart, openEnd} = this.unplaced\n    let inner = contentAt(content, openStart)\n    if (inner.childCount <= 1 && openStart > 0) {\n      let openAtEnd = content.size - openStart <= openStart + inner.size\n      this.unplaced = new Slice(dropFromFragment(content, openStart - 1, 1), openStart - 1,\n                                openAtEnd ? openStart - 1 : openEnd)\n    } else {\n      this.unplaced = new Slice(dropFromFragment(content, openStart, 1), openStart, openEnd)\n    }\n  }\n\n  // : ({sliceDepth: number, frontierDepth: number, parent: ?Node, wrap: ?[NodeType], inject: ?Fragment})\n  // Move content from the unplaced slice at `sliceDepth` to the\n  // frontier node at `frontierDepth`. Close that frontier node when\n  // applicable.\n  placeNodes({sliceDepth, frontierDepth, parent, inject, wrap}) {\n    while (this.depth > frontierDepth) this.closeFrontierNode()\n    if (wrap) for (let i = 0; i < wrap.length; i++) this.openFrontierNode(wrap[i])\n\n    let slice = this.unplaced, fragment = parent ? parent.content : slice.content\n    let openStart = slice.openStart - sliceDepth\n    let taken = 0, add = []\n    let {match, type} = this.frontier[frontierDepth]\n    if (inject) {\n      for (let i = 0; i < inject.childCount; i++) add.push(inject.child(i))\n      match = match.matchFragment(inject)\n    }\n    // Computes the amount of (end) open nodes at the end of the\n    // fragment. When 0, the parent is open, but no more. When\n    // negative, nothing is open.\n    let openEndCount = (fragment.size + sliceDepth) - (slice.content.size - slice.openEnd)\n    // Scan over the fragment, fitting as many child nodes as\n    // possible.\n    while (taken < fragment.childCount) {\n      let next = fragment.child(taken), matches = match.matchType(next.type)\n      if (!matches) break\n      taken++\n      if (taken > 1 || openStart == 0 || next.content.size) { // Drop empty open nodes\n        match = matches\n        add.push(closeNodeStart(next.mark(type.allowedMarks(next.marks)), taken == 1 ? openStart : 0,\n                                taken == fragment.childCount ? openEndCount : -1))\n      }\n    }\n    let toEnd = taken == fragment.childCount\n    if (!toEnd) openEndCount = -1\n\n    this.placed = addToFragment(this.placed, frontierDepth, Fragment.from(add))\n    this.frontier[frontierDepth].match = match\n\n    // If the parent types match, and the entire node was moved, and\n    // it's not open, close this frontier node right away.\n    if (toEnd && openEndCount < 0 && parent && parent.type == this.frontier[this.depth].type && this.frontier.length > 1)\n      this.closeFrontierNode()\n\n    // Add new frontier nodes for any open nodes at the end.\n    for (let i = 0, cur = fragment; i < openEndCount; i++) {\n      let node = cur.lastChild\n      this.frontier.push({type: node.type, match: node.contentMatchAt(node.childCount)})\n      cur = node.content\n    }\n\n    // Update `this.unplaced`. Drop the entire node from which we\n    // placed it we got to its end, otherwise just drop the placed\n    // nodes.\n    this.unplaced = !toEnd ? new Slice(dropFromFragment(slice.content, sliceDepth, taken), slice.openStart, slice.openEnd)\n      : sliceDepth == 0 ? Slice.empty\n      : new Slice(dropFromFragment(slice.content, sliceDepth - 1, 1),\n                  sliceDepth - 1, openEndCount < 0 ? slice.openEnd : sliceDepth - 1)\n  }\n\n  mustMoveInline() {\n    if (!this.$to.parent.isTextblock || this.$to.end() == this.$to.pos) return -1\n    let top = this.frontier[this.depth], level\n    if (!top.type.isTextblock || !contentAfterFits(this.$to, this.$to.depth, top.type, top.match, false) ||\n        (this.$to.depth == this.depth && (level = this.findCloseLevel(this.$to)) && level.depth == this.depth)) return -1\n\n    let {depth} = this.$to, after = this.$to.after(depth)\n    while (depth > 1 && after == this.$to.end(--depth)) ++after\n    return after\n  }\n\n  findCloseLevel($to) {\n    scan: for (let i = Math.min(this.depth, $to.depth); i >= 0; i--) {\n      let {match, type} = this.frontier[i]\n      let dropInner = i < $to.depth && $to.end(i + 1) == $to.pos + ($to.depth - (i + 1))\n      let fit = contentAfterFits($to, i, type, match, dropInner)\n      if (!fit) continue\n      for (let d = i - 1; d >= 0; d--) {\n        let {match, type} = this.frontier[d]\n        let matches = contentAfterFits($to, d, type, match, true)\n        if (!matches || matches.childCount) continue scan\n      }\n      return {depth: i, fit, move: dropInner ? $to.doc.resolve($to.after(i + 1)) : $to}\n    }\n  }\n\n  close($to) {\n    let close = this.findCloseLevel($to)\n    if (!close) return null\n\n    while (this.depth > close.depth) this.closeFrontierNode()\n    if (close.fit.childCount) this.placed = addToFragment(this.placed, close.depth, close.fit)\n    $to = close.move\n    for (let d = close.depth + 1; d <= $to.depth; d++) {\n      let node = $to.node(d), add = node.type.contentMatch.fillBefore(node.content, true, $to.index(d))\n      this.openFrontierNode(node.type, node.attrs, add)\n    }\n    return $to\n  }\n\n  openFrontierNode(type, attrs, content) {\n    let top = this.frontier[this.depth]\n    top.match = top.match.matchType(type)\n    this.placed = addToFragment(this.placed, this.depth, Fragment.from(type.create(attrs, content)))\n    this.frontier.push({type, match: type.contentMatch})\n  }\n\n  closeFrontierNode() {\n    let open = this.frontier.pop()\n    let add = open.match.fillBefore(Fragment.empty, true)\n    if (add.childCount) this.placed = addToFragment(this.placed, this.frontier.length, add)\n  }\n}\n\nfunction dropFromFragment(fragment, depth, count) {\n  if (depth == 0) return fragment.cutByIndex(count)\n  return fragment.replaceChild(0, fragment.firstChild.copy(dropFromFragment(fragment.firstChild.content, depth - 1, count)))\n}\n\nfunction addToFragment(fragment, depth, content) {\n  if (depth == 0) return fragment.append(content)\n  return fragment.replaceChild(fragment.childCount - 1,\n                               fragment.lastChild.copy(addToFragment(fragment.lastChild.content, depth - 1, content)))\n}\n\nfunction contentAt(fragment, depth) {\n  for (let i = 0; i < depth; i++) fragment = fragment.firstChild.content\n  return fragment\n}\n\nfunction closeNodeStart(node, openStart, openEnd) {\n  if (openStart <= 0) return node\n  let frag = node.content\n  if (openStart > 1)\n    frag = frag.replaceChild(0, closeNodeStart(frag.firstChild, openStart - 1, frag.childCount == 1 ? openEnd - 1 : 0))\n  if (openStart > 0) {\n    frag = node.type.contentMatch.fillBefore(frag).append(frag)\n    if (openEnd <= 0) frag = frag.append(node.type.contentMatch.matchFragment(frag).fillBefore(Fragment.empty, true))\n  }\n  return node.copy(frag)\n}\n\nfunction contentAfterFits($to, depth, type, match, open) {\n  let node = $to.node(depth), index = open ? $to.indexAfter(depth) : $to.index(depth)\n  if (index == node.childCount && !type.compatibleContent(node.type)) return null\n  let fit = match.fillBefore(node.content, true, index)\n  return fit && !invalidMarks(type, node.content, index) ? fit : null\n}\n\nfunction invalidMarks(type, fragment, start) {\n  for (let i = start; i < fragment.childCount; i++)\n    if (!type.allowsMarks(fragment.child(i).marks)) return true\n  return false\n}\n\n// :: (number, number, Slice) → this\n// Replace a range of the document with a given slice, using `from`,\n// `to`, and the slice's [`openStart`](#model.Slice.openStart) property\n// as hints, rather than fixed start and end points. This method may\n// grow the replaced area or close open nodes in the slice in order to\n// get a fit that is more in line with WYSIWYG expectations, by\n// dropping fully covered parent nodes of the replaced region when\n// they are marked [non-defining](#model.NodeSpec.defining), or\n// including an open parent node from the slice that _is_ marked as\n// [defining](#model.NodeSpec.defining).\n//\n// This is the method, for example, to handle paste. The similar\n// [`replace`](#transform.Transform.replace) method is a more\n// primitive tool which will _not_ move the start and end of its given\n// range, and is useful in situations where you need more precise\n// control over what happens.\nTransform.prototype.replaceRange = function(from, to, slice) {\n  if (!slice.size) return this.deleteRange(from, to)\n\n  let $from = this.doc.resolve(from), $to = this.doc.resolve(to)\n  if (fitsTrivially($from, $to, slice))\n    return this.step(new ReplaceStep(from, to, slice))\n\n  let targetDepths = coveredDepths($from, this.doc.resolve(to))\n  // Can't replace the whole document, so remove 0 if it's present\n  if (targetDepths[targetDepths.length - 1] == 0) targetDepths.pop()\n  // Negative numbers represent not expansion over the whole node at\n  // that depth, but replacing from $from.before(-D) to $to.pos.\n  let preferredTarget = -($from.depth + 1)\n  targetDepths.unshift(preferredTarget)\n  // This loop picks a preferred target depth, if one of the covering\n  // depths is not outside of a defining node, and adds negative\n  // depths for any depth that has $from at its start and does not\n  // cross a defining node.\n  for (let d = $from.depth, pos = $from.pos - 1; d > 0; d--, pos--) {\n    let spec = $from.node(d).type.spec\n    if (spec.defining || spec.isolating) break\n    if (targetDepths.indexOf(d) > -1) preferredTarget = d\n    else if ($from.before(d) == pos) targetDepths.splice(1, 0, -d)\n  }\n  // Try to fit each possible depth of the slice into each possible\n  // target depth, starting with the preferred depths.\n  let preferredTargetIndex = targetDepths.indexOf(preferredTarget)\n\n  let leftNodes = [], preferredDepth = slice.openStart\n  for (let content = slice.content, i = 0;; i++) {\n    let node = content.firstChild\n    leftNodes.push(node)\n    if (i == slice.openStart) break\n    content = node.content\n  }\n  // Back up if the node directly above openStart, or the node above\n  // that separated only by a non-defining textblock node, is defining.\n  if (preferredDepth > 0 && leftNodes[preferredDepth - 1].type.spec.defining &&\n      $from.node(preferredTargetIndex).type != leftNodes[preferredDepth - 1].type)\n    preferredDepth -= 1\n  else if (preferredDepth >= 2 && leftNodes[preferredDepth - 1].isTextblock && leftNodes[preferredDepth - 2].type.spec.defining &&\n           $from.node(preferredTargetIndex).type != leftNodes[preferredDepth - 2].type)\n    preferredDepth -= 2\n\n  for (let j = slice.openStart; j >= 0; j--) {\n    let openDepth = (j + preferredDepth + 1) % (slice.openStart + 1)\n    let insert = leftNodes[openDepth]\n    if (!insert) continue\n    for (let i = 0; i < targetDepths.length; i++) {\n      // Loop over possible expansion levels, starting with the\n      // preferred one\n      let targetDepth = targetDepths[(i + preferredTargetIndex) % targetDepths.length], expand = true\n      if (targetDepth < 0) { expand = false; targetDepth = -targetDepth }\n      let parent = $from.node(targetDepth - 1), index = $from.index(targetDepth - 1)\n      if (parent.canReplaceWith(index, index, insert.type, insert.marks))\n        return this.replace($from.before(targetDepth), expand ? $to.after(targetDepth) : to,\n                            new Slice(closeFragment(slice.content, 0, slice.openStart, openDepth),\n                                      openDepth, slice.openEnd))\n    }\n  }\n\n  let startSteps = this.steps.length\n  for (let i = targetDepths.length - 1; i >= 0; i--) {\n    this.replace(from, to, slice)\n    if (this.steps.length > startSteps) break\n    let depth = targetDepths[i]\n    if (depth < 0) continue\n    from = $from.before(depth); to = $to.after(depth)\n  }\n  return this\n}\n\nfunction closeFragment(fragment, depth, oldOpen, newOpen, parent) {\n  if (depth < oldOpen) {\n    let first = fragment.firstChild\n    fragment = fragment.replaceChild(0, first.copy(closeFragment(first.content, depth + 1, oldOpen, newOpen, first)))\n  }\n  if (depth > newOpen) {\n    let match = parent.contentMatchAt(0)\n    let start = match.fillBefore(fragment).append(fragment)\n    fragment = start.append(match.matchFragment(start).fillBefore(Fragment.empty, true))\n  }\n  return fragment\n}\n\n// :: (number, number, Node) → this\n// Replace the given range with a node, but use `from` and `to` as\n// hints, rather than precise positions. When from and to are the same\n// and are at the start or end of a parent node in which the given\n// node doesn't fit, this method may _move_ them out towards a parent\n// that does allow the given node to be placed. When the given range\n// completely covers a parent node, this method may completely replace\n// that parent node.\nTransform.prototype.replaceRangeWith = function(from, to, node) {\n  if (!node.isInline && from == to && this.doc.resolve(from).parent.content.size) {\n    let point = insertPoint(this.doc, from, node.type)\n    if (point != null) from = to = point\n  }\n  return this.replaceRange(from, to, new Slice(Fragment.from(node), 0, 0))\n}\n\n// :: (number, number) → this\n// Delete the given range, expanding it to cover fully covered\n// parent nodes until a valid replace is found.\nTransform.prototype.deleteRange = function(from, to) {\n  let $from = this.doc.resolve(from), $to = this.doc.resolve(to)\n  let covered = coveredDepths($from, $to)\n  for (let i = 0; i < covered.length; i++) {\n    let depth = covered[i], last = i == covered.length - 1\n    if ((last && depth == 0) || $from.node(depth).type.contentMatch.validEnd)\n      return this.delete($from.start(depth), $to.end(depth))\n    if (depth > 0 && (last || $from.node(depth - 1).canReplace($from.index(depth - 1), $to.indexAfter(depth - 1))))\n      return this.delete($from.before(depth), $to.after(depth))\n  }\n  for (let d = 1; d <= $from.depth && d <= $to.depth; d++) {\n    if (from - $from.start(d) == $from.depth - d && to > $from.end(d) && $to.end(d) - to != $to.depth - d)\n      return this.delete($from.before(d), to)\n  }\n  return this.delete(from, to)\n}\n\n// : (ResolvedPos, ResolvedPos) → [number]\n// Returns an array of all depths for which $from - $to spans the\n// whole content of the nodes at that depth.\nfunction coveredDepths($from, $to) {\n  let result = [], minDepth = Math.min($from.depth, $to.depth)\n  for (let d = minDepth; d >= 0; d--) {\n    let start = $from.start(d)\n    if (start < $from.pos - ($from.depth - d) ||\n        $to.end(d) > $to.pos + ($to.depth - d) ||\n        $from.node(d).type.spec.isolating ||\n        $to.node(d).type.spec.isolating) break\n    if (start == $to.start(d)) result.push(d)\n  }\n  return result\n}\n","import {MarkType, Slice, Fragment} from \"prosemirror-model\"\n\nimport {Transform} from \"./transform\"\nimport {AddMarkStep, RemoveMarkStep} from \"./mark_step\"\nimport {ReplaceStep} from \"./replace_step\"\n\n// :: (number, number, Mark) → this\n// Add the given mark to the inline content between `from` and `to`.\nTransform.prototype.addMark = function(from, to, mark) {\n  let removed = [], added = [], removing = null, adding = null\n  this.doc.nodesBetween(from, to, (node, pos, parent) => {\n    if (!node.isInline) return\n    let marks = node.marks\n    if (!mark.isInSet(marks) && parent.type.allowsMarkType(mark.type)) {\n      let start = Math.max(pos, from), end = Math.min(pos + node.nodeSize, to)\n      let newSet = mark.addToSet(marks)\n\n      for (let i = 0; i < marks.length; i++) {\n        if (!marks[i].isInSet(newSet)) {\n          if (removing && removing.to == start && removing.mark.eq(marks[i]))\n            removing.to = end\n          else\n            removed.push(removing = new RemoveMarkStep(start, end, marks[i]))\n        }\n      }\n\n      if (adding && adding.to == start)\n        adding.to = end\n      else\n        added.push(adding = new AddMarkStep(start, end, mark))\n    }\n  })\n\n  removed.forEach(s => this.step(s))\n  added.forEach(s => this.step(s))\n  return this\n}\n\n// :: (number, number, ?union<Mark, MarkType>) → this\n// Remove marks from inline nodes between `from` and `to`. When `mark`\n// is a single mark, remove precisely that mark. When it is a mark type,\n// remove all marks of that type. When it is null, remove all marks of\n// any type.\nTransform.prototype.removeMark = function(from, to, mark = null) {\n  let matched = [], step = 0\n  this.doc.nodesBetween(from, to, (node, pos) => {\n    if (!node.isInline) return\n    step++\n    let toRemove = null\n    if (mark instanceof MarkType) {\n      let set = node.marks, found\n      while (found = mark.isInSet(set)) {\n        ;(toRemove || (toRemove = [])).push(found)\n        set = found.removeFromSet(set)\n      }\n    } else if (mark) {\n      if (mark.isInSet(node.marks)) toRemove = [mark]\n    } else {\n      toRemove = node.marks\n    }\n    if (toRemove && toRemove.length) {\n      let end = Math.min(pos + node.nodeSize, to)\n      for (let i = 0; i < toRemove.length; i++) {\n        let style = toRemove[i], found\n        for (let j = 0; j < matched.length; j++) {\n          let m = matched[j]\n          if (m.step == step - 1 && style.eq(matched[j].style)) found = m\n        }\n        if (found) {\n          found.to = end\n          found.step = step\n        } else {\n          matched.push({style, from: Math.max(pos, from), to: end, step})\n        }\n      }\n    }\n  })\n  matched.forEach(m => this.step(new RemoveMarkStep(m.from, m.to, m.style)))\n  return this\n}\n\n// :: (number, NodeType, ?ContentMatch) → this\n// Removes all marks and nodes from the content of the node at `pos`\n// that don't match the given new parent node type. Accepts an\n// optional starting [content match](#model.ContentMatch) as third\n// argument.\nTransform.prototype.clearIncompatible = function(pos, parentType, match = parentType.contentMatch) {\n  let node = this.doc.nodeAt(pos)\n  let delSteps = [], cur = pos + 1\n  for (let i = 0; i < node.childCount; i++) {\n    let child = node.child(i), end = cur + child.nodeSize\n    let allowed = match.matchType(child.type, child.attrs)\n    if (!allowed) {\n      delSteps.push(new ReplaceStep(cur, end, Slice.empty))\n    } else {\n      match = allowed\n      for (let j = 0; j < child.marks.length; j++) if (!parentType.allowsMarkType(child.marks[j].type))\n        this.step(new RemoveMarkStep(cur, end, child.marks[j]))\n    }\n    cur = end\n  }\n  if (!match.validEnd) {\n    let fill = match.fillBefore(Fragment.empty, true)\n    this.replace(cur, cur, new Slice(fill, 0, 0))\n  }\n  for (let i = delSteps.length - 1; i >= 0; i--) this.step(delSteps[i])\n  return this\n}\n","import {Slice, Fragment} from \"prosemirror-model\"\nimport {ReplaceStep, ReplaceAroundStep} from \"prosemirror-transform\"\n\nconst classesById = Object.create(null)\n\n// ::- Superclass for editor selections. Every selection type should\n// extend this. Should not be instantiated directly.\nexport class Selection {\n  // :: (ResolvedPos, ResolvedPos, ?[SelectionRange])\n  // Initialize a selection with the head and anchor and ranges. If no\n  // ranges are given, constructs a single range across `$anchor` and\n  // `$head`.\n  constructor($anchor, $head, ranges) {\n    // :: [SelectionRange]\n    // The ranges covered by the selection.\n    this.ranges = ranges || [new SelectionRange($anchor.min($head), $anchor.max($head))]\n    // :: ResolvedPos\n    // The resolved anchor of the selection (the side that stays in\n    // place when the selection is modified).\n    this.$anchor = $anchor\n    // :: ResolvedPos\n    // The resolved head of the selection (the side that moves when\n    // the selection is modified).\n    this.$head = $head\n  }\n\n  // :: number\n  // The selection's anchor, as an unresolved position.\n  get anchor() { return this.$anchor.pos }\n\n  // :: number\n  // The selection's head.\n  get head() { return this.$head.pos }\n\n  // :: number\n  // The lower bound of the selection's main range.\n  get from() { return this.$from.pos }\n\n  // :: number\n  // The upper bound of the selection's main range.\n  get to() { return this.$to.pos }\n\n  // :: ResolvedPos\n  // The resolved lower  bound of the selection's main range.\n  get $from() {\n    return this.ranges[0].$from\n  }\n\n  // :: ResolvedPos\n  // The resolved upper bound of the selection's main range.\n  get $to() {\n    return this.ranges[0].$to\n  }\n\n  // :: bool\n  // Indicates whether the selection contains any content.\n  get empty() {\n    let ranges = this.ranges\n    for (let i = 0; i < ranges.length; i++)\n      if (ranges[i].$from.pos != ranges[i].$to.pos) return false\n    return true\n  }\n\n  // eq:: (Selection) → bool\n  // Test whether the selection is the same as another selection.\n\n  // map:: (doc: Node, mapping: Mappable) → Selection\n  // Map this selection through a [mappable](#transform.Mappable) thing. `doc`\n  // should be the new document to which we are mapping.\n\n  // :: () → Slice\n  // Get the content of this selection as a slice.\n  content() {\n    return this.$from.node(0).slice(this.from, this.to, true)\n  }\n\n  // :: (Transaction, ?Slice)\n  // Replace the selection with a slice or, if no slice is given,\n  // delete the selection. Will append to the given transaction.\n  replace(tr, content = Slice.empty) {\n    // Put the new selection at the position after the inserted\n    // content. When that ended in an inline node, search backwards,\n    // to get the position after that node. If not, search forward.\n    let lastNode = content.content.lastChild, lastParent = null\n    for (let i = 0; i < content.openEnd; i++) {\n      lastParent = lastNode\n      lastNode = lastNode.lastChild\n    }\n\n    let mapFrom = tr.steps.length, ranges = this.ranges\n    for (let i = 0; i < ranges.length; i++) {\n      let {$from, $to} = ranges[i], mapping = tr.mapping.slice(mapFrom)\n      tr.replaceRange(mapping.map($from.pos), mapping.map($to.pos), i ? Slice.empty : content)\n      if (i == 0)\n        selectionToInsertionEnd(tr, mapFrom, (lastNode ? lastNode.isInline : lastParent && lastParent.isTextblock) ? -1 : 1)\n    }\n  }\n\n  // :: (Transaction, Node)\n  // Replace the selection with the given node, appending the changes\n  // to the given transaction.\n  replaceWith(tr, node) {\n    let mapFrom = tr.steps.length, ranges = this.ranges\n    for (let i = 0; i < ranges.length; i++) {\n      let {$from, $to} = ranges[i], mapping = tr.mapping.slice(mapFrom)\n      let from = mapping.map($from.pos), to = mapping.map($to.pos)\n      if (i) {\n        tr.deleteRange(from, to)\n      } else {\n        tr.replaceRangeWith(from, to, node)\n        selectionToInsertionEnd(tr, mapFrom, node.isInline ? -1 : 1)\n      }\n    }\n  }\n\n  // toJSON:: () → Object\n  // Convert the selection to a JSON representation. When implementing\n  // this for a custom selection class, make sure to give the object a\n  // `type` property whose value matches the ID under which you\n  // [registered](#state.Selection^jsonID) your class.\n\n  // :: (ResolvedPos, number, ?bool) → ?Selection\n  // Find a valid cursor or leaf node selection starting at the given\n  // position and searching back if `dir` is negative, and forward if\n  // positive. When `textOnly` is true, only consider cursor\n  // selections. Will return null when no valid selection position is\n  // found.\n  static findFrom($pos, dir, textOnly) {\n    let inner = $pos.parent.inlineContent ? new TextSelection($pos)\n        : findSelectionIn($pos.node(0), $pos.parent, $pos.pos, $pos.index(), dir, textOnly)\n    if (inner) return inner\n\n    for (let depth = $pos.depth - 1; depth >= 0; depth--) {\n      let found = dir < 0\n          ? findSelectionIn($pos.node(0), $pos.node(depth), $pos.before(depth + 1), $pos.index(depth), dir, textOnly)\n          : findSelectionIn($pos.node(0), $pos.node(depth), $pos.after(depth + 1), $pos.index(depth) + 1, dir, textOnly)\n      if (found) return found\n    }\n  }\n\n  // :: (ResolvedPos, ?number) → Selection\n  // Find a valid cursor or leaf node selection near the given\n  // position. Searches forward first by default, but if `bias` is\n  // negative, it will search backwards first.\n  static near($pos, bias = 1) {\n    return this.findFrom($pos, bias) || this.findFrom($pos, -bias) || new AllSelection($pos.node(0))\n  }\n\n  // :: (Node) → Selection\n  // Find the cursor or leaf node selection closest to the start of\n  // the given document. Will return an\n  // [`AllSelection`](#state.AllSelection) if no valid position\n  // exists.\n  static atStart(doc) {\n    return findSelectionIn(doc, doc, 0, 0, 1) || new AllSelection(doc)\n  }\n\n  // :: (Node) → Selection\n  // Find the cursor or leaf node selection closest to the end of the\n  // given document.\n  static atEnd(doc) {\n    return findSelectionIn(doc, doc, doc.content.size, doc.childCount, -1) || new AllSelection(doc)\n  }\n\n  // :: (Node, Object) → Selection\n  // Deserialize the JSON representation of a selection. Must be\n  // implemented for custom classes (as a static class method).\n  static fromJSON(doc, json) {\n    if (!json || !json.type) throw new RangeError(\"Invalid input for Selection.fromJSON\")\n    let cls = classesById[json.type]\n    if (!cls) throw new RangeError(`No selection type ${json.type} defined`)\n    return cls.fromJSON(doc, json)\n  }\n\n  // :: (string, constructor<Selection>)\n  // To be able to deserialize selections from JSON, custom selection\n  // classes must register themselves with an ID string, so that they\n  // can be disambiguated. Try to pick something that's unlikely to\n  // clash with classes from other modules.\n  static jsonID(id, selectionClass) {\n    if (id in classesById) throw new RangeError(\"Duplicate use of selection JSON ID \" + id)\n    classesById[id] = selectionClass\n    selectionClass.prototype.jsonID = id\n    return selectionClass\n  }\n\n  // :: () → SelectionBookmark\n  // Get a [bookmark](#state.SelectionBookmark) for this selection,\n  // which is a value that can be mapped without having access to a\n  // current document, and later resolved to a real selection for a\n  // given document again. (This is used mostly by the history to\n  // track and restore old selections.) The default implementation of\n  // this method just converts the selection to a text selection and\n  // returns the bookmark for that.\n  getBookmark() {\n    return TextSelection.between(this.$anchor, this.$head).getBookmark()\n  }\n}\n\n// :: bool\n// Controls whether, when a selection of this type is active in the\n// browser, the selected range should be visible to the user. Defaults\n// to `true`.\nSelection.prototype.visible = true\n\n// SelectionBookmark:: interface\n// A lightweight, document-independent representation of a selection.\n// You can define a custom bookmark type for a custom selection class\n// to make the history handle it well.\n//\n//   map:: (mapping: Mapping) → SelectionBookmark\n//   Map the bookmark through a set of changes.\n//\n//   resolve:: (doc: Node) → Selection\n//   Resolve the bookmark to a real selection again. This may need to\n//   do some error checking and may fall back to a default (usually\n//   [`TextSelection.between`](#state.TextSelection^between)) if\n//   mapping made the bookmark invalid.\n\n// ::- Represents a selected range in a document.\nexport class SelectionRange {\n  // :: (ResolvedPos, ResolvedPos)\n  constructor($from, $to) {\n    // :: ResolvedPos\n    // The lower bound of the range.\n    this.$from = $from\n    // :: ResolvedPos\n    // The upper bound of the range.\n    this.$to = $to\n  }\n}\n\n// ::- A text selection represents a classical editor selection, with\n// a head (the moving side) and anchor (immobile side), both of which\n// point into textblock nodes. It can be empty (a regular cursor\n// position).\nexport class TextSelection extends Selection {\n  // :: (ResolvedPos, ?ResolvedPos)\n  // Construct a text selection between the given points.\n  constructor($anchor, $head = $anchor) {\n    super($anchor, $head)\n  }\n\n  // :: ?ResolvedPos\n  // Returns a resolved position if this is a cursor selection (an\n  // empty text selection), and null otherwise.\n  get $cursor() { return this.$anchor.pos == this.$head.pos ? this.$head : null }\n\n  map(doc, mapping) {\n    let $head = doc.resolve(mapping.map(this.head))\n    if (!$head.parent.inlineContent) return Selection.near($head)\n    let $anchor = doc.resolve(mapping.map(this.anchor))\n    return new TextSelection($anchor.parent.inlineContent ? $anchor : $head, $head)\n  }\n\n  replace(tr, content = Slice.empty) {\n    super.replace(tr, content)\n    if (content == Slice.empty) {\n      let marks = this.$from.marksAcross(this.$to)\n      if (marks) tr.ensureMarks(marks)\n    }\n  }\n\n  eq(other) {\n    return other instanceof TextSelection && other.anchor == this.anchor && other.head == this.head\n  }\n\n  getBookmark() {\n    return new TextBookmark(this.anchor, this.head)\n  }\n\n  toJSON() {\n    return {type: \"text\", anchor: this.anchor, head: this.head}\n  }\n\n  static fromJSON(doc, json) {\n    if (typeof json.anchor != \"number\" || typeof json.head != \"number\")\n      throw new RangeError(\"Invalid input for TextSelection.fromJSON\")\n    return new TextSelection(doc.resolve(json.anchor), doc.resolve(json.head))\n  }\n\n  // :: (Node, number, ?number) → TextSelection\n  // Create a text selection from non-resolved positions.\n  static create(doc, anchor, head = anchor) {\n    let $anchor = doc.resolve(anchor)\n    return new this($anchor, head == anchor ? $anchor : doc.resolve(head))\n  }\n\n  // :: (ResolvedPos, ResolvedPos, ?number) → Selection\n  // Return a text selection that spans the given positions or, if\n  // they aren't text positions, find a text selection near them.\n  // `bias` determines whether the method searches forward (default)\n  // or backwards (negative number) first. Will fall back to calling\n  // [`Selection.near`](#state.Selection^near) when the document\n  // doesn't contain a valid text position.\n  static between($anchor, $head, bias) {\n    let dPos = $anchor.pos - $head.pos\n    if (!bias || dPos) bias = dPos >= 0 ? 1 : -1\n    if (!$head.parent.inlineContent) {\n      let found = Selection.findFrom($head, bias, true) || Selection.findFrom($head, -bias, true)\n      if (found) $head = found.$head\n      else return Selection.near($head, bias)\n    }\n    if (!$anchor.parent.inlineContent) {\n      if (dPos == 0) {\n        $anchor = $head\n      } else {\n        $anchor = (Selection.findFrom($anchor, -bias, true) || Selection.findFrom($anchor, bias, true)).$anchor\n        if (($anchor.pos < $head.pos) != (dPos < 0)) $anchor = $head\n      }\n    }\n    return new TextSelection($anchor, $head)\n  }\n}\n\nSelection.jsonID(\"text\", TextSelection)\n\nclass TextBookmark {\n  constructor(anchor, head) {\n    this.anchor = anchor\n    this.head = head\n  }\n  map(mapping) {\n    return new TextBookmark(mapping.map(this.anchor), mapping.map(this.head))\n  }\n  resolve(doc) {\n    return TextSelection.between(doc.resolve(this.anchor), doc.resolve(this.head))\n  }\n}\n\n// ::- A node selection is a selection that points at a single node.\n// All nodes marked [selectable](#model.NodeSpec.selectable) can be\n// the target of a node selection. In such a selection, `from` and\n// `to` point directly before and after the selected node, `anchor`\n// equals `from`, and `head` equals `to`..\nexport class NodeSelection extends Selection {\n  // :: (ResolvedPos)\n  // Create a node selection. Does not verify the validity of its\n  // argument.\n  constructor($pos) {\n    let node = $pos.nodeAfter\n    let $end = $pos.node(0).resolve($pos.pos + node.nodeSize)\n    super($pos, $end)\n    // :: Node The selected node.\n    this.node = node\n  }\n\n  map(doc, mapping) {\n    let {deleted, pos} = mapping.mapResult(this.anchor)\n    let $pos = doc.resolve(pos)\n    if (deleted) return Selection.near($pos)\n    return new NodeSelection($pos)\n  }\n\n  content() {\n    return new Slice(Fragment.from(this.node), 0, 0)\n  }\n\n  eq(other) {\n    return other instanceof NodeSelection && other.anchor == this.anchor\n  }\n\n  toJSON() {\n    return {type: \"node\", anchor: this.anchor}\n  }\n\n  getBookmark() { return new NodeBookmark(this.anchor) }\n\n  static fromJSON(doc, json) {\n    if (typeof json.anchor != \"number\")\n      throw new RangeError(\"Invalid input for NodeSelection.fromJSON\")\n    return new NodeSelection(doc.resolve(json.anchor))\n  }\n\n  // :: (Node, number) → NodeSelection\n  // Create a node selection from non-resolved positions.\n  static create(doc, from) {\n    return new this(doc.resolve(from))\n  }\n\n  // :: (Node) → bool\n  // Determines whether the given node may be selected as a node\n  // selection.\n  static isSelectable(node) {\n    return !node.isText && node.type.spec.selectable !== false\n  }\n}\n\nNodeSelection.prototype.visible = false\n\nSelection.jsonID(\"node\", NodeSelection)\n\nclass NodeBookmark {\n  constructor(anchor) {\n    this.anchor = anchor\n  }\n  map(mapping) {\n    let {deleted, pos} = mapping.mapResult(this.anchor)\n    return deleted ? new TextBookmark(pos, pos) : new NodeBookmark(pos)\n  }\n  resolve(doc) {\n    let $pos = doc.resolve(this.anchor), node = $pos.nodeAfter\n    if (node && NodeSelection.isSelectable(node)) return new NodeSelection($pos)\n    return Selection.near($pos)\n  }\n}\n\n// ::- A selection type that represents selecting the whole document\n// (which can not necessarily be expressed with a text selection, when\n// there are for example leaf block nodes at the start or end of the\n// document).\nexport class AllSelection extends Selection {\n  // :: (Node)\n  // Create an all-selection over the given document.\n  constructor(doc) {\n    super(doc.resolve(0), doc.resolve(doc.content.size))\n  }\n\n  replace(tr, content = Slice.empty) {\n    if (content == Slice.empty) {\n      tr.delete(0, tr.doc.content.size)\n      let sel = Selection.atStart(tr.doc)\n      if (!sel.eq(tr.selection)) tr.setSelection(sel)\n    } else {\n      super.replace(tr, content)\n    }\n  }\n\n  toJSON() { return {type: \"all\"} }\n\n  static fromJSON(doc) { return new AllSelection(doc) }\n\n  map(doc) { return new AllSelection(doc) }\n\n  eq(other) { return other instanceof AllSelection }\n\n  getBookmark() { return AllBookmark }\n}\n\nSelection.jsonID(\"all\", AllSelection)\n\nconst AllBookmark = {\n  map() { return this },\n  resolve(doc) { return new AllSelection(doc) }\n}\n\n// FIXME we'll need some awareness of text direction when scanning for selections\n\n// Try to find a selection inside the given node. `pos` points at the\n// position where the search starts. When `text` is true, only return\n// text selections.\nfunction findSelectionIn(doc, node, pos, index, dir, text) {\n  if (node.inlineContent) return TextSelection.create(doc, pos)\n  for (let i = index - (dir > 0 ? 0 : 1); dir > 0 ? i < node.childCount : i >= 0; i += dir) {\n    let child = node.child(i)\n    if (!child.isAtom) {\n      let inner = findSelectionIn(doc, child, pos + dir, dir < 0 ? child.childCount : 0, dir, text)\n      if (inner) return inner\n    } else if (!text && NodeSelection.isSelectable(child)) {\n      return NodeSelection.create(doc, pos - (dir < 0 ? child.nodeSize : 0))\n    }\n    pos += child.nodeSize * dir\n  }\n}\n\nfunction selectionToInsertionEnd(tr, startLen, bias) {\n  let last = tr.steps.length - 1\n  if (last < startLen) return\n  let step = tr.steps[last]\n  if (!(step instanceof ReplaceStep || step instanceof ReplaceAroundStep)) return\n  let map = tr.mapping.maps[last], end\n  map.forEach((_from, _to, _newFrom, newTo) => { if (end == null) end = newTo })\n  tr.setSelection(Selection.near(tr.doc.resolve(end), bias))\n}\n","import {Transform} from \"prosemirror-transform\"\nimport {Mark} from \"prosemirror-model\"\nimport {Selection} from \"./selection\"\n\nconst UPDATED_SEL = 1, UPDATED_MARKS = 2, UPDATED_SCROLL = 4\n\n// ::- An editor state transaction, which can be applied to a state to\n// create an updated state. Use\n// [`EditorState.tr`](#state.EditorState.tr) to create an instance.\n//\n// Transactions track changes to the document (they are a subclass of\n// [`Transform`](#transform.Transform)), but also other state changes,\n// like selection updates and adjustments of the set of [stored\n// marks](#state.EditorState.storedMarks). In addition, you can store\n// metadata properties in a transaction, which are extra pieces of\n// information that client code or plugins can use to describe what a\n// transacion represents, so that they can update their [own\n// state](#state.StateField) accordingly.\n//\n// The [editor view](#view.EditorView) uses a few metadata properties:\n// it will attach a property `\"pointer\"` with the value `true` to\n// selection transactions directly caused by mouse or touch input, and\n// a `\"uiEvent\"` property of that may be `\"paste\"`, `\"cut\"`, or `\"drop\"`.\nexport class Transaction extends Transform {\n  constructor(state) {\n    super(state.doc)\n    // :: number\n    // The timestamp associated with this transaction, in the same\n    // format as `Date.now()`.\n    this.time = Date.now()\n    this.curSelection = state.selection\n    // The step count for which the current selection is valid.\n    this.curSelectionFor = 0\n    // :: ?[Mark]\n    // The stored marks set by this transaction, if any.\n    this.storedMarks = state.storedMarks\n    // Bitfield to track which aspects of the state were updated by\n    // this transaction.\n    this.updated = 0\n    // Object used to store metadata properties for the transaction.\n    this.meta = Object.create(null)\n  }\n\n  // :: Selection\n  // The transaction's current selection. This defaults to the editor\n  // selection [mapped](#state.Selection.map) through the steps in the\n  // transaction, but can be overwritten with\n  // [`setSelection`](#state.Transaction.setSelection).\n  get selection() {\n    if (this.curSelectionFor < this.steps.length) {\n      this.curSelection = this.curSelection.map(this.doc, this.mapping.slice(this.curSelectionFor))\n      this.curSelectionFor = this.steps.length\n    }\n    return this.curSelection\n  }\n\n  // :: (Selection) → Transaction\n  // Update the transaction's current selection. Will determine the\n  // selection that the editor gets when the transaction is applied.\n  setSelection(selection) {\n    if (selection.$from.doc != this.doc)\n      throw new RangeError(\"Selection passed to setSelection must point at the current document\")\n    this.curSelection = selection\n    this.curSelectionFor = this.steps.length\n    this.updated = (this.updated | UPDATED_SEL) & ~UPDATED_MARKS\n    this.storedMarks = null\n    return this\n  }\n\n  // :: bool\n  // Whether the selection was explicitly updated by this transaction.\n  get selectionSet() {\n    return (this.updated & UPDATED_SEL) > 0\n  }\n\n  // :: (?[Mark]) → Transaction\n  // Set the current stored marks.\n  setStoredMarks(marks) {\n    this.storedMarks = marks\n    this.updated |= UPDATED_MARKS\n    return this\n  }\n\n  // :: ([Mark]) → Transaction\n  // Make sure the current stored marks or, if that is null, the marks\n  // at the selection, match the given set of marks. Does nothing if\n  // this is already the case.\n  ensureMarks(marks) {\n    if (!Mark.sameSet(this.storedMarks || this.selection.$from.marks(), marks))\n      this.setStoredMarks(marks)\n    return this\n  }\n\n  // :: (Mark) → Transaction\n  // Add a mark to the set of stored marks.\n  addStoredMark(mark) {\n    return this.ensureMarks(mark.addToSet(this.storedMarks || this.selection.$head.marks()))\n  }\n\n  // :: (union<Mark, MarkType>) → Transaction\n  // Remove a mark or mark type from the set of stored marks.\n  removeStoredMark(mark) {\n    return this.ensureMarks(mark.removeFromSet(this.storedMarks || this.selection.$head.marks()))\n  }\n\n  // :: bool\n  // Whether the stored marks were explicitly set for this transaction.\n  get storedMarksSet() {\n    return (this.updated & UPDATED_MARKS) > 0\n  }\n\n  addStep(step, doc) {\n    super.addStep(step, doc)\n    this.updated = this.updated & ~UPDATED_MARKS\n    this.storedMarks = null\n  }\n\n  // :: (number) → Transaction\n  // Update the timestamp for the transaction.\n  setTime(time) {\n    this.time = time\n    return this\n  }\n\n  // :: (Slice) → Transaction\n  // Replace the current selection with the given slice.\n  replaceSelection(slice) {\n    this.selection.replace(this, slice)\n    return this\n  }\n\n  // :: (Node, ?bool) → Transaction\n  // Replace the selection with the given node. When `inheritMarks` is\n  // true and the content is inline, it inherits the marks from the\n  // place where it is inserted.\n  replaceSelectionWith(node, inheritMarks) {\n    let selection = this.selection\n    if (inheritMarks !== false)\n      node = node.mark(this.storedMarks || (selection.empty ? selection.$from.marks() : (selection.$from.marksAcross(selection.$to) || Mark.none)))\n    selection.replaceWith(this, node)\n    return this\n  }\n\n  // :: () → Transaction\n  // Delete the selection.\n  deleteSelection() {\n    this.selection.replace(this)\n    return this\n  }\n\n  // :: (string, from: ?number, to: ?number) → Transaction\n  // Replace the given range, or the selection if no range is given,\n  // with a text node containing the given string.\n  insertText(text, from, to = from) {\n    let schema = this.doc.type.schema\n    if (from == null) {\n      if (!text) return this.deleteSelection()\n      return this.replaceSelectionWith(schema.text(text), true)\n    } else {\n      if (!text) return this.deleteRange(from, to)\n      let marks = this.storedMarks\n      if (!marks) {\n        let $from = this.doc.resolve(from)\n        marks = to == from ? $from.marks() : $from.marksAcross(this.doc.resolve(to))\n      }\n      this.replaceRangeWith(from, to, schema.text(text, marks))\n      if (!this.selection.empty) this.setSelection(Selection.near(this.selection.$to))\n      return this\n    }\n  }\n\n  // :: (union<string, Plugin, PluginKey>, any) → Transaction\n  // Store a metadata property in this transaction, keyed either by\n  // name or by plugin.\n  setMeta(key, value) {\n    this.meta[typeof key == \"string\" ? key : key.key] = value\n    return this\n  }\n\n  // :: (union<string, Plugin, PluginKey>) → any\n  // Retrieve a metadata property for a given name or plugin.\n  getMeta(key) {\n    return this.meta[typeof key == \"string\" ? key : key.key]\n  }\n\n  // :: bool\n  // Returns true if this transaction doesn't contain any metadata,\n  // and can thus safely be extended.\n  get isGeneric() {\n    for (let _ in this.meta) return false\n    return true\n  }\n\n  // :: () → Transaction\n  // Indicate that the editor should scroll the selection into view\n  // when updated to the state produced by this transaction.\n  scrollIntoView() {\n    this.updated |= UPDATED_SCROLL\n    return this\n  }\n\n  get scrolledIntoView() {\n    return (this.updated & UPDATED_SCROLL) > 0\n  }\n}\n","import {Node} from \"prosemirror-model\"\n\nimport {Selection} from \"./selection\"\nimport {Transaction} from \"./transaction\"\n\nfunction bind(f, self) {\n  return !self || !f ? f : f.bind(self)\n}\n\nclass FieldDesc {\n  constructor(name, desc, self) {\n    this.name = name\n    this.init = bind(desc.init, self)\n    this.apply = bind(desc.apply, self)\n  }\n}\n\nconst baseFields = [\n  new FieldDesc(\"doc\", {\n    init(config) { return config.doc || config.schema.topNodeType.createAndFill() },\n    apply(tr) { return tr.doc }\n  }),\n\n  new FieldDesc(\"selection\", {\n    init(config, instance) { return config.selection || Selection.atStart(instance.doc) },\n    apply(tr) { return tr.selection }\n  }),\n\n  new FieldDesc(\"storedMarks\", {\n    init(config) { return config.storedMarks || null },\n    apply(tr, _marks, _old, state) { return state.selection.$cursor ? tr.storedMarks : null }\n  }),\n\n  new FieldDesc(\"scrollToSelection\", {\n    init() { return 0 },\n    apply(tr, prev) { return tr.scrolledIntoView ? prev + 1 : prev }\n  })\n]\n\n// Object wrapping the part of a state object that stays the same\n// across transactions. Stored in the state's `config` property.\nclass Configuration {\n  constructor(schema, plugins) {\n    this.schema = schema\n    this.fields = baseFields.concat()\n    this.plugins = []\n    this.pluginsByKey = Object.create(null)\n    if (plugins) plugins.forEach(plugin => {\n      if (this.pluginsByKey[plugin.key])\n        throw new RangeError(\"Adding different instances of a keyed plugin (\" + plugin.key + \")\")\n      this.plugins.push(plugin)\n      this.pluginsByKey[plugin.key] = plugin\n      if (plugin.spec.state)\n        this.fields.push(new FieldDesc(plugin.key, plugin.spec.state, plugin))\n    })\n  }\n}\n\n// ::- The state of a ProseMirror editor is represented by an object\n// of this type. A state is a persistent data structure—it isn't\n// updated, but rather a new state value is computed from an old one\n// using the [`apply`](#state.EditorState.apply) method.\n//\n// A state holds a number of built-in fields, and plugins can\n// [define](#state.PluginSpec.state) additional fields.\nexport class EditorState {\n  constructor(config) {\n    this.config = config\n  }\n\n  // doc:: Node\n  // The current document.\n\n  // selection:: Selection\n  // The selection.\n\n  // storedMarks:: ?[Mark]\n  // A set of marks to apply to the next input. Will be null when\n  // no explicit marks have been set.\n\n  // :: Schema\n  // The schema of the state's document.\n  get schema() {\n    return this.config.schema\n  }\n\n  // :: [Plugin]\n  // The plugins that are active in this state.\n  get plugins() {\n    return this.config.plugins\n  }\n\n  // :: (Transaction) → EditorState\n  // Apply the given transaction to produce a new state.\n  apply(tr) {\n    return this.applyTransaction(tr).state\n  }\n\n  // : (Transaction) → bool\n  filterTransaction(tr, ignore = -1) {\n    for (let i = 0; i < this.config.plugins.length; i++) if (i != ignore) {\n      let plugin = this.config.plugins[i]\n      if (plugin.spec.filterTransaction && !plugin.spec.filterTransaction.call(plugin, tr, this))\n        return false\n    }\n    return true\n  }\n\n  // :: (Transaction) → {state: EditorState, transactions: [Transaction]}\n  // Verbose variant of [`apply`](#state.EditorState.apply) that\n  // returns the precise transactions that were applied (which might\n  // be influenced by the [transaction\n  // hooks](#state.PluginSpec.filterTransaction) of\n  // plugins) along with the new state.\n  applyTransaction(rootTr) {\n    if (!this.filterTransaction(rootTr)) return {state: this, transactions: []}\n\n    let trs = [rootTr], newState = this.applyInner(rootTr), seen = null\n    // This loop repeatedly gives plugins a chance to respond to\n    // transactions as new transactions are added, making sure to only\n    // pass the transactions the plugin did not see before.\n    outer: for (;;) {\n      let haveNew = false\n      for (let i = 0; i < this.config.plugins.length; i++) {\n        let plugin = this.config.plugins[i]\n        if (plugin.spec.appendTransaction) {\n          let n = seen ? seen[i].n : 0, oldState = seen ? seen[i].state : this\n          let tr = n < trs.length &&\n              plugin.spec.appendTransaction.call(plugin, n ? trs.slice(n) : trs, oldState, newState)\n          if (tr && newState.filterTransaction(tr, i)) {\n            tr.setMeta(\"appendedTransaction\", rootTr)\n            if (!seen) {\n              seen = []\n              for (let j = 0; j < this.config.plugins.length; j++)\n                seen.push(j < i ? {state: newState, n: trs.length} : {state: this, n: 0})\n            }\n            trs.push(tr)\n            newState = newState.applyInner(tr)\n            haveNew = true\n          }\n          if (seen) seen[i] = {state: newState, n: trs.length}\n        }\n      }\n      if (!haveNew) return {state: newState, transactions: trs}\n    }\n  }\n\n  // : (Transaction) → EditorState\n  applyInner(tr) {\n    if (!tr.before.eq(this.doc)) throw new RangeError(\"Applying a mismatched transaction\")\n    let newInstance = new EditorState(this.config), fields = this.config.fields\n    for (let i = 0; i < fields.length; i++) {\n      let field = fields[i]\n      newInstance[field.name] = field.apply(tr, this[field.name], this, newInstance)\n    }\n    for (let i = 0; i < applyListeners.length; i++) applyListeners[i](this, tr, newInstance)\n    return newInstance\n  }\n\n  // :: Transaction\n  // Start a [transaction](#state.Transaction) from this state.\n  get tr() { return new Transaction(this) }\n\n  // :: (Object) → EditorState\n  // Create a new state.\n  //\n  //   config::- Configuration options. Must contain `schema` or `doc` (or both).\n  //\n  //      schema:: ?Schema\n  //      The schema to use (only relevant if no `doc` is specified).\n  //\n  //      doc:: ?Node\n  //      The starting document.\n  //\n  //      selection:: ?Selection\n  //      A valid selection in the document.\n  //\n  //      storedMarks:: ?[Mark]\n  //      The initial set of [stored marks](#state.EditorState.storedMarks).\n  //\n  //      plugins:: ?[Plugin]\n  //      The plugins that should be active in this state.\n  static create(config) {\n    let $config = new Configuration(config.doc ? config.doc.type.schema : config.schema, config.plugins)\n    let instance = new EditorState($config)\n    for (let i = 0; i < $config.fields.length; i++)\n      instance[$config.fields[i].name] = $config.fields[i].init(config, instance)\n    return instance\n  }\n\n  // :: (Object) → EditorState\n  // Create a new state based on this one, but with an adjusted set of\n  // active plugins. State fields that exist in both sets of plugins\n  // are kept unchanged. Those that no longer exist are dropped, and\n  // those that are new are initialized using their\n  // [`init`](#state.StateField.init) method, passing in the new\n  // configuration object..\n  //\n  //   config::- configuration options\n  //\n  //     plugins:: [Plugin]\n  //     New set of active plugins.\n  reconfigure(config) {\n    let $config = new Configuration(this.schema, config.plugins)\n    let fields = $config.fields, instance = new EditorState($config)\n    for (let i = 0; i < fields.length; i++) {\n      let name = fields[i].name\n      instance[name] = this.hasOwnProperty(name) ? this[name] : fields[i].init(config, instance)\n    }\n    return instance\n  }\n\n  // :: (?union<Object<Plugin>, string, number>) → Object\n  // Serialize this state to JSON. If you want to serialize the state\n  // of plugins, pass an object mapping property names to use in the\n  // resulting JSON object to plugin objects. The argument may also be\n  // a string or number, in which case it is ignored, to support the\n  // way `JSON.stringify` calls `toString` methods.\n  toJSON(pluginFields) {\n    let result = {doc: this.doc.toJSON(), selection: this.selection.toJSON()}\n    if (this.storedMarks) result.storedMarks = this.storedMarks.map(m => m.toJSON())\n    if (pluginFields && typeof pluginFields == 'object') for (let prop in pluginFields) {\n      if (prop == \"doc\" || prop == \"selection\")\n        throw new RangeError(\"The JSON fields `doc` and `selection` are reserved\")\n      let plugin = pluginFields[prop], state = plugin.spec.state\n      if (state && state.toJSON) result[prop] = state.toJSON.call(plugin, this[plugin.key])\n    }\n    return result\n  }\n\n  // :: (Object, Object, ?Object<Plugin>) → EditorState\n  // Deserialize a JSON representation of a state. `config` should\n  // have at least a `schema` field, and should contain array of\n  // plugins to initialize the state with. `pluginFields` can be used\n  // to deserialize the state of plugins, by associating plugin\n  // instances with the property names they use in the JSON object.\n  //\n  //   config::- configuration options\n  //\n  //     schema:: Schema\n  //     The schema to use.\n  //\n  //     plugins:: ?[Plugin]\n  //     The set of active plugins.\n  static fromJSON(config, json, pluginFields) {\n    if (!json) throw new RangeError(\"Invalid input for EditorState.fromJSON\")\n    if (!config.schema) throw new RangeError(\"Required config field 'schema' missing\")\n    let $config = new Configuration(config.schema, config.plugins)\n    let instance = new EditorState($config)\n    $config.fields.forEach(field => {\n      if (field.name == \"doc\") {\n        instance.doc = Node.fromJSON(config.schema, json.doc)\n      } else if (field.name == \"selection\") {\n        instance.selection = Selection.fromJSON(instance.doc, json.selection)\n      } else if (field.name == \"storedMarks\") {\n        if (json.storedMarks) instance.storedMarks = json.storedMarks.map(config.schema.markFromJSON)\n      } else {\n        if (pluginFields) for (let prop in pluginFields) {\n          let plugin = pluginFields[prop], state = plugin.spec.state\n          if (plugin.key == field.name && state && state.fromJSON &&\n              Object.prototype.hasOwnProperty.call(json, prop)) {\n            // This field belongs to a plugin mapped to a JSON field, read it from there.\n            instance[field.name] = state.fromJSON.call(plugin, config, json[prop], instance)\n            return\n          }\n        }\n        instance[field.name] = field.init(config, instance)\n      }\n    })\n    return instance\n  }\n\n  // Kludge to allow the view to track mappings between different\n  // instances of a state.\n  //\n  // FIXME this is no longer needed as of prosemirror-view 1.9.0,\n  // though due to backwards-compat we should probably keep it around\n  // for a while (if only as a no-op)\n  static addApplyListener(f) {\n    applyListeners.push(f)\n  }\n  static removeApplyListener(f) {\n    let found = applyListeners.indexOf(f)\n    if (found > -1) applyListeners.splice(found, 1)\n  }\n}\n\nconst applyListeners = []\n","// PluginSpec:: interface\n//\n// This is the type passed to the [`Plugin`](#state.Plugin)\n// constructor. It provides a definition for a plugin.\n//\n//   props:: ?EditorProps\n//   The [view props](#view.EditorProps) added by this plugin. Props\n//   that are functions will be bound to have the plugin instance as\n//   their `this` binding.\n//\n//   state:: ?StateField<any>\n//   Allows a plugin to define a [state field](#state.StateField), an\n//   extra slot in the state object in which it can keep its own data.\n//\n//   key:: ?PluginKey\n//   Can be used to make this a keyed plugin. You can have only one\n//   plugin with a given key in a given state, but it is possible to\n//   access the plugin's configuration and state through the key,\n//   without having access to the plugin instance object.\n//\n//   view:: ?(EditorView) → Object\n//   When the plugin needs to interact with the editor view, or\n//   set something up in the DOM, use this field. The function\n//   will be called when the plugin's state is associated with an\n//   editor view.\n//\n//     return::-\n//     Should return an object with the following optional\n//     properties:\n//\n//       update:: ?(view: EditorView, prevState: EditorState)\n//       Called whenever the view's state is updated.\n//\n//       destroy:: ?()\n//       Called when the view is destroyed or receives a state\n//       with different plugins.\n//\n//   filterTransaction:: ?(Transaction, EditorState) → bool\n//   When present, this will be called before a transaction is\n//   applied by the state, allowing the plugin to cancel it (by\n//   returning false).\n//\n//   appendTransaction:: ?(transactions: [Transaction], oldState: EditorState, newState: EditorState) → ?Transaction\n//   Allows the plugin to append another transaction to be applied\n//   after the given array of transactions. When another plugin\n//   appends a transaction after this was called, it is called again\n//   with the new state and new transactions—but only the new\n//   transactions, i.e. it won't be passed transactions that it\n//   already saw.\n\nfunction bindProps(obj, self, target) {\n  for (let prop in obj) {\n    let val = obj[prop]\n    if (val instanceof Function) val = val.bind(self)\n    else if (prop == \"handleDOMEvents\") val = bindProps(val, self, {})\n    target[prop] = val\n  }\n  return target\n}\n\n// ::- Plugins bundle functionality that can be added to an editor.\n// They are part of the [editor state](#state.EditorState) and\n// may influence that state and the view that contains it.\nexport class Plugin {\n  // :: (PluginSpec)\n  // Create a plugin.\n  constructor(spec) {\n    // :: EditorProps\n    // The [props](#view.EditorProps) exported by this plugin.\n    this.props = {}\n    if (spec.props) bindProps(spec.props, this, this.props)\n    // :: Object\n    // The plugin's [spec object](#state.PluginSpec).\n    this.spec = spec\n    this.key = spec.key ? spec.key.key : createKey(\"plugin\")\n  }\n\n  // :: (EditorState) → any\n  // Extract the plugin's state field from an editor state.\n  getState(state) { return state[this.key] }\n}\n\n// StateField:: interface<T>\n// A plugin spec may provide a state field (under its\n// [`state`](#state.PluginSpec.state) property) of this type, which\n// describes the state it wants to keep. Functions provided here are\n// always called with the plugin instance as their `this` binding.\n//\n//   init:: (config: Object, instance: EditorState) → T\n//   Initialize the value of the field. `config` will be the object\n//   passed to [`EditorState.create`](#state.EditorState^create). Note\n//   that `instance` is a half-initialized state instance, and will\n//   not have values for plugin fields initialized after this one.\n//\n//   apply:: (tr: Transaction, value: T, oldState: EditorState, newState: EditorState) → T\n//   Apply the given transaction to this state field, producing a new\n//   field value. Note that the `newState` argument is again a partially\n//   constructed state does not yet contain the state from plugins\n//   coming after this one.\n//\n//   toJSON:: ?(value: T) → *\n//   Convert this field to JSON. Optional, can be left off to disable\n//   JSON serialization for the field.\n//\n//   fromJSON:: ?(config: Object, value: *, state: EditorState) → T\n//   Deserialize the JSON representation of this field. Note that the\n//   `state` argument is again a half-initialized state.\n\nconst keys = Object.create(null)\n\nfunction createKey(name) {\n  if (name in keys) return name + \"$\" + ++keys[name]\n  keys[name] = 0\n  return name + \"$\"\n}\n\n// ::- A key is used to [tag](#state.PluginSpec.key)\n// plugins in a way that makes it possible to find them, given an\n// editor state. Assigning a key does mean only one plugin of that\n// type can be active in a state.\nexport class PluginKey {\n  // :: (?string)\n  // Create a plugin key.\n  constructor(name = \"key\") { this.key = createKey(name) }\n\n  // :: (EditorState) → ?Plugin\n  // Get the active plugin with this key, if any, from an editor\n  // state.\n  get(state) { return state.config.pluginsByKey[this.key] }\n\n  // :: (EditorState) → ?any\n  // Get the plugin's state from an editor state.\n  getState(state) { return state[this.key] }\n}\n","export var top = 'top';\nexport var bottom = 'bottom';\nexport var right = 'right';\nexport var left = 'left';\nexport var auto = 'auto';\nexport var basePlacements = [top, bottom, right, left];\nexport var start = 'start';\nexport var end = 'end';\nexport var clippingParents = 'clippingParents';\nexport var viewport = 'viewport';\nexport var popper = 'popper';\nexport var reference = 'reference';\nexport var variationPlacements = /*#__PURE__*/basePlacements.reduce(function (acc, placement) {\n  return acc.concat([placement + \"-\" + start, placement + \"-\" + end]);\n}, []);\nexport var placements = /*#__PURE__*/[].concat(basePlacements, [auto]).reduce(function (acc, placement) {\n  return acc.concat([placement, placement + \"-\" + start, placement + \"-\" + end]);\n}, []); // modifiers that need to read the DOM\n\nexport var beforeRead = 'beforeRead';\nexport var read = 'read';\nexport var afterRead = 'afterRead'; // pure-logic modifiers\n\nexport var beforeMain = 'beforeMain';\nexport var main = 'main';\nexport var afterMain = 'afterMain'; // modifier with the purpose to write to the DOM (or write into a framework state)\n\nexport var beforeWrite = 'beforeWrite';\nexport var write = 'write';\nexport var afterWrite = 'afterWrite';\nexport var modifierPhases = [beforeRead, read, afterRead, beforeMain, main, afterMain, beforeWrite, write, afterWrite];","export default function getNodeName(element) {\n  return element ? (element.nodeName || '').toLowerCase() : null;\n}","export default function getWindow(node) {\n  if (node == null) {\n    return window;\n  }\n\n  if (node.toString() !== '[object Window]') {\n    var ownerDocument = node.ownerDocument;\n    return ownerDocument ? ownerDocument.defaultView || window : window;\n  }\n\n  return node;\n}","import getWindow from \"./getWindow.js\";\n\nfunction isElement(node) {\n  var OwnElement = getWindow(node).Element;\n  return node instanceof OwnElement || node instanceof Element;\n}\n\nfunction isHTMLElement(node) {\n  var OwnElement = getWindow(node).HTMLElement;\n  return node instanceof OwnElement || node instanceof HTMLElement;\n}\n\nfunction isShadowRoot(node) {\n  // IE 11 has no ShadowRoot\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n\n  var OwnElement = getWindow(node).ShadowRoot;\n  return node instanceof OwnElement || node instanceof ShadowRoot;\n}\n\nexport { isElement, isHTMLElement, isShadowRoot };","import getNodeName from \"../dom-utils/getNodeName.js\";\nimport { isHTMLElement } from \"../dom-utils/instanceOf.js\"; // This modifier takes the styles prepared by the `computeStyles` modifier\n// and applies them to the HTMLElements such as popper and arrow\n\nfunction applyStyles(_ref) {\n  var state = _ref.state;\n  Object.keys(state.elements).forEach(function (name) {\n    var style = state.styles[name] || {};\n    var attributes = state.attributes[name] || {};\n    var element = state.elements[name]; // arrow is optional + virtual elements\n\n    if (!isHTMLElement(element) || !getNodeName(element)) {\n      return;\n    } // Flow doesn't support to extend this property, but it's the most\n    // effective way to apply styles to an HTMLElement\n    // $FlowFixMe[cannot-write]\n\n\n    Object.assign(element.style, style);\n    Object.keys(attributes).forEach(function (name) {\n      var value = attributes[name];\n\n      if (value === false) {\n        element.removeAttribute(name);\n      } else {\n        element.setAttribute(name, value === true ? '' : value);\n      }\n    });\n  });\n}\n\nfunction effect(_ref2) {\n  var state = _ref2.state;\n  var initialStyles = {\n    popper: {\n      position: state.options.strategy,\n      left: '0',\n      top: '0',\n      margin: '0'\n    },\n    arrow: {\n      position: 'absolute'\n    },\n    reference: {}\n  };\n  Object.assign(state.elements.popper.style, initialStyles.popper);\n  state.styles = initialStyles;\n\n  if (state.elements.arrow) {\n    Object.assign(state.elements.arrow.style, initialStyles.arrow);\n  }\n\n  return function () {\n    Object.keys(state.elements).forEach(function (name) {\n      var element = state.elements[name];\n      var attributes = state.attributes[name] || {};\n      var styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? state.styles[name] : initialStyles[name]); // Set all values to an empty string to unset them\n\n      var style = styleProperties.reduce(function (style, property) {\n        style[property] = '';\n        return style;\n      }, {}); // arrow is optional + virtual elements\n\n      if (!isHTMLElement(element) || !getNodeName(element)) {\n        return;\n      }\n\n      Object.assign(element.style, style);\n      Object.keys(attributes).forEach(function (attribute) {\n        element.removeAttribute(attribute);\n      });\n    });\n  };\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'applyStyles',\n  enabled: true,\n  phase: 'write',\n  fn: applyStyles,\n  effect: effect,\n  requires: ['computeStyles']\n};","import { auto } from \"../enums.js\";\nexport default function getBasePlacement(placement) {\n  return placement.split('-')[0];\n}","export default function getBoundingClientRect(element) {\n  var rect = element.getBoundingClientRect();\n  return {\n    width: rect.width,\n    height: rect.height,\n    top: rect.top,\n    right: rect.right,\n    bottom: rect.bottom,\n    left: rect.left,\n    x: rect.left,\n    y: rect.top\n  };\n}","import getBoundingClientRect from \"./getBoundingClientRect.js\"; // Returns the layout rect of an element relative to its offsetParent. Layout\n// means it doesn't take into account transforms.\n\nexport default function getLayoutRect(element) {\n  var clientRect = getBoundingClientRect(element); // Use the clientRect sizes if it's not been transformed.\n  // Fixes https://github.com/popperjs/popper-core/issues/1223\n\n  var width = element.offsetWidth;\n  var height = element.offsetHeight;\n\n  if (Math.abs(clientRect.width - width) <= 1) {\n    width = clientRect.width;\n  }\n\n  if (Math.abs(clientRect.height - height) <= 1) {\n    height = clientRect.height;\n  }\n\n  return {\n    x: element.offsetLeft,\n    y: element.offsetTop,\n    width: width,\n    height: height\n  };\n}","import { isShadowRoot } from \"./instanceOf.js\";\nexport default function contains(parent, child) {\n  var rootNode = child.getRootNode && child.getRootNode(); // First, attempt with faster native method\n\n  if (parent.contains(child)) {\n    return true;\n  } // then fallback to custom implementation with Shadow DOM support\n  else if (rootNode && isShadowRoot(rootNode)) {\n      var next = child;\n\n      do {\n        if (next && parent.isSameNode(next)) {\n          return true;\n        } // $FlowFixMe[prop-missing]: need a better way to handle this...\n\n\n        next = next.parentNode || next.host;\n      } while (next);\n    } // Give up, the result is false\n\n\n  return false;\n}","import getWindow from \"./getWindow.js\";\nexport default function getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}","import getNodeName from \"./getNodeName.js\";\nexport default function isTableElement(element) {\n  return ['table', 'td', 'th'].indexOf(getNodeName(element)) >= 0;\n}","import { isElement } from \"./instanceOf.js\";\nexport default function getDocumentElement(element) {\n  // $FlowFixMe[incompatible-return]: assume body is always available\n  return ((isElement(element) ? element.ownerDocument : // $FlowFixMe[prop-missing]\n  element.document) || window.document).documentElement;\n}","import getNodeName from \"./getNodeName.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport { isShadowRoot } from \"./instanceOf.js\";\nexport default function getParentNode(element) {\n  if (getNodeName(element) === 'html') {\n    return element;\n  }\n\n  return (// this is a quicker (but less type safe) way to save quite some bytes from the bundle\n    // $FlowFixMe[incompatible-return]\n    // $FlowFixMe[prop-missing]\n    element.assignedSlot || // step into the shadow DOM of the parent of a slotted node\n    element.parentNode || ( // DOM Element detected\n    isShadowRoot(element) ? element.host : null) || // ShadowRoot detected\n    // $FlowFixMe[incompatible-call]: HTMLElement is a Node\n    getDocumentElement(element) // fallback\n\n  );\n}","import getWindow from \"./getWindow.js\";\nimport getNodeName from \"./getNodeName.js\";\nimport getComputedStyle from \"./getComputedStyle.js\";\nimport { isHTMLElement } from \"./instanceOf.js\";\nimport isTableElement from \"./isTableElement.js\";\nimport getParentNode from \"./getParentNode.js\";\n\nfunction getTrueOffsetParent(element) {\n  if (!isHTMLElement(element) || // https://github.com/popperjs/popper-core/issues/837\n  getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n\n  return element.offsetParent;\n} // `.offsetParent` reports `null` for fixed elements, while absolute elements\n// return the containing block\n\n\nfunction getContainingBlock(element) {\n  var isFirefox = navigator.userAgent.toLowerCase().indexOf('firefox') !== -1;\n  var isIE = navigator.userAgent.indexOf('Trident') !== -1;\n\n  if (isIE && isHTMLElement(element)) {\n    // In IE 9, 10 and 11 fixed elements containing block is always established by the viewport\n    var elementCss = getComputedStyle(element);\n\n    if (elementCss.position === 'fixed') {\n      return null;\n    }\n  }\n\n  var currentNode = getParentNode(element);\n\n  while (isHTMLElement(currentNode) && ['html', 'body'].indexOf(getNodeName(currentNode)) < 0) {\n    var css = getComputedStyle(currentNode); // This is non-exhaustive but covers the most common CSS properties that\n    // create a containing block.\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n\n    if (css.transform !== 'none' || css.perspective !== 'none' || css.contain === 'paint' || ['transform', 'perspective'].indexOf(css.willChange) !== -1 || isFirefox && css.willChange === 'filter' || isFirefox && css.filter && css.filter !== 'none') {\n      return currentNode;\n    } else {\n      currentNode = currentNode.parentNode;\n    }\n  }\n\n  return null;\n} // Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\n\n\nexport default function getOffsetParent(element) {\n  var window = getWindow(element);\n  var offsetParent = getTrueOffsetParent(element);\n\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent);\n  }\n\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static')) {\n    return window;\n  }\n\n  return offsetParent || getContainingBlock(element) || window;\n}","export default function getMainAxisFromPlacement(placement) {\n  return ['top', 'bottom'].indexOf(placement) >= 0 ? 'x' : 'y';\n}","export var max = Math.max;\nexport var min = Math.min;\nexport var round = Math.round;","import { max as mathMax, min as mathMin } from \"./math.js\";\nexport default function within(min, value, max) {\n  return mathMax(min, mathMin(value, max));\n}","import getFreshSideObject from \"./getFreshSideObject.js\";\nexport default function mergePaddingObject(paddingObject) {\n  return Object.assign({}, getFreshSideObject(), paddingObject);\n}","export default function getFreshSideObject() {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  };\n}","export default function expandToHashMap(value, keys) {\n  return keys.reduce(function (hashMap, key) {\n    hashMap[key] = value;\n    return hashMap;\n  }, {});\n}","import { top, left, right, bottom } from \"../enums.js\";\nimport getOffsetParent from \"../dom-utils/getOffsetParent.js\";\nimport getWindow from \"../dom-utils/getWindow.js\";\nimport getDocumentElement from \"../dom-utils/getDocumentElement.js\";\nimport getComputedStyle from \"../dom-utils/getComputedStyle.js\";\nimport getBasePlacement from \"../utils/getBasePlacement.js\";\nimport { round } from \"../utils/math.js\"; // eslint-disable-next-line import/no-unused-modules\n\nvar unsetSides = {\n  top: 'auto',\n  right: 'auto',\n  bottom: 'auto',\n  left: 'auto'\n}; // Round the offsets to the nearest suitable subpixel based on the DPR.\n// Zooming can change the DPR, but it seems to report a value that will\n// cleanly divide the values into the appropriate subpixels.\n\nfunction roundOffsetsByDPR(_ref) {\n  var x = _ref.x,\n      y = _ref.y;\n  var win = window;\n  var dpr = win.devicePixelRatio || 1;\n  return {\n    x: round(round(x * dpr) / dpr) || 0,\n    y: round(round(y * dpr) / dpr) || 0\n  };\n}\n\nexport function mapToStyles(_ref2) {\n  var _Object$assign2;\n\n  var popper = _ref2.popper,\n      popperRect = _ref2.popperRect,\n      placement = _ref2.placement,\n      offsets = _ref2.offsets,\n      position = _ref2.position,\n      gpuAcceleration = _ref2.gpuAcceleration,\n      adaptive = _ref2.adaptive,\n      roundOffsets = _ref2.roundOffsets;\n\n  var _ref3 = roundOffsets === true ? roundOffsetsByDPR(offsets) : typeof roundOffsets === 'function' ? roundOffsets(offsets) : offsets,\n      _ref3$x = _ref3.x,\n      x = _ref3$x === void 0 ? 0 : _ref3$x,\n      _ref3$y = _ref3.y,\n      y = _ref3$y === void 0 ? 0 : _ref3$y;\n\n  var hasX = offsets.hasOwnProperty('x');\n  var hasY = offsets.hasOwnProperty('y');\n  var sideX = left;\n  var sideY = top;\n  var win = window;\n\n  if (adaptive) {\n    var offsetParent = getOffsetParent(popper);\n    var heightProp = 'clientHeight';\n    var widthProp = 'clientWidth';\n\n    if (offsetParent === getWindow(popper)) {\n      offsetParent = getDocumentElement(popper);\n\n      if (getComputedStyle(offsetParent).position !== 'static') {\n        heightProp = 'scrollHeight';\n        widthProp = 'scrollWidth';\n      }\n    } // $FlowFixMe[incompatible-cast]: force type refinement, we compare offsetParent with window above, but Flow doesn't detect it\n\n\n    offsetParent = offsetParent;\n\n    if (placement === top) {\n      sideY = bottom; // $FlowFixMe[prop-missing]\n\n      y -= offsetParent[heightProp] - popperRect.height;\n      y *= gpuAcceleration ? 1 : -1;\n    }\n\n    if (placement === left) {\n      sideX = right; // $FlowFixMe[prop-missing]\n\n      x -= offsetParent[widthProp] - popperRect.width;\n      x *= gpuAcceleration ? 1 : -1;\n    }\n  }\n\n  var commonStyles = Object.assign({\n    position: position\n  }, adaptive && unsetSides);\n\n  if (gpuAcceleration) {\n    var _Object$assign;\n\n    return Object.assign({}, commonStyles, (_Object$assign = {}, _Object$assign[sideY] = hasY ? '0' : '', _Object$assign[sideX] = hasX ? '0' : '', _Object$assign.transform = (win.devicePixelRatio || 1) < 2 ? \"translate(\" + x + \"px, \" + y + \"px)\" : \"translate3d(\" + x + \"px, \" + y + \"px, 0)\", _Object$assign));\n  }\n\n  return Object.assign({}, commonStyles, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y + \"px\" : '', _Object$assign2[sideX] = hasX ? x + \"px\" : '', _Object$assign2.transform = '', _Object$assign2));\n}\n\nfunction computeStyles(_ref4) {\n  var state = _ref4.state,\n      options = _ref4.options;\n  var _options$gpuAccelerat = options.gpuAcceleration,\n      gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat,\n      _options$adaptive = options.adaptive,\n      adaptive = _options$adaptive === void 0 ? true : _options$adaptive,\n      _options$roundOffsets = options.roundOffsets,\n      roundOffsets = _options$roundOffsets === void 0 ? true : _options$roundOffsets;\n\n  if (process.env.NODE_ENV !== \"production\") {\n    var transitionProperty = getComputedStyle(state.elements.popper).transitionProperty || '';\n\n    if (adaptive && ['transform', 'top', 'right', 'bottom', 'left'].some(function (property) {\n      return transitionProperty.indexOf(property) >= 0;\n    })) {\n      console.warn(['Popper: Detected CSS transitions on at least one of the following', 'CSS properties: \"transform\", \"top\", \"right\", \"bottom\", \"left\".', '\\n\\n', 'Disable the \"computeStyles\" modifier\\'s `adaptive` option to allow', 'for smooth transitions, or remove these properties from the CSS', 'transition declaration on the popper element if only transitioning', 'opacity or background-color for example.', '\\n\\n', 'We recommend using the popper element as a wrapper around an inner', 'element that can have any CSS property transitioned for animations.'].join(' '));\n    }\n  }\n\n  var commonStyles = {\n    placement: getBasePlacement(state.placement),\n    popper: state.elements.popper,\n    popperRect: state.rects.popper,\n    gpuAcceleration: gpuAcceleration\n  };\n\n  if (state.modifiersData.popperOffsets != null) {\n    state.styles.popper = Object.assign({}, state.styles.popper, mapToStyles(Object.assign({}, commonStyles, {\n      offsets: state.modifiersData.popperOffsets,\n      position: state.options.strategy,\n      adaptive: adaptive,\n      roundOffsets: roundOffsets\n    })));\n  }\n\n  if (state.modifiersData.arrow != null) {\n    state.styles.arrow = Object.assign({}, state.styles.arrow, mapToStyles(Object.assign({}, commonStyles, {\n      offsets: state.modifiersData.arrow,\n      position: 'absolute',\n      adaptive: false,\n      roundOffsets: roundOffsets\n    })));\n  }\n\n  state.attributes.popper = Object.assign({}, state.attributes.popper, {\n    'data-popper-placement': state.placement\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'computeStyles',\n  enabled: true,\n  phase: 'beforeWrite',\n  fn: computeStyles,\n  data: {}\n};","import getWindow from \"../dom-utils/getWindow.js\"; // eslint-disable-next-line import/no-unused-modules\n\nvar passive = {\n  passive: true\n};\n\nfunction effect(_ref) {\n  var state = _ref.state,\n      instance = _ref.instance,\n      options = _ref.options;\n  var _options$scroll = options.scroll,\n      scroll = _options$scroll === void 0 ? true : _options$scroll,\n      _options$resize = options.resize,\n      resize = _options$resize === void 0 ? true : _options$resize;\n  var window = getWindow(state.elements.popper);\n  var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);\n\n  if (scroll) {\n    scrollParents.forEach(function (scrollParent) {\n      scrollParent.addEventListener('scroll', instance.update, passive);\n    });\n  }\n\n  if (resize) {\n    window.addEventListener('resize', instance.update, passive);\n  }\n\n  return function () {\n    if (scroll) {\n      scrollParents.forEach(function (scrollParent) {\n        scrollParent.removeEventListener('scroll', instance.update, passive);\n      });\n    }\n\n    if (resize) {\n      window.removeEventListener('resize', instance.update, passive);\n    }\n  };\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'eventListeners',\n  enabled: true,\n  phase: 'write',\n  fn: function fn() {},\n  effect: effect,\n  data: {}\n};","var hash = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nexport default function getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, function (matched) {\n    return hash[matched];\n  });\n}","var hash = {\n  start: 'end',\n  end: 'start'\n};\nexport default function getOppositeVariationPlacement(placement) {\n  return placement.replace(/start|end/g, function (matched) {\n    return hash[matched];\n  });\n}","import getWindow from \"./getWindow.js\";\nexport default function getWindowScroll(node) {\n  var win = getWindow(node);\n  var scrollLeft = win.pageXOffset;\n  var scrollTop = win.pageYOffset;\n  return {\n    scrollLeft: scrollLeft,\n    scrollTop: scrollTop\n  };\n}","import getBoundingClientRect from \"./getBoundingClientRect.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport getWindowScroll from \"./getWindowScroll.js\";\nexport default function getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  // Popper 1 is broken in this case and never had a bug report so let's assume\n  // it's not an issue. I don't think anyone ever specifies width on <html>\n  // anyway.\n  // Browsers where the left scrollbar doesn't cause an issue report `0` for\n  // this (e.g. Edge 2019, IE11, Safari)\n  return getBoundingClientRect(getDocumentElement(element)).left + getWindowScroll(element).scrollLeft;\n}","import getComputedStyle from \"./getComputedStyle.js\";\nexport default function isScrollParent(element) {\n  // Firefox wants us to check `-x` and `-y` variations as well\n  var _getComputedStyle = getComputedStyle(element),\n      overflow = _getComputedStyle.overflow,\n      overflowX = _getComputedStyle.overflowX,\n      overflowY = _getComputedStyle.overflowY;\n\n  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);\n}","import getParentNode from \"./getParentNode.js\";\nimport isScrollParent from \"./isScrollParent.js\";\nimport getNodeName from \"./getNodeName.js\";\nimport { isHTMLElement } from \"./instanceOf.js\";\nexport default function getScrollParent(node) {\n  if (['html', 'body', '#document'].indexOf(getNodeName(node)) >= 0) {\n    // $FlowFixMe[incompatible-return]: assume body is always available\n    return node.ownerDocument.body;\n  }\n\n  if (isHTMLElement(node) && isScrollParent(node)) {\n    return node;\n  }\n\n  return getScrollParent(getParentNode(node));\n}","import getScrollParent from \"./getScrollParent.js\";\nimport getParentNode from \"./getParentNode.js\";\nimport getWindow from \"./getWindow.js\";\nimport isScrollParent from \"./isScrollParent.js\";\n/*\ngiven a DOM element, return the list of all scroll parents, up the list of ancesors\nuntil we get to the top window object. This list is what we attach scroll listeners\nto, because if any of these parent elements scroll, we'll need to re-calculate the\nreference element's position.\n*/\n\nexport default function listScrollParents(element, list) {\n  var _element$ownerDocumen;\n\n  if (list === void 0) {\n    list = [];\n  }\n\n  var scrollParent = getScrollParent(element);\n  var isBody = scrollParent === ((_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body);\n  var win = getWindow(scrollParent);\n  var target = isBody ? [win].concat(win.visualViewport || [], isScrollParent(scrollParent) ? scrollParent : []) : scrollParent;\n  var updatedList = list.concat(target);\n  return isBody ? updatedList : // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here\n  updatedList.concat(listScrollParents(getParentNode(target)));\n}","export default function rectToClientRect(rect) {\n  return Object.assign({}, rect, {\n    left: rect.x,\n    top: rect.y,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  });\n}","import { viewport } from \"../enums.js\";\nimport getViewportRect from \"./getViewportRect.js\";\nimport getDocumentRect from \"./getDocumentRect.js\";\nimport listScrollParents from \"./listScrollParents.js\";\nimport getOffsetParent from \"./getOffsetParent.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport getComputedStyle from \"./getComputedStyle.js\";\nimport { isElement, isHTMLElement } from \"./instanceOf.js\";\nimport getBoundingClientRect from \"./getBoundingClientRect.js\";\nimport getParentNode from \"./getParentNode.js\";\nimport contains from \"./contains.js\";\nimport getNodeName from \"./getNodeName.js\";\nimport rectToClientRect from \"../utils/rectToClientRect.js\";\nimport { max, min } from \"../utils/math.js\";\n\nfunction getInnerBoundingClientRect(element) {\n  var rect = getBoundingClientRect(element);\n  rect.top = rect.top + element.clientTop;\n  rect.left = rect.left + element.clientLeft;\n  rect.bottom = rect.top + element.clientHeight;\n  rect.right = rect.left + element.clientWidth;\n  rect.width = element.clientWidth;\n  rect.height = element.clientHeight;\n  rect.x = rect.left;\n  rect.y = rect.top;\n  return rect;\n}\n\nfunction getClientRectFromMixedType(element, clippingParent) {\n  return clippingParent === viewport ? rectToClientRect(getViewportRect(element)) : isHTMLElement(clippingParent) ? getInnerBoundingClientRect(clippingParent) : rectToClientRect(getDocumentRect(getDocumentElement(element)));\n} // A \"clipping parent\" is an overflowable container with the characteristic of\n// clipping (or hiding) overflowing elements with a position different from\n// `initial`\n\n\nfunction getClippingParents(element) {\n  var clippingParents = listScrollParents(getParentNode(element));\n  var canEscapeClipping = ['absolute', 'fixed'].indexOf(getComputedStyle(element).position) >= 0;\n  var clipperElement = canEscapeClipping && isHTMLElement(element) ? getOffsetParent(element) : element;\n\n  if (!isElement(clipperElement)) {\n    return [];\n  } // $FlowFixMe[incompatible-return]: https://github.com/facebook/flow/issues/1414\n\n\n  return clippingParents.filter(function (clippingParent) {\n    return isElement(clippingParent) && contains(clippingParent, clipperElement) && getNodeName(clippingParent) !== 'body';\n  });\n} // Gets the maximum area that the element is visible in due to any number of\n// clipping parents\n\n\nexport default function getClippingRect(element, boundary, rootBoundary) {\n  var mainClippingParents = boundary === 'clippingParents' ? getClippingParents(element) : [].concat(boundary);\n  var clippingParents = [].concat(mainClippingParents, [rootBoundary]);\n  var firstClippingParent = clippingParents[0];\n  var clippingRect = clippingParents.reduce(function (accRect, clippingParent) {\n    var rect = getClientRectFromMixedType(element, clippingParent);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromMixedType(element, firstClippingParent));\n  clippingRect.width = clippingRect.right - clippingRect.left;\n  clippingRect.height = clippingRect.bottom - clippingRect.top;\n  clippingRect.x = clippingRect.left;\n  clippingRect.y = clippingRect.top;\n  return clippingRect;\n}","import getWindow from \"./getWindow.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport getWindowScrollBarX from \"./getWindowScrollBarX.js\";\nexport default function getViewportRect(element) {\n  var win = getWindow(element);\n  var html = getDocumentElement(element);\n  var visualViewport = win.visualViewport;\n  var width = html.clientWidth;\n  var height = html.clientHeight;\n  var x = 0;\n  var y = 0; // NB: This isn't supported on iOS <= 12. If the keyboard is open, the popper\n  // can be obscured underneath it.\n  // Also, `html.clientHeight` adds the bottom bar height in Safari iOS, even\n  // if it isn't open, so if this isn't available, the popper will be detected\n  // to overflow the bottom of the screen too early.\n\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height; // Uses Layout Viewport (like Chrome; Safari does not currently)\n    // In Chrome, it returns a value very close to 0 (+/-) but contains rounding\n    // errors due to floating point numbers, so we need to check precision.\n    // Safari returns a number <= 0, usually < -1 when pinch-zoomed\n    // Feature detection fails in mobile emulation mode in Chrome.\n    // Math.abs(win.innerWidth / visualViewport.scale - visualViewport.width) <\n    // 0.001\n    // Fallback here: \"Not Safari\" userAgent\n\n    if (!/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n\n  return {\n    width: width,\n    height: height,\n    x: x + getWindowScrollBarX(element),\n    y: y\n  };\n}","import getDocumentElement from \"./getDocumentElement.js\";\nimport getComputedStyle from \"./getComputedStyle.js\";\nimport getWindowScrollBarX from \"./getWindowScrollBarX.js\";\nimport getWindowScroll from \"./getWindowScroll.js\";\nimport { max } from \"../utils/math.js\"; // Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable\n\nexport default function getDocumentRect(element) {\n  var _element$ownerDocumen;\n\n  var html = getDocumentElement(element);\n  var winScroll = getWindowScroll(element);\n  var body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;\n  var width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);\n  var height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);\n  var x = -winScroll.scrollLeft + getWindowScrollBarX(element);\n  var y = -winScroll.scrollTop;\n\n  if (getComputedStyle(body || html).direction === 'rtl') {\n    x += max(html.clientWidth, body ? body.clientWidth : 0) - width;\n  }\n\n  return {\n    width: width,\n    height: height,\n    x: x,\n    y: y\n  };\n}","export default function getVariation(placement) {\n  return placement.split('-')[1];\n}","import getBasePlacement from \"./getBasePlacement.js\";\nimport getVariation from \"./getVariation.js\";\nimport getMainAxisFromPlacement from \"./getMainAxisFromPlacement.js\";\nimport { top, right, bottom, left, start, end } from \"../enums.js\";\nexport default function computeOffsets(_ref) {\n  var reference = _ref.reference,\n      element = _ref.element,\n      placement = _ref.placement;\n  var basePlacement = placement ? getBasePlacement(placement) : null;\n  var variation = placement ? getVariation(placement) : null;\n  var commonX = reference.x + reference.width / 2 - element.width / 2;\n  var commonY = reference.y + reference.height / 2 - element.height / 2;\n  var offsets;\n\n  switch (basePlacement) {\n    case top:\n      offsets = {\n        x: commonX,\n        y: reference.y - element.height\n      };\n      break;\n\n    case bottom:\n      offsets = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n\n    case right:\n      offsets = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n\n    case left:\n      offsets = {\n        x: reference.x - element.width,\n        y: commonY\n      };\n      break;\n\n    default:\n      offsets = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n\n  var mainAxis = basePlacement ? getMainAxisFromPlacement(basePlacement) : null;\n\n  if (mainAxis != null) {\n    var len = mainAxis === 'y' ? 'height' : 'width';\n\n    switch (variation) {\n      case start:\n        offsets[mainAxis] = offsets[mainAxis] - (reference[len] / 2 - element[len] / 2);\n        break;\n\n      case end:\n        offsets[mainAxis] = offsets[mainAxis] + (reference[len] / 2 - element[len] / 2);\n        break;\n\n      default:\n    }\n  }\n\n  return offsets;\n}","import getBoundingClientRect from \"../dom-utils/getBoundingClientRect.js\";\nimport getClippingRect from \"../dom-utils/getClippingRect.js\";\nimport getDocumentElement from \"../dom-utils/getDocumentElement.js\";\nimport computeOffsets from \"./computeOffsets.js\";\nimport rectToClientRect from \"./rectToClientRect.js\";\nimport { clippingParents, reference, popper, bottom, top, right, basePlacements, viewport } from \"../enums.js\";\nimport { isElement } from \"../dom-utils/instanceOf.js\";\nimport mergePaddingObject from \"./mergePaddingObject.js\";\nimport expandToHashMap from \"./expandToHashMap.js\"; // eslint-disable-next-line import/no-unused-modules\n\nexport default function detectOverflow(state, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      _options$placement = _options.placement,\n      placement = _options$placement === void 0 ? state.placement : _options$placement,\n      _options$boundary = _options.boundary,\n      boundary = _options$boundary === void 0 ? clippingParents : _options$boundary,\n      _options$rootBoundary = _options.rootBoundary,\n      rootBoundary = _options$rootBoundary === void 0 ? viewport : _options$rootBoundary,\n      _options$elementConte = _options.elementContext,\n      elementContext = _options$elementConte === void 0 ? popper : _options$elementConte,\n      _options$altBoundary = _options.altBoundary,\n      altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary,\n      _options$padding = _options.padding,\n      padding = _options$padding === void 0 ? 0 : _options$padding;\n  var paddingObject = mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));\n  var altContext = elementContext === popper ? reference : popper;\n  var referenceElement = state.elements.reference;\n  var popperRect = state.rects.popper;\n  var element = state.elements[altBoundary ? altContext : elementContext];\n  var clippingClientRect = getClippingRect(isElement(element) ? element : element.contextElement || getDocumentElement(state.elements.popper), boundary, rootBoundary);\n  var referenceClientRect = getBoundingClientRect(referenceElement);\n  var popperOffsets = computeOffsets({\n    reference: referenceClientRect,\n    element: popperRect,\n    strategy: 'absolute',\n    placement: placement\n  });\n  var popperClientRect = rectToClientRect(Object.assign({}, popperRect, popperOffsets));\n  var elementClientRect = elementContext === popper ? popperClientRect : referenceClientRect; // positive = overflowing the clipping rect\n  // 0 or negative = within the clipping rect\n\n  var overflowOffsets = {\n    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,\n    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,\n    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,\n    right: elementClientRect.right - clippingClientRect.right + paddingObject.right\n  };\n  var offsetData = state.modifiersData.offset; // Offsets can be applied only to the popper element\n\n  if (elementContext === popper && offsetData) {\n    var offset = offsetData[placement];\n    Object.keys(overflowOffsets).forEach(function (key) {\n      var multiply = [right, bottom].indexOf(key) >= 0 ? 1 : -1;\n      var axis = [top, bottom].indexOf(key) >= 0 ? 'y' : 'x';\n      overflowOffsets[key] += offset[axis] * multiply;\n    });\n  }\n\n  return overflowOffsets;\n}","import getVariation from \"./getVariation.js\";\nimport { variationPlacements, basePlacements, placements as allPlacements } from \"../enums.js\";\nimport detectOverflow from \"./detectOverflow.js\";\nimport getBasePlacement from \"./getBasePlacement.js\";\nexport default function computeAutoPlacement(state, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      placement = _options.placement,\n      boundary = _options.boundary,\n      rootBoundary = _options.rootBoundary,\n      padding = _options.padding,\n      flipVariations = _options.flipVariations,\n      _options$allowedAutoP = _options.allowedAutoPlacements,\n      allowedAutoPlacements = _options$allowedAutoP === void 0 ? allPlacements : _options$allowedAutoP;\n  var variation = getVariation(placement);\n  var placements = variation ? flipVariations ? variationPlacements : variationPlacements.filter(function (placement) {\n    return getVariation(placement) === variation;\n  }) : basePlacements;\n  var allowedPlacements = placements.filter(function (placement) {\n    return allowedAutoPlacements.indexOf(placement) >= 0;\n  });\n\n  if (allowedPlacements.length === 0) {\n    allowedPlacements = placements;\n\n    if (process.env.NODE_ENV !== \"production\") {\n      console.error(['Popper: The `allowedAutoPlacements` option did not allow any', 'placements. Ensure the `placement` option matches the variation', 'of the allowed placements.', 'For example, \"auto\" cannot be used to allow \"bottom-start\".', 'Use \"auto-start\" instead.'].join(' '));\n    }\n  } // $FlowFixMe[incompatible-type]: Flow seems to have problems with two array unions...\n\n\n  var overflows = allowedPlacements.reduce(function (acc, placement) {\n    acc[placement] = detectOverflow(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      padding: padding\n    })[getBasePlacement(placement)];\n    return acc;\n  }, {});\n  return Object.keys(overflows).sort(function (a, b) {\n    return overflows[a] - overflows[b];\n  });\n}","import { top, bottom, left, right } from \"../enums.js\";\nimport detectOverflow from \"../utils/detectOverflow.js\";\n\nfunction getSideOffsets(overflow, rect, preventedOffsets) {\n  if (preventedOffsets === void 0) {\n    preventedOffsets = {\n      x: 0,\n      y: 0\n    };\n  }\n\n  return {\n    top: overflow.top - rect.height - preventedOffsets.y,\n    right: overflow.right - rect.width + preventedOffsets.x,\n    bottom: overflow.bottom - rect.height + preventedOffsets.y,\n    left: overflow.left - rect.width - preventedOffsets.x\n  };\n}\n\nfunction isAnySideFullyClipped(overflow) {\n  return [top, right, bottom, left].some(function (side) {\n    return overflow[side] >= 0;\n  });\n}\n\nfunction hide(_ref) {\n  var state = _ref.state,\n      name = _ref.name;\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var preventedOffsets = state.modifiersData.preventOverflow;\n  var referenceOverflow = detectOverflow(state, {\n    elementContext: 'reference'\n  });\n  var popperAltOverflow = detectOverflow(state, {\n    altBoundary: true\n  });\n  var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);\n  var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);\n  var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);\n  var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);\n  state.modifiersData[name] = {\n    referenceClippingOffsets: referenceClippingOffsets,\n    popperEscapeOffsets: popperEscapeOffsets,\n    isReferenceHidden: isReferenceHidden,\n    hasPopperEscaped: hasPopperEscaped\n  };\n  state.attributes.popper = Object.assign({}, state.attributes.popper, {\n    'data-popper-reference-hidden': isReferenceHidden,\n    'data-popper-escaped': hasPopperEscaped\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'hide',\n  enabled: true,\n  phase: 'main',\n  requiresIfExists: ['preventOverflow'],\n  fn: hide\n};","import getBoundingClientRect from \"./getBoundingClientRect.js\";\nimport getNodeScroll from \"./getNodeScroll.js\";\nimport getNodeName from \"./getNodeName.js\";\nimport { isHTMLElement } from \"./instanceOf.js\";\nimport getWindowScrollBarX from \"./getWindowScrollBarX.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport isScrollParent from \"./isScrollParent.js\"; // Returns the composite rect of an element relative to its offsetParent.\n// Composite means it takes into account transforms as well as layout.\n\nexport default function getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n\n  var documentElement = getDocumentElement(offsetParent);\n  var rect = getBoundingClientRect(elementOrVirtualElement);\n  var isOffsetParentAnElement = isHTMLElement(offsetParent);\n  var scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  var offsets = {\n    x: 0,\n    y: 0\n  };\n\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || // https://github.com/popperjs/popper-core/issues/1078\n    isScrollParent(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n\n    if (isHTMLElement(offsetParent)) {\n      offsets = getBoundingClientRect(offsetParent);\n      offsets.x += offsetParent.clientLeft;\n      offsets.y += offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}","import getWindowScroll from \"./getWindowScroll.js\";\nimport getWindow from \"./getWindow.js\";\nimport { isHTMLElement } from \"./instanceOf.js\";\nimport getHTMLElementScroll from \"./getHTMLElementScroll.js\";\nexport default function getNodeScroll(node) {\n  if (node === getWindow(node) || !isHTMLElement(node)) {\n    return getWindowScroll(node);\n  } else {\n    return getHTMLElementScroll(node);\n  }\n}","export default function getHTMLElementScroll(element) {\n  return {\n    scrollLeft: element.scrollLeft,\n    scrollTop: element.scrollTop\n  };\n}","import { modifierPhases } from \"../enums.js\"; // source: https://stackoverflow.com/questions/49875255\n\nfunction order(modifiers) {\n  var map = new Map();\n  var visited = new Set();\n  var result = [];\n  modifiers.forEach(function (modifier) {\n    map.set(modifier.name, modifier);\n  }); // On visiting object, check for its dependencies and visit them recursively\n\n  function sort(modifier) {\n    visited.add(modifier.name);\n    var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);\n    requires.forEach(function (dep) {\n      if (!visited.has(dep)) {\n        var depModifier = map.get(dep);\n\n        if (depModifier) {\n          sort(depModifier);\n        }\n      }\n    });\n    result.push(modifier);\n  }\n\n  modifiers.forEach(function (modifier) {\n    if (!visited.has(modifier.name)) {\n      // check for visited object\n      sort(modifier);\n    }\n  });\n  return result;\n}\n\nexport default function orderModifiers(modifiers) {\n  // order based on dependencies\n  var orderedModifiers = order(modifiers); // order based on phase\n\n  return modifierPhases.reduce(function (acc, phase) {\n    return acc.concat(orderedModifiers.filter(function (modifier) {\n      return modifier.phase === phase;\n    }));\n  }, []);\n}","export default function format(str) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  return [].concat(args).reduce(function (p, c) {\n    return p.replace(/%s/, c);\n  }, str);\n}","import format from \"./format.js\";\nimport { modifierPhases } from \"../enums.js\";\nvar INVALID_MODIFIER_ERROR = 'Popper: modifier \"%s\" provided an invalid %s property, expected %s but got %s';\nvar MISSING_DEPENDENCY_ERROR = 'Popper: modifier \"%s\" requires \"%s\", but \"%s\" modifier is not available';\nvar VALID_PROPERTIES = ['name', 'enabled', 'phase', 'fn', 'effect', 'requires', 'options'];\nexport default function validateModifiers(modifiers) {\n  modifiers.forEach(function (modifier) {\n    Object.keys(modifier).forEach(function (key) {\n      switch (key) {\n        case 'name':\n          if (typeof modifier.name !== 'string') {\n            console.error(format(INVALID_MODIFIER_ERROR, String(modifier.name), '\"name\"', '\"string\"', \"\\\"\" + String(modifier.name) + \"\\\"\"));\n          }\n\n          break;\n\n        case 'enabled':\n          if (typeof modifier.enabled !== 'boolean') {\n            console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"enabled\"', '\"boolean\"', \"\\\"\" + String(modifier.enabled) + \"\\\"\"));\n          }\n\n        case 'phase':\n          if (modifierPhases.indexOf(modifier.phase) < 0) {\n            console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"phase\"', \"either \" + modifierPhases.join(', '), \"\\\"\" + String(modifier.phase) + \"\\\"\"));\n          }\n\n          break;\n\n        case 'fn':\n          if (typeof modifier.fn !== 'function') {\n            console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"fn\"', '\"function\"', \"\\\"\" + String(modifier.fn) + \"\\\"\"));\n          }\n\n          break;\n\n        case 'effect':\n          if (typeof modifier.effect !== 'function') {\n            console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"effect\"', '\"function\"', \"\\\"\" + String(modifier.fn) + \"\\\"\"));\n          }\n\n          break;\n\n        case 'requires':\n          if (!Array.isArray(modifier.requires)) {\n            console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"requires\"', '\"array\"', \"\\\"\" + String(modifier.requires) + \"\\\"\"));\n          }\n\n          break;\n\n        case 'requiresIfExists':\n          if (!Array.isArray(modifier.requiresIfExists)) {\n            console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"requiresIfExists\"', '\"array\"', \"\\\"\" + String(modifier.requiresIfExists) + \"\\\"\"));\n          }\n\n          break;\n\n        case 'options':\n        case 'data':\n          break;\n\n        default:\n          console.error(\"PopperJS: an invalid property has been provided to the \\\"\" + modifier.name + \"\\\" modifier, valid properties are \" + VALID_PROPERTIES.map(function (s) {\n            return \"\\\"\" + s + \"\\\"\";\n          }).join(', ') + \"; but \\\"\" + key + \"\\\" was provided.\");\n      }\n\n      modifier.requires && modifier.requires.forEach(function (requirement) {\n        if (modifiers.find(function (mod) {\n          return mod.name === requirement;\n        }) == null) {\n          console.error(format(MISSING_DEPENDENCY_ERROR, String(modifier.name), requirement, requirement));\n        }\n      });\n    });\n  });\n}","import getCompositeRect from \"./dom-utils/getCompositeRect.js\";\nimport getLayoutRect from \"./dom-utils/getLayoutRect.js\";\nimport listScrollParents from \"./dom-utils/listScrollParents.js\";\nimport getOffsetParent from \"./dom-utils/getOffsetParent.js\";\nimport getComputedStyle from \"./dom-utils/getComputedStyle.js\";\nimport orderModifiers from \"./utils/orderModifiers.js\";\nimport debounce from \"./utils/debounce.js\";\nimport validateModifiers from \"./utils/validateModifiers.js\";\nimport uniqueBy from \"./utils/uniqueBy.js\";\nimport getBasePlacement from \"./utils/getBasePlacement.js\";\nimport mergeByName from \"./utils/mergeByName.js\";\nimport detectOverflow from \"./utils/detectOverflow.js\";\nimport { isElement } from \"./dom-utils/instanceOf.js\";\nimport { auto } from \"./enums.js\";\nvar INVALID_ELEMENT_ERROR = 'Popper: Invalid reference or popper argument provided. They must be either a DOM element or virtual element.';\nvar INFINITE_LOOP_ERROR = 'Popper: An infinite loop in the modifiers cycle has been detected! The cycle has been interrupted to prevent a browser crash.';\nvar DEFAULT_OPTIONS = {\n  placement: 'bottom',\n  modifiers: [],\n  strategy: 'absolute'\n};\n\nfunction areValidElements() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return !args.some(function (element) {\n    return !(element && typeof element.getBoundingClientRect === 'function');\n  });\n}\n\nexport function popperGenerator(generatorOptions) {\n  if (generatorOptions === void 0) {\n    generatorOptions = {};\n  }\n\n  var _generatorOptions = generatorOptions,\n      _generatorOptions$def = _generatorOptions.defaultModifiers,\n      defaultModifiers = _generatorOptions$def === void 0 ? [] : _generatorOptions$def,\n      _generatorOptions$def2 = _generatorOptions.defaultOptions,\n      defaultOptions = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS : _generatorOptions$def2;\n  return function createPopper(reference, popper, options) {\n    if (options === void 0) {\n      options = defaultOptions;\n    }\n\n    var state = {\n      placement: 'bottom',\n      orderedModifiers: [],\n      options: Object.assign({}, DEFAULT_OPTIONS, defaultOptions),\n      modifiersData: {},\n      elements: {\n        reference: reference,\n        popper: popper\n      },\n      attributes: {},\n      styles: {}\n    };\n    var effectCleanupFns = [];\n    var isDestroyed = false;\n    var instance = {\n      state: state,\n      setOptions: function setOptions(options) {\n        cleanupModifierEffects();\n        state.options = Object.assign({}, defaultOptions, state.options, options);\n        state.scrollParents = {\n          reference: isElement(reference) ? listScrollParents(reference) : reference.contextElement ? listScrollParents(reference.contextElement) : [],\n          popper: listScrollParents(popper)\n        }; // Orders the modifiers based on their dependencies and `phase`\n        // properties\n\n        var orderedModifiers = orderModifiers(mergeByName([].concat(defaultModifiers, state.options.modifiers))); // Strip out disabled modifiers\n\n        state.orderedModifiers = orderedModifiers.filter(function (m) {\n          return m.enabled;\n        }); // Validate the provided modifiers so that the consumer will get warned\n        // if one of the modifiers is invalid for any reason\n\n        if (process.env.NODE_ENV !== \"production\") {\n          var modifiers = uniqueBy([].concat(orderedModifiers, state.options.modifiers), function (_ref) {\n            var name = _ref.name;\n            return name;\n          });\n          validateModifiers(modifiers);\n\n          if (getBasePlacement(state.options.placement) === auto) {\n            var flipModifier = state.orderedModifiers.find(function (_ref2) {\n              var name = _ref2.name;\n              return name === 'flip';\n            });\n\n            if (!flipModifier) {\n              console.error(['Popper: \"auto\" placements require the \"flip\" modifier be', 'present and enabled to work.'].join(' '));\n            }\n          }\n\n          var _getComputedStyle = getComputedStyle(popper),\n              marginTop = _getComputedStyle.marginTop,\n              marginRight = _getComputedStyle.marginRight,\n              marginBottom = _getComputedStyle.marginBottom,\n              marginLeft = _getComputedStyle.marginLeft; // We no longer take into account `margins` on the popper, and it can\n          // cause bugs with positioning, so we'll warn the consumer\n\n\n          if ([marginTop, marginRight, marginBottom, marginLeft].some(function (margin) {\n            return parseFloat(margin);\n          })) {\n            console.warn(['Popper: CSS \"margin\" styles cannot be used to apply padding', 'between the popper and its reference element or boundary.', 'To replicate margin, use the `offset` modifier, as well as', 'the `padding` option in the `preventOverflow` and `flip`', 'modifiers.'].join(' '));\n          }\n        }\n\n        runModifierEffects();\n        return instance.update();\n      },\n      // Sync update – it will always be executed, even if not necessary. This\n      // is useful for low frequency updates where sync behavior simplifies the\n      // logic.\n      // For high frequency updates (e.g. `resize` and `scroll` events), always\n      // prefer the async Popper#update method\n      forceUpdate: function forceUpdate() {\n        if (isDestroyed) {\n          return;\n        }\n\n        var _state$elements = state.elements,\n            reference = _state$elements.reference,\n            popper = _state$elements.popper; // Don't proceed if `reference` or `popper` are not valid elements\n        // anymore\n\n        if (!areValidElements(reference, popper)) {\n          if (process.env.NODE_ENV !== \"production\") {\n            console.error(INVALID_ELEMENT_ERROR);\n          }\n\n          return;\n        } // Store the reference and popper rects to be read by modifiers\n\n\n        state.rects = {\n          reference: getCompositeRect(reference, getOffsetParent(popper), state.options.strategy === 'fixed'),\n          popper: getLayoutRect(popper)\n        }; // Modifiers have the ability to reset the current update cycle. The\n        // most common use case for this is the `flip` modifier changing the\n        // placement, which then needs to re-run all the modifiers, because the\n        // logic was previously ran for the previous placement and is therefore\n        // stale/incorrect\n\n        state.reset = false;\n        state.placement = state.options.placement; // On each update cycle, the `modifiersData` property for each modifier\n        // is filled with the initial data specified by the modifier. This means\n        // it doesn't persist and is fresh on each update.\n        // To ensure persistent data, use `${name}#persistent`\n\n        state.orderedModifiers.forEach(function (modifier) {\n          return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);\n        });\n        var __debug_loops__ = 0;\n\n        for (var index = 0; index < state.orderedModifiers.length; index++) {\n          if (process.env.NODE_ENV !== \"production\") {\n            __debug_loops__ += 1;\n\n            if (__debug_loops__ > 100) {\n              console.error(INFINITE_LOOP_ERROR);\n              break;\n            }\n          }\n\n          if (state.reset === true) {\n            state.reset = false;\n            index = -1;\n            continue;\n          }\n\n          var _state$orderedModifie = state.orderedModifiers[index],\n              fn = _state$orderedModifie.fn,\n              _state$orderedModifie2 = _state$orderedModifie.options,\n              _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2,\n              name = _state$orderedModifie.name;\n\n          if (typeof fn === 'function') {\n            state = fn({\n              state: state,\n              options: _options,\n              name: name,\n              instance: instance\n            }) || state;\n          }\n        }\n      },\n      // Async and optimistically optimized update – it will not be executed if\n      // not necessary (debounced to run at most once-per-tick)\n      update: debounce(function () {\n        return new Promise(function (resolve) {\n          instance.forceUpdate();\n          resolve(state);\n        });\n      }),\n      destroy: function destroy() {\n        cleanupModifierEffects();\n        isDestroyed = true;\n      }\n    };\n\n    if (!areValidElements(reference, popper)) {\n      if (process.env.NODE_ENV !== \"production\") {\n        console.error(INVALID_ELEMENT_ERROR);\n      }\n\n      return instance;\n    }\n\n    instance.setOptions(options).then(function (state) {\n      if (!isDestroyed && options.onFirstUpdate) {\n        options.onFirstUpdate(state);\n      }\n    }); // Modifiers have the ability to execute arbitrary code before the first\n    // update cycle runs. They will be executed in the same order as the update\n    // cycle. This is useful when a modifier adds some persistent data that\n    // other modifiers need to use, but the modifier is run after the dependent\n    // one.\n\n    function runModifierEffects() {\n      state.orderedModifiers.forEach(function (_ref3) {\n        var name = _ref3.name,\n            _ref3$options = _ref3.options,\n            options = _ref3$options === void 0 ? {} : _ref3$options,\n            effect = _ref3.effect;\n\n        if (typeof effect === 'function') {\n          var cleanupFn = effect({\n            state: state,\n            name: name,\n            instance: instance,\n            options: options\n          });\n\n          var noopFn = function noopFn() {};\n\n          effectCleanupFns.push(cleanupFn || noopFn);\n        }\n      });\n    }\n\n    function cleanupModifierEffects() {\n      effectCleanupFns.forEach(function (fn) {\n        return fn();\n      });\n      effectCleanupFns = [];\n    }\n\n    return instance;\n  };\n}\nexport var createPopper = /*#__PURE__*/popperGenerator(); // eslint-disable-next-line import/no-unused-modules\n\nexport { detectOverflow };","export default function debounce(fn) {\n  var pending;\n  return function () {\n    if (!pending) {\n      pending = new Promise(function (resolve) {\n        Promise.resolve().then(function () {\n          pending = undefined;\n          resolve(fn());\n        });\n      });\n    }\n\n    return pending;\n  };\n}","export default function uniqueBy(arr, fn) {\n  var identifiers = new Set();\n  return arr.filter(function (item) {\n    var identifier = fn(item);\n\n    if (!identifiers.has(identifier)) {\n      identifiers.add(identifier);\n      return true;\n    }\n  });\n}","export default function mergeByName(modifiers) {\n  var merged = modifiers.reduce(function (merged, current) {\n    var existing = merged[current.name];\n    merged[current.name] = existing ? Object.assign({}, existing, current, {\n      options: Object.assign({}, existing.options, current.options),\n      data: Object.assign({}, existing.data, current.data)\n    }) : current;\n    return merged;\n  }, {}); // IE11 does not support Object.values\n\n  return Object.keys(merged).map(function (key) {\n    return merged[key];\n  });\n}","import { popperGenerator, detectOverflow } from \"./createPopper.js\";\nimport eventListeners from \"./modifiers/eventListeners.js\";\nimport popperOffsets from \"./modifiers/popperOffsets.js\";\nimport computeStyles from \"./modifiers/computeStyles.js\";\nimport applyStyles from \"./modifiers/applyStyles.js\";\nimport offset from \"./modifiers/offset.js\";\nimport flip from \"./modifiers/flip.js\";\nimport preventOverflow from \"./modifiers/preventOverflow.js\";\nimport arrow from \"./modifiers/arrow.js\";\nimport hide from \"./modifiers/hide.js\";\nvar defaultModifiers = [eventListeners, popperOffsets, computeStyles, applyStyles, offset, flip, preventOverflow, arrow, hide];\nvar createPopper = /*#__PURE__*/popperGenerator({\n  defaultModifiers: defaultModifiers\n}); // eslint-disable-next-line import/no-unused-modules\n\nexport { createPopper, popperGenerator, defaultModifiers, detectOverflow }; // eslint-disable-next-line import/no-unused-modules\n\nexport { createPopper as createPopperLite } from \"./popper-lite.js\"; // eslint-disable-next-line import/no-unused-modules\n\nexport * from \"./modifiers/index.js\";","import computeOffsets from \"../utils/computeOffsets.js\";\n\nfunction popperOffsets(_ref) {\n  var state = _ref.state,\n      name = _ref.name;\n  // Offsets are the actual position the popper needs to have to be\n  // properly positioned near its reference element\n  // This is the most basic placement, and will be adjusted by\n  // the modifiers in the next step\n  state.modifiersData[name] = computeOffsets({\n    reference: state.rects.reference,\n    element: state.rects.popper,\n    strategy: 'absolute',\n    placement: state.placement\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'popperOffsets',\n  enabled: true,\n  phase: 'read',\n  fn: popperOffsets,\n  data: {}\n};","import getBasePlacement from \"../utils/getBasePlacement.js\";\nimport { top, left, right, placements } from \"../enums.js\";\nexport function distanceAndSkiddingToXY(placement, rects, offset) {\n  var basePlacement = getBasePlacement(placement);\n  var invertDistance = [left, top].indexOf(basePlacement) >= 0 ? -1 : 1;\n\n  var _ref = typeof offset === 'function' ? offset(Object.assign({}, rects, {\n    placement: placement\n  })) : offset,\n      skidding = _ref[0],\n      distance = _ref[1];\n\n  skidding = skidding || 0;\n  distance = (distance || 0) * invertDistance;\n  return [left, right].indexOf(basePlacement) >= 0 ? {\n    x: distance,\n    y: skidding\n  } : {\n    x: skidding,\n    y: distance\n  };\n}\n\nfunction offset(_ref2) {\n  var state = _ref2.state,\n      options = _ref2.options,\n      name = _ref2.name;\n  var _options$offset = options.offset,\n      offset = _options$offset === void 0 ? [0, 0] : _options$offset;\n  var data = placements.reduce(function (acc, placement) {\n    acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset);\n    return acc;\n  }, {});\n  var _data$state$placement = data[state.placement],\n      x = _data$state$placement.x,\n      y = _data$state$placement.y;\n\n  if (state.modifiersData.popperOffsets != null) {\n    state.modifiersData.popperOffsets.x += x;\n    state.modifiersData.popperOffsets.y += y;\n  }\n\n  state.modifiersData[name] = data;\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'offset',\n  enabled: true,\n  phase: 'main',\n  requires: ['popperOffsets'],\n  fn: offset\n};","import getOppositePlacement from \"../utils/getOppositePlacement.js\";\nimport getBasePlacement from \"../utils/getBasePlacement.js\";\nimport getOppositeVariationPlacement from \"../utils/getOppositeVariationPlacement.js\";\nimport detectOverflow from \"../utils/detectOverflow.js\";\nimport computeAutoPlacement from \"../utils/computeAutoPlacement.js\";\nimport { bottom, top, start, right, left, auto } from \"../enums.js\";\nimport getVariation from \"../utils/getVariation.js\"; // eslint-disable-next-line import/no-unused-modules\n\nfunction getExpandedFallbackPlacements(placement) {\n  if (getBasePlacement(placement) === auto) {\n    return [];\n  }\n\n  var oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeVariationPlacement(placement), oppositePlacement, getOppositeVariationPlacement(oppositePlacement)];\n}\n\nfunction flip(_ref) {\n  var state = _ref.state,\n      options = _ref.options,\n      name = _ref.name;\n\n  if (state.modifiersData[name]._skip) {\n    return;\n  }\n\n  var _options$mainAxis = options.mainAxis,\n      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,\n      _options$altAxis = options.altAxis,\n      checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis,\n      specifiedFallbackPlacements = options.fallbackPlacements,\n      padding = options.padding,\n      boundary = options.boundary,\n      rootBoundary = options.rootBoundary,\n      altBoundary = options.altBoundary,\n      _options$flipVariatio = options.flipVariations,\n      flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio,\n      allowedAutoPlacements = options.allowedAutoPlacements;\n  var preferredPlacement = state.options.placement;\n  var basePlacement = getBasePlacement(preferredPlacement);\n  var isBasePlacement = basePlacement === preferredPlacement;\n  var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [getOppositePlacement(preferredPlacement)] : getExpandedFallbackPlacements(preferredPlacement));\n  var placements = [preferredPlacement].concat(fallbackPlacements).reduce(function (acc, placement) {\n    return acc.concat(getBasePlacement(placement) === auto ? computeAutoPlacement(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      padding: padding,\n      flipVariations: flipVariations,\n      allowedAutoPlacements: allowedAutoPlacements\n    }) : placement);\n  }, []);\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var checksMap = new Map();\n  var makeFallbackChecks = true;\n  var firstFittingPlacement = placements[0];\n\n  for (var i = 0; i < placements.length; i++) {\n    var placement = placements[i];\n\n    var _basePlacement = getBasePlacement(placement);\n\n    var isStartVariation = getVariation(placement) === start;\n    var isVertical = [top, bottom].indexOf(_basePlacement) >= 0;\n    var len = isVertical ? 'width' : 'height';\n    var overflow = detectOverflow(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      altBoundary: altBoundary,\n      padding: padding\n    });\n    var mainVariationSide = isVertical ? isStartVariation ? right : left : isStartVariation ? bottom : top;\n\n    if (referenceRect[len] > popperRect[len]) {\n      mainVariationSide = getOppositePlacement(mainVariationSide);\n    }\n\n    var altVariationSide = getOppositePlacement(mainVariationSide);\n    var checks = [];\n\n    if (checkMainAxis) {\n      checks.push(overflow[_basePlacement] <= 0);\n    }\n\n    if (checkAltAxis) {\n      checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);\n    }\n\n    if (checks.every(function (check) {\n      return check;\n    })) {\n      firstFittingPlacement = placement;\n      makeFallbackChecks = false;\n      break;\n    }\n\n    checksMap.set(placement, checks);\n  }\n\n  if (makeFallbackChecks) {\n    // `2` may be desired in some cases – research later\n    var numberOfChecks = flipVariations ? 3 : 1;\n\n    var _loop = function _loop(_i) {\n      var fittingPlacement = placements.find(function (placement) {\n        var checks = checksMap.get(placement);\n\n        if (checks) {\n          return checks.slice(0, _i).every(function (check) {\n            return check;\n          });\n        }\n      });\n\n      if (fittingPlacement) {\n        firstFittingPlacement = fittingPlacement;\n        return \"break\";\n      }\n    };\n\n    for (var _i = numberOfChecks; _i > 0; _i--) {\n      var _ret = _loop(_i);\n\n      if (_ret === \"break\") break;\n    }\n  }\n\n  if (state.placement !== firstFittingPlacement) {\n    state.modifiersData[name]._skip = true;\n    state.placement = firstFittingPlacement;\n    state.reset = true;\n  }\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'flip',\n  enabled: true,\n  phase: 'main',\n  fn: flip,\n  requiresIfExists: ['offset'],\n  data: {\n    _skip: false\n  }\n};","import { top, left, right, bottom, start } from \"../enums.js\";\nimport getBasePlacement from \"../utils/getBasePlacement.js\";\nimport getMainAxisFromPlacement from \"../utils/getMainAxisFromPlacement.js\";\nimport getAltAxis from \"../utils/getAltAxis.js\";\nimport within from \"../utils/within.js\";\nimport getLayoutRect from \"../dom-utils/getLayoutRect.js\";\nimport getOffsetParent from \"../dom-utils/getOffsetParent.js\";\nimport detectOverflow from \"../utils/detectOverflow.js\";\nimport getVariation from \"../utils/getVariation.js\";\nimport getFreshSideObject from \"../utils/getFreshSideObject.js\";\nimport { max as mathMax, min as mathMin } from \"../utils/math.js\";\n\nfunction preventOverflow(_ref) {\n  var state = _ref.state,\n      options = _ref.options,\n      name = _ref.name;\n  var _options$mainAxis = options.mainAxis,\n      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,\n      _options$altAxis = options.altAxis,\n      checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis,\n      boundary = options.boundary,\n      rootBoundary = options.rootBoundary,\n      altBoundary = options.altBoundary,\n      padding = options.padding,\n      _options$tether = options.tether,\n      tether = _options$tether === void 0 ? true : _options$tether,\n      _options$tetherOffset = options.tetherOffset,\n      tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;\n  var overflow = detectOverflow(state, {\n    boundary: boundary,\n    rootBoundary: rootBoundary,\n    padding: padding,\n    altBoundary: altBoundary\n  });\n  var basePlacement = getBasePlacement(state.placement);\n  var variation = getVariation(state.placement);\n  var isBasePlacement = !variation;\n  var mainAxis = getMainAxisFromPlacement(basePlacement);\n  var altAxis = getAltAxis(mainAxis);\n  var popperOffsets = state.modifiersData.popperOffsets;\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var tetherOffsetValue = typeof tetherOffset === 'function' ? tetherOffset(Object.assign({}, state.rects, {\n    placement: state.placement\n  })) : tetherOffset;\n  var data = {\n    x: 0,\n    y: 0\n  };\n\n  if (!popperOffsets) {\n    return;\n  }\n\n  if (checkMainAxis || checkAltAxis) {\n    var mainSide = mainAxis === 'y' ? top : left;\n    var altSide = mainAxis === 'y' ? bottom : right;\n    var len = mainAxis === 'y' ? 'height' : 'width';\n    var offset = popperOffsets[mainAxis];\n    var min = popperOffsets[mainAxis] + overflow[mainSide];\n    var max = popperOffsets[mainAxis] - overflow[altSide];\n    var additive = tether ? -popperRect[len] / 2 : 0;\n    var minLen = variation === start ? referenceRect[len] : popperRect[len];\n    var maxLen = variation === start ? -popperRect[len] : -referenceRect[len]; // We need to include the arrow in the calculation so the arrow doesn't go\n    // outside the reference bounds\n\n    var arrowElement = state.elements.arrow;\n    var arrowRect = tether && arrowElement ? getLayoutRect(arrowElement) : {\n      width: 0,\n      height: 0\n    };\n    var arrowPaddingObject = state.modifiersData['arrow#persistent'] ? state.modifiersData['arrow#persistent'].padding : getFreshSideObject();\n    var arrowPaddingMin = arrowPaddingObject[mainSide];\n    var arrowPaddingMax = arrowPaddingObject[altSide]; // If the reference length is smaller than the arrow length, we don't want\n    // to include its full size in the calculation. If the reference is small\n    // and near the edge of a boundary, the popper can overflow even if the\n    // reference is not overflowing as well (e.g. virtual elements with no\n    // width or height)\n\n    var arrowLen = within(0, referenceRect[len], arrowRect[len]);\n    var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - tetherOffsetValue : minLen - arrowLen - arrowPaddingMin - tetherOffsetValue;\n    var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + tetherOffsetValue : maxLen + arrowLen + arrowPaddingMax + tetherOffsetValue;\n    var arrowOffsetParent = state.elements.arrow && getOffsetParent(state.elements.arrow);\n    var clientOffset = arrowOffsetParent ? mainAxis === 'y' ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;\n    var offsetModifierValue = state.modifiersData.offset ? state.modifiersData.offset[state.placement][mainAxis] : 0;\n    var tetherMin = popperOffsets[mainAxis] + minOffset - offsetModifierValue - clientOffset;\n    var tetherMax = popperOffsets[mainAxis] + maxOffset - offsetModifierValue;\n\n    if (checkMainAxis) {\n      var preventedOffset = within(tether ? mathMin(min, tetherMin) : min, offset, tether ? mathMax(max, tetherMax) : max);\n      popperOffsets[mainAxis] = preventedOffset;\n      data[mainAxis] = preventedOffset - offset;\n    }\n\n    if (checkAltAxis) {\n      var _mainSide = mainAxis === 'x' ? top : left;\n\n      var _altSide = mainAxis === 'x' ? bottom : right;\n\n      var _offset = popperOffsets[altAxis];\n\n      var _min = _offset + overflow[_mainSide];\n\n      var _max = _offset - overflow[_altSide];\n\n      var _preventedOffset = within(tether ? mathMin(_min, tetherMin) : _min, _offset, tether ? mathMax(_max, tetherMax) : _max);\n\n      popperOffsets[altAxis] = _preventedOffset;\n      data[altAxis] = _preventedOffset - _offset;\n    }\n  }\n\n  state.modifiersData[name] = data;\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'preventOverflow',\n  enabled: true,\n  phase: 'main',\n  fn: preventOverflow,\n  requiresIfExists: ['offset']\n};","export default function getAltAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}","import getBasePlacement from \"../utils/getBasePlacement.js\";\nimport getLayoutRect from \"../dom-utils/getLayoutRect.js\";\nimport contains from \"../dom-utils/contains.js\";\nimport getOffsetParent from \"../dom-utils/getOffsetParent.js\";\nimport getMainAxisFromPlacement from \"../utils/getMainAxisFromPlacement.js\";\nimport within from \"../utils/within.js\";\nimport mergePaddingObject from \"../utils/mergePaddingObject.js\";\nimport expandToHashMap from \"../utils/expandToHashMap.js\";\nimport { left, right, basePlacements, top, bottom } from \"../enums.js\";\nimport { isHTMLElement } from \"../dom-utils/instanceOf.js\"; // eslint-disable-next-line import/no-unused-modules\n\nvar toPaddingObject = function toPaddingObject(padding, state) {\n  padding = typeof padding === 'function' ? padding(Object.assign({}, state.rects, {\n    placement: state.placement\n  })) : padding;\n  return mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));\n};\n\nfunction arrow(_ref) {\n  var _state$modifiersData$;\n\n  var state = _ref.state,\n      name = _ref.name,\n      options = _ref.options;\n  var arrowElement = state.elements.arrow;\n  var popperOffsets = state.modifiersData.popperOffsets;\n  var basePlacement = getBasePlacement(state.placement);\n  var axis = getMainAxisFromPlacement(basePlacement);\n  var isVertical = [left, right].indexOf(basePlacement) >= 0;\n  var len = isVertical ? 'height' : 'width';\n\n  if (!arrowElement || !popperOffsets) {\n    return;\n  }\n\n  var paddingObject = toPaddingObject(options.padding, state);\n  var arrowRect = getLayoutRect(arrowElement);\n  var minProp = axis === 'y' ? top : left;\n  var maxProp = axis === 'y' ? bottom : right;\n  var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets[axis] - state.rects.popper[len];\n  var startDiff = popperOffsets[axis] - state.rects.reference[axis];\n  var arrowOffsetParent = getOffsetParent(arrowElement);\n  var clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;\n  var centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the popper if the center point is\n  // outside of the popper bounds\n\n  var min = paddingObject[minProp];\n  var max = clientSize - arrowRect[len] - paddingObject[maxProp];\n  var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;\n  var offset = within(min, center, max); // Prevents breaking syntax highlighting...\n\n  var axisProp = axis;\n  state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset, _state$modifiersData$.centerOffset = offset - center, _state$modifiersData$);\n}\n\nfunction effect(_ref2) {\n  var state = _ref2.state,\n      options = _ref2.options;\n  var _options$element = options.element,\n      arrowElement = _options$element === void 0 ? '[data-popper-arrow]' : _options$element;\n\n  if (arrowElement == null) {\n    return;\n  } // CSS selector\n\n\n  if (typeof arrowElement === 'string') {\n    arrowElement = state.elements.popper.querySelector(arrowElement);\n\n    if (!arrowElement) {\n      return;\n    }\n  }\n\n  if (process.env.NODE_ENV !== \"production\") {\n    if (!isHTMLElement(arrowElement)) {\n      console.error(['Popper: \"arrow\" element must be an HTMLElement (not an SVGElement).', 'To use an SVG arrow, wrap it in an HTMLElement that will be used as', 'the arrow.'].join(' '));\n    }\n  }\n\n  if (!contains(state.elements.popper, arrowElement)) {\n    if (process.env.NODE_ENV !== \"production\") {\n      console.error(['Popper: \"arrow\" modifier\\'s `element` must be a child of the popper', 'element.'].join(' '));\n    }\n\n    return;\n  }\n\n  state.elements.arrow = arrowElement;\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'arrow',\n  enabled: true,\n  phase: 'main',\n  fn: arrow,\n  effect: effect,\n  requires: ['popperOffsets'],\n  requiresIfExists: ['preventOverflow']\n};","export const ROUND_ARROW =\n  '<svg width=\"16\" height=\"6\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M0 6s1.796-.013 4.67-3.615C5.851.9 6.93.006 8 0c1.07-.006 2.148.887 3.343 2.385C14.233 6.005 16 6 16 6H0z\"></svg>';\n\nexport const BOX_CLASS = `__NAMESPACE_PREFIX__-box`;\nexport const CONTENT_CLASS = `__NAMESPACE_PREFIX__-content`;\nexport const BACKDROP_CLASS = `__NAMESPACE_PREFIX__-backdrop`;\nexport const ARROW_CLASS = `__NAMESPACE_PREFIX__-arrow`;\nexport const SVG_ARROW_CLASS = `__NAMESPACE_PREFIX__-svg-arrow`;\n\nexport const TOUCH_OPTIONS = {passive: true, capture: true};\n","import {BasePlacement, Placement} from './types';\n\nexport function hasOwnProperty(obj: object, key: string): boolean {\n  return {}.hasOwnProperty.call(obj, key);\n}\n\nexport function getValueAtIndexOrReturn<T>(\n  value: T | [T | null, T | null],\n  index: number,\n  defaultValue: T | [T, T]\n): T {\n  if (Array.isArray(value)) {\n    const v = value[index];\n    return v == null\n      ? Array.isArray(defaultValue)\n        ? defaultValue[index]\n        : defaultValue\n      : v;\n  }\n\n  return value;\n}\n\nexport function isType(value: any, type: string): boolean {\n  const str = {}.toString.call(value);\n  return str.indexOf('[object') === 0 && str.indexOf(`${type}]`) > -1;\n}\n\nexport function invokeWithArgsOrReturn(value: any, args: any[]): any {\n  return typeof value === 'function' ? value(...args) : value;\n}\n\nexport function debounce<T>(\n  fn: (arg: T) => void,\n  ms: number\n): (arg: T) => void {\n  // Avoid wrapping in `setTimeout` if ms is 0 anyway\n  if (ms === 0) {\n    return fn;\n  }\n\n  let timeout: any;\n\n  return (arg): void => {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      fn(arg);\n    }, ms);\n  };\n}\n\nexport function removeProperties<T>(obj: T, keys: string[]): Partial<T> {\n  const clone = {...obj};\n  keys.forEach((key) => {\n    delete (clone as any)[key];\n  });\n  return clone;\n}\n\nexport function splitBySpaces(value: string): string[] {\n  return value.split(/\\s+/).filter(Boolean);\n}\n\nexport function normalizeToArray<T>(value: T | T[]): T[] {\n  return ([] as T[]).concat(value);\n}\n\nexport function pushIfUnique<T>(arr: T[], value: T): void {\n  if (arr.indexOf(value) === -1) {\n    arr.push(value);\n  }\n}\n\nexport function appendPxIfNumber(value: string | number): string {\n  return typeof value === 'number' ? `${value}px` : value;\n}\n\nexport function unique<T>(arr: T[]): T[] {\n  return arr.filter((item, index) => arr.indexOf(item) === index);\n}\n\nexport function getNumber(value: string | number): number {\n  return typeof value === 'number' ? value : parseFloat(value);\n}\n\nexport function getBasePlacement(placement: Placement): BasePlacement {\n  return placement.split('-')[0] as BasePlacement;\n}\n\nexport function arrayFrom(value: ArrayLike<any>): any[] {\n  return [].slice.call(value);\n}\n\nexport function removeUndefinedProps(\n  obj: Record<string, unknown>\n): Partial<Record<string, unknown>> {\n  return Object.keys(obj).reduce((acc, key) => {\n    if (obj[key] !== undefined) {\n      (acc as any)[key] = obj[key];\n    }\n\n    return acc;\n  }, {});\n}\n","import {ReferenceElement, Targets} from './types';\nimport {PopperTreeData} from './types-internal';\nimport {arrayFrom, isType, normalizeToArray, getBasePlacement} from './utils';\n\nexport function div(): HTMLDivElement {\n  return document.createElement('div');\n}\n\nexport function isElement(value: unknown): value is Element | DocumentFragment {\n  return ['Element', 'Fragment'].some((type) => isType(value, type));\n}\n\nexport function isNodeList(value: unknown): value is NodeList {\n  return isType(value, 'NodeList');\n}\n\nexport function isMouseEvent(value: unknown): value is MouseEvent {\n  return isType(value, 'MouseEvent');\n}\n\nexport function isReferenceElement(value: any): value is ReferenceElement {\n  return !!(value && value._tippy && value._tippy.reference === value);\n}\n\nexport function getArrayOfElements(value: Targets): Element[] {\n  if (isElement(value)) {\n    return [value];\n  }\n\n  if (isNodeList(value)) {\n    return arrayFrom(value);\n  }\n\n  if (Array.isArray(value)) {\n    return value;\n  }\n\n  return arrayFrom(document.querySelectorAll(value));\n}\n\nexport function setTransitionDuration(\n  els: (HTMLDivElement | null)[],\n  value: number\n): void {\n  els.forEach((el) => {\n    if (el) {\n      el.style.transitionDuration = `${value}ms`;\n    }\n  });\n}\n\nexport function setVisibilityState(\n  els: (HTMLDivElement | null)[],\n  state: 'visible' | 'hidden'\n): void {\n  els.forEach((el) => {\n    if (el) {\n      el.setAttribute('data-state', state);\n    }\n  });\n}\n\nexport function getOwnerDocument(\n  elementOrElements: Element | Element[]\n): Document {\n  const [element] = normalizeToArray(elementOrElements);\n\n  // Elements created via a <template> have an ownerDocument with no reference to the body\n  return element?.ownerDocument?.body ? element.ownerDocument : document;\n}\n\nexport function isCursorOutsideInteractiveBorder(\n  popperTreeData: PopperTreeData[],\n  event: MouseEvent\n): boolean {\n  const {clientX, clientY} = event;\n\n  return popperTreeData.every(({popperRect, popperState, props}) => {\n    const {interactiveBorder} = props;\n    const basePlacement = getBasePlacement(popperState.placement);\n    const offsetData = popperState.modifiersData.offset;\n\n    if (!offsetData) {\n      return true;\n    }\n\n    const topDistance = basePlacement === 'bottom' ? offsetData.top!.y : 0;\n    const bottomDistance = basePlacement === 'top' ? offsetData.bottom!.y : 0;\n    const leftDistance = basePlacement === 'right' ? offsetData.left!.x : 0;\n    const rightDistance = basePlacement === 'left' ? offsetData.right!.x : 0;\n\n    const exceedsTop =\n      popperRect.top - clientY + topDistance > interactiveBorder;\n    const exceedsBottom =\n      clientY - popperRect.bottom - bottomDistance > interactiveBorder;\n    const exceedsLeft =\n      popperRect.left - clientX + leftDistance > interactiveBorder;\n    const exceedsRight =\n      clientX - popperRect.right - rightDistance > interactiveBorder;\n\n    return exceedsTop || exceedsBottom || exceedsLeft || exceedsRight;\n  });\n}\n\nexport function updateTransitionEndListener(\n  box: HTMLDivElement,\n  action: 'add' | 'remove',\n  listener: (event: TransitionEvent) => void\n): void {\n  const method = `${action}EventListener` as\n    | 'addEventListener'\n    | 'removeEventListener';\n\n  // some browsers apparently support `transition` (unprefixed) but only fire\n  // `webkitTransitionEnd`...\n  ['transitionend', 'webkitTransitionEnd'].forEach((event) => {\n    box[method](event, listener as EventListener);\n  });\n}\n","import {TOUCH_OPTIONS} from './constants';\nimport {isReferenceElement} from './dom-utils';\n\nexport const currentInput = {isTouch: false};\nlet lastMouseMoveTime = 0;\n\n/**\n * When a `touchstart` event is fired, it's assumed the user is using touch\n * input. We'll bind a `mousemove` event listener to listen for mouse input in\n * the future. This way, the `isTouch` property is fully dynamic and will handle\n * hybrid devices that use a mix of touch + mouse input.\n */\nexport function onDocumentTouchStart(): void {\n  if (currentInput.isTouch) {\n    return;\n  }\n\n  currentInput.isTouch = true;\n\n  if (window.performance) {\n    document.addEventListener('mousemove', onDocumentMouseMove);\n  }\n}\n\n/**\n * When two `mousemove` event are fired consecutively within 20ms, it's assumed\n * the user is using mouse input again. `mousemove` can fire on touch devices as\n * well, but very rarely that quickly.\n */\nexport function onDocumentMouseMove(): void {\n  const now = performance.now();\n\n  if (now - lastMouseMoveTime < 20) {\n    currentInput.isTouch = false;\n\n    document.removeEventListener('mousemove', onDocumentMouseMove);\n  }\n\n  lastMouseMoveTime = now;\n}\n\n/**\n * When an element is in focus and has a tippy, leaving the tab/window and\n * returning causes it to show again. For mouse users this is unexpected, but\n * for keyboard use it makes sense.\n * TODO: find a better technique to solve this problem\n */\nexport function onWindowBlur(): void {\n  const activeElement = document.activeElement as HTMLElement | null;\n\n  if (isReferenceElement(activeElement)) {\n    const instance = activeElement._tippy!;\n\n    if (activeElement.blur && !instance.state.isVisible) {\n      activeElement.blur();\n    }\n  }\n}\n\nexport default function bindGlobalEventListeners(): void {\n  document.addEventListener('touchstart', onDocumentTouchStart, TOUCH_OPTIONS);\n  window.addEventListener('blur', onWindowBlur);\n}\n","export const isBrowser =\n  typeof window !== 'undefined' && typeof document !== 'undefined';\n\nconst ua = isBrowser ? navigator.userAgent : '';\n\nexport const isIE = /MSIE |Trident\\//.test(ua);\n","import {Targets} from './types';\n\nexport function createMemoryLeakWarning(method: string): string {\n  const txt = method === 'destroy' ? 'n already-' : ' ';\n\n  return [\n    `${method}() was called on a${txt}destroyed instance. This is a no-op but`,\n    'indicates a potential memory leak.',\n  ].join(' ');\n}\n\nexport function clean(value: string): string {\n  const spacesAndTabs = /[ \\t]{2,}/g;\n  const lineStartWithSpaces = /^[ \\t]*/gm;\n\n  return value\n    .replace(spacesAndTabs, ' ')\n    .replace(lineStartWithSpaces, '')\n    .trim();\n}\n\nfunction getDevMessage(message: string): string {\n  return clean(`\n  %ctippy.js\n\n  %c${clean(message)}\n\n  %c👷‍ This is a development-only message. It will be removed in production.\n  `);\n}\n\nexport function getFormattedMessage(message: string): string[] {\n  return [\n    getDevMessage(message),\n    // title\n    'color: #00C584; font-size: 1.3em; font-weight: bold;',\n    // message\n    'line-height: 1.5',\n    // footer\n    'color: #a6a095;',\n  ];\n}\n\n// Assume warnings and errors never have the same message\nlet visitedMessages: Set<string>;\nif (__DEV__) {\n  resetVisitedMessages();\n}\n\nexport function resetVisitedMessages(): void {\n  visitedMessages = new Set();\n}\n\nexport function warnWhen(condition: boolean, message: string): void {\n  if (condition && !visitedMessages.has(message)) {\n    visitedMessages.add(message);\n    console.warn(...getFormattedMessage(message));\n  }\n}\n\nexport function errorWhen(condition: boolean, message: string): void {\n  if (condition && !visitedMessages.has(message)) {\n    visitedMessages.add(message);\n    console.error(...getFormattedMessage(message));\n  }\n}\n\nexport function validateTargets(targets: Targets): void {\n  const didPassFalsyValue = !targets;\n  const didPassPlainObject =\n    Object.prototype.toString.call(targets) === '[object Object]' &&\n    !(targets as any).addEventListener;\n\n  errorWhen(\n    didPassFalsyValue,\n    [\n      'tippy() was passed',\n      '`' + String(targets) + '`',\n      'as its targets (first) argument. Valid types are: String, Element,',\n      'Element[], or NodeList.',\n    ].join(' ')\n  );\n\n  errorWhen(\n    didPassPlainObject,\n    [\n      'tippy() was passed a plain object which is not supported as an argument',\n      'for virtual positioning. Use props.getReferenceClientRect instead.',\n    ].join(' ')\n  );\n}\n","import {DefaultProps, Plugin, Props, ReferenceElement, Tippy} from './types';\nimport {\n  hasOwnProperty,\n  removeProperties,\n  invokeWithArgsOrReturn,\n} from './utils';\nimport {warnWhen} from './validation';\n\nconst pluginProps = {\n  animateFill: false,\n  followCursor: false,\n  inlinePositioning: false,\n  sticky: false,\n};\n\nconst renderProps = {\n  allowHTML: false,\n  animation: 'fade',\n  arrow: true,\n  content: '',\n  inertia: false,\n  maxWidth: 350,\n  role: 'tooltip',\n  theme: '',\n  zIndex: 9999,\n};\n\nexport const defaultProps: DefaultProps = {\n  appendTo: () => document.body,\n  aria: {\n    content: 'auto',\n    expanded: 'auto',\n  },\n  delay: 0,\n  duration: [300, 250],\n  getReferenceClientRect: null,\n  hideOnClick: true,\n  ignoreAttributes: false,\n  interactive: false,\n  interactiveBorder: 2,\n  interactiveDebounce: 0,\n  moveTransition: '',\n  offset: [0, 10],\n  onAfterUpdate() {},\n  onBeforeUpdate() {},\n  onCreate() {},\n  onDestroy() {},\n  onHidden() {},\n  onHide() {},\n  onMount() {},\n  onShow() {},\n  onShown() {},\n  onTrigger() {},\n  onUntrigger() {},\n  onClickOutside() {},\n  placement: 'top',\n  plugins: [],\n  popperOptions: {},\n  render: null,\n  showOnCreate: false,\n  touch: true,\n  trigger: 'mouseenter focus',\n  triggerTarget: null,\n  ...pluginProps,\n  ...renderProps,\n};\n\nconst defaultKeys = Object.keys(defaultProps);\n\nexport const setDefaultProps: Tippy['setDefaultProps'] = (partialProps) => {\n  /* istanbul ignore else */\n  if (__DEV__) {\n    validateProps(partialProps, []);\n  }\n\n  const keys = Object.keys(partialProps) as Array<keyof DefaultProps>;\n  keys.forEach((key) => {\n    (defaultProps as any)[key] = partialProps[key];\n  });\n};\n\nexport function getExtendedPassedProps(\n  passedProps: Partial<Props> & Record<string, unknown>\n): Partial<Props> {\n  const plugins = passedProps.plugins || [];\n  const pluginProps = plugins.reduce<Record<string, unknown>>((acc, plugin) => {\n    const {name, defaultValue} = plugin;\n\n    if (name) {\n      acc[name] =\n        passedProps[name] !== undefined ? passedProps[name] : defaultValue;\n    }\n\n    return acc;\n  }, {});\n\n  return {\n    ...passedProps,\n    ...pluginProps,\n  };\n}\n\nexport function getDataAttributeProps(\n  reference: ReferenceElement,\n  plugins: Plugin[]\n): Record<string, unknown> {\n  const propKeys = plugins\n    ? Object.keys(getExtendedPassedProps({...defaultProps, plugins}))\n    : defaultKeys;\n\n  const props = propKeys.reduce(\n    (acc: Partial<Props> & Record<string, unknown>, key) => {\n      const valueAsString = (\n        reference.getAttribute(`data-tippy-${key}`) || ''\n      ).trim();\n\n      if (!valueAsString) {\n        return acc;\n      }\n\n      if (key === 'content') {\n        acc[key] = valueAsString;\n      } else {\n        try {\n          acc[key] = JSON.parse(valueAsString);\n        } catch (e) {\n          acc[key] = valueAsString;\n        }\n      }\n\n      return acc;\n    },\n    {}\n  );\n\n  return props;\n}\n\nexport function evaluateProps(\n  reference: ReferenceElement,\n  props: Props\n): Props {\n  const out = {\n    ...props,\n    content: invokeWithArgsOrReturn(props.content, [reference]),\n    ...(props.ignoreAttributes\n      ? {}\n      : getDataAttributeProps(reference, props.plugins)),\n  };\n\n  out.aria = {\n    ...defaultProps.aria,\n    ...out.aria,\n  };\n\n  out.aria = {\n    expanded:\n      out.aria.expanded === 'auto' ? props.interactive : out.aria.expanded,\n    content:\n      out.aria.content === 'auto'\n        ? props.interactive\n          ? null\n          : 'describedby'\n        : out.aria.content,\n  };\n\n  return out;\n}\n\nexport function validateProps(\n  partialProps: Partial<Props> = {},\n  plugins: Plugin[] = []\n): void {\n  const keys = Object.keys(partialProps) as Array<keyof Props>;\n  keys.forEach((prop) => {\n    const nonPluginProps = removeProperties(\n      defaultProps,\n      Object.keys(pluginProps)\n    );\n\n    let didPassUnknownProp = !hasOwnProperty(nonPluginProps, prop);\n\n    // Check if the prop exists in `plugins`\n    if (didPassUnknownProp) {\n      didPassUnknownProp =\n        plugins.filter((plugin) => plugin.name === prop).length === 0;\n    }\n\n    warnWhen(\n      didPassUnknownProp,\n      [\n        `\\`${prop}\\``,\n        \"is not a valid prop. You may have spelled it incorrectly, or if it's\",\n        'a plugin, forgot to pass it in an array as props.plugins.',\n        '\\n\\n',\n        'All props: https://atomiks.github.io/tippyjs/v6/all-props/\\n',\n        'Plugins: https://atomiks.github.io/tippyjs/v6/plugins/',\n      ].join(' ')\n    );\n  });\n}\n","import {\n  ARROW_CLASS,\n  BACKDROP_CLASS,\n  BOX_CLASS,\n  CONTENT_CLASS,\n  SVG_ARROW_CLASS,\n} from './constants';\nimport {div, isElement} from './dom-utils';\nimport {Instance, PopperElement, Props} from './types';\nimport {PopperChildren} from './types-internal';\nimport {arrayFrom} from './utils';\n\n// Firefox extensions don't allow .innerHTML = \"...\" property. This tricks it.\nconst innerHTML = (): 'innerHTML' => 'innerHTML';\n\nfunction dangerouslySetInnerHTML(element: Element, html: string): void {\n  element[innerHTML()] = html;\n}\n\nfunction createArrowElement(value: Props['arrow']): HTMLDivElement {\n  const arrow = div();\n\n  if (value === true) {\n    arrow.className = ARROW_CLASS;\n  } else {\n    arrow.className = SVG_ARROW_CLASS;\n\n    if (isElement(value)) {\n      arrow.appendChild(value);\n    } else {\n      dangerouslySetInnerHTML(arrow, value as string);\n    }\n  }\n\n  return arrow;\n}\n\nexport function setContent(content: HTMLDivElement, props: Props): void {\n  if (isElement(props.content)) {\n    dangerouslySetInnerHTML(content, '');\n    content.appendChild(props.content);\n  } else if (typeof props.content !== 'function') {\n    if (props.allowHTML) {\n      dangerouslySetInnerHTML(content, props.content);\n    } else {\n      content.textContent = props.content;\n    }\n  }\n}\n\nexport function getChildren(popper: PopperElement): PopperChildren {\n  const box = popper.firstElementChild as HTMLDivElement;\n  const boxChildren = arrayFrom(box.children);\n\n  return {\n    box,\n    content: boxChildren.find((node) => node.classList.contains(CONTENT_CLASS)),\n    arrow: boxChildren.find(\n      (node) =>\n        node.classList.contains(ARROW_CLASS) ||\n        node.classList.contains(SVG_ARROW_CLASS)\n    ),\n    backdrop: boxChildren.find((node) =>\n      node.classList.contains(BACKDROP_CLASS)\n    ),\n  };\n}\n\nexport function render(\n  instance: Instance\n): {\n  popper: PopperElement;\n  onUpdate?: (prevProps: Props, nextProps: Props) => void;\n} {\n  const popper = div();\n\n  const box = div();\n  box.className = BOX_CLASS;\n  box.setAttribute('data-state', 'hidden');\n  box.setAttribute('tabindex', '-1');\n\n  const content = div();\n  content.className = CONTENT_CLASS;\n  content.setAttribute('data-state', 'hidden');\n\n  setContent(content, instance.props);\n\n  popper.appendChild(box);\n  box.appendChild(content);\n\n  onUpdate(instance.props, instance.props);\n\n  function onUpdate(prevProps: Props, nextProps: Props): void {\n    const {box, content, arrow} = getChildren(popper);\n\n    if (nextProps.theme) {\n      box.setAttribute('data-theme', nextProps.theme);\n    } else {\n      box.removeAttribute('data-theme');\n    }\n\n    if (typeof nextProps.animation === 'string') {\n      box.setAttribute('data-animation', nextProps.animation);\n    } else {\n      box.removeAttribute('data-animation');\n    }\n\n    if (nextProps.inertia) {\n      box.setAttribute('data-inertia', '');\n    } else {\n      box.removeAttribute('data-inertia');\n    }\n\n    box.style.maxWidth =\n      typeof nextProps.maxWidth === 'number'\n        ? `${nextProps.maxWidth}px`\n        : nextProps.maxWidth;\n\n    if (nextProps.role) {\n      box.setAttribute('role', nextProps.role);\n    } else {\n      box.removeAttribute('role');\n    }\n\n    if (\n      prevProps.content !== nextProps.content ||\n      prevProps.allowHTML !== nextProps.allowHTML\n    ) {\n      setContent(content, instance.props);\n    }\n\n    if (nextProps.arrow) {\n      if (!arrow) {\n        box.appendChild(createArrowElement(nextProps.arrow));\n      } else if (prevProps.arrow !== nextProps.arrow) {\n        box.removeChild(arrow);\n        box.appendChild(createArrowElement(nextProps.arrow));\n      }\n    } else if (arrow) {\n      box.removeChild(arrow!);\n    }\n  }\n\n  return {\n    popper,\n    onUpdate,\n  };\n}\n\n// Runtime check to identify if the render function is the default one; this\n// way we can apply default CSS transitions logic and it can be tree-shaken away\nrender.$$tippy = true;\n","import {createPopper, StrictModifiers, Modifier} from '@popperjs/core';\nimport {currentInput} from './bindGlobalEventListeners';\nimport {isIE} from './browser';\nimport {TOUCH_OPTIONS} from './constants';\nimport {\n  div,\n  getOwnerDocument,\n  isCursorOutsideInteractiveBorder,\n  isMouseEvent,\n  setTransitionDuration,\n  setVisibilityState,\n  updateTransitionEndListener,\n} from './dom-utils';\nimport {defaultProps, evaluateProps, getExtendedPassedProps} from './props';\nimport {getChildren} from './template';\nimport {\n  Content,\n  Instance,\n  LifecycleHooks,\n  PopperElement,\n  Props,\n  ReferenceElement,\n} from './types';\nimport {ListenerObject, PopperTreeData, PopperChildren} from './types-internal';\nimport {\n  arrayFrom,\n  debounce,\n  getValueAtIndexOrReturn,\n  invokeWithArgsOrReturn,\n  normalizeToArray,\n  pushIfUnique,\n  splitBySpaces,\n  unique,\n  removeUndefinedProps,\n} from './utils';\nimport {createMemoryLeakWarning, errorWhen, warnWhen} from './validation';\n\nlet idCounter = 1;\nlet mouseMoveListeners: ((event: MouseEvent) => void)[] = [];\n\n// Used by `hideAll()`\nexport let mountedInstances: Instance[] = [];\n\nexport default function createTippy(\n  reference: ReferenceElement,\n  passedProps: Partial<Props>\n): Instance {\n  const props = evaluateProps(reference, {\n    ...defaultProps,\n    ...getExtendedPassedProps(removeUndefinedProps(passedProps)),\n  });\n\n  // ===========================================================================\n  // 🔒 Private members\n  // ===========================================================================\n  let showTimeout: any;\n  let hideTimeout: any;\n  let scheduleHideAnimationFrame: number;\n  let isVisibleFromClick = false;\n  let didHideDueToDocumentMouseDown = false;\n  let didTouchMove = false;\n  let ignoreOnFirstUpdate = false;\n  let lastTriggerEvent: Event | undefined;\n  let currentTransitionEndListener: (event: TransitionEvent) => void;\n  let onFirstUpdate: () => void;\n  let listeners: ListenerObject[] = [];\n  let debouncedOnMouseMove = debounce(onMouseMove, props.interactiveDebounce);\n  let currentTarget: Element;\n\n  // ===========================================================================\n  // 🔑 Public members\n  // ===========================================================================\n  const id = idCounter++;\n  const popperInstance = null;\n  const plugins = unique(props.plugins);\n\n  const state = {\n    // Is the instance currently enabled?\n    isEnabled: true,\n    // Is the tippy currently showing and not transitioning out?\n    isVisible: false,\n    // Has the instance been destroyed?\n    isDestroyed: false,\n    // Is the tippy currently mounted to the DOM?\n    isMounted: false,\n    // Has the tippy finished transitioning in?\n    isShown: false,\n  };\n\n  const instance: Instance = {\n    // properties\n    id,\n    reference,\n    popper: div(),\n    popperInstance,\n    props,\n    state,\n    plugins,\n    // methods\n    clearDelayTimeouts,\n    setProps,\n    setContent,\n    show,\n    hide,\n    hideWithInteractivity,\n    enable,\n    disable,\n    unmount,\n    destroy,\n  };\n\n  // TODO: Investigate why this early return causes a TDZ error in the tests —\n  // it doesn't seem to happen in the browser\n  /* istanbul ignore if */\n  if (!props.render) {\n    if (__DEV__) {\n      errorWhen(true, 'render() function has not been supplied.');\n    }\n\n    return instance;\n  }\n\n  // ===========================================================================\n  // Initial mutations\n  // ===========================================================================\n  const {popper, onUpdate} = props.render(instance);\n\n  popper.setAttribute('data-__NAMESPACE_PREFIX__-root', '');\n  popper.id = `__NAMESPACE_PREFIX__-${instance.id}`;\n\n  instance.popper = popper;\n  reference._tippy = instance;\n  popper._tippy = instance;\n\n  const pluginsHooks = plugins.map((plugin) => plugin.fn(instance));\n  const hasAriaExpanded = reference.hasAttribute('aria-expanded');\n\n  addListeners();\n  handleAriaExpandedAttribute();\n  handleStyles();\n\n  invokeHook('onCreate', [instance]);\n\n  if (props.showOnCreate) {\n    scheduleShow();\n  }\n\n  // Prevent a tippy with a delay from hiding if the cursor left then returned\n  // before it started hiding\n  popper.addEventListener('mouseenter', () => {\n    if (instance.props.interactive && instance.state.isVisible) {\n      instance.clearDelayTimeouts();\n    }\n  });\n\n  popper.addEventListener('mouseleave', (event) => {\n    if (\n      instance.props.interactive &&\n      instance.props.trigger.indexOf('mouseenter') >= 0\n    ) {\n      getDocument().addEventListener('mousemove', debouncedOnMouseMove);\n      debouncedOnMouseMove(event);\n    }\n  });\n\n  return instance;\n\n  // ===========================================================================\n  // 🔒 Private methods\n  // ===========================================================================\n  function getNormalizedTouchSettings(): [string | boolean, number] {\n    const {touch} = instance.props;\n    return Array.isArray(touch) ? touch : [touch, 0];\n  }\n\n  function getIsCustomTouchBehavior(): boolean {\n    return getNormalizedTouchSettings()[0] === 'hold';\n  }\n\n  function getIsDefaultRenderFn(): boolean {\n    // @ts-ignore\n    return !!instance.props.render?.$$tippy;\n  }\n\n  function getCurrentTarget(): Element {\n    return currentTarget || reference;\n  }\n\n  function getDocument(): Document {\n    const parent = getCurrentTarget().parentNode as Element;\n    return parent ? getOwnerDocument(parent) : document;\n  }\n\n  function getDefaultTemplateChildren(): PopperChildren {\n    return getChildren(popper);\n  }\n\n  function getDelay(isShow: boolean): number {\n    // For touch or keyboard input, force `0` delay for UX reasons\n    // Also if the instance is mounted but not visible (transitioning out),\n    // ignore delay\n    if (\n      (instance.state.isMounted && !instance.state.isVisible) ||\n      currentInput.isTouch ||\n      (lastTriggerEvent && lastTriggerEvent.type === 'focus')\n    ) {\n      return 0;\n    }\n\n    return getValueAtIndexOrReturn(\n      instance.props.delay,\n      isShow ? 0 : 1,\n      defaultProps.delay\n    );\n  }\n\n  function handleStyles(): void {\n    popper.style.pointerEvents =\n      instance.props.interactive && instance.state.isVisible ? '' : 'none';\n    popper.style.zIndex = `${instance.props.zIndex}`;\n  }\n\n  function invokeHook(\n    hook: keyof LifecycleHooks,\n    args: [Instance, any?],\n    shouldInvokePropsHook = true\n  ): void {\n    pluginsHooks.forEach((pluginHooks) => {\n      if (pluginHooks[hook]) {\n        pluginHooks[hook]!(...args);\n      }\n    });\n\n    if (shouldInvokePropsHook) {\n      instance.props[hook](...args);\n    }\n  }\n\n  function handleAriaContentAttribute(): void {\n    const {aria} = instance.props;\n\n    if (!aria.content) {\n      return;\n    }\n\n    const attr = `aria-${aria.content}`;\n    const id = popper.id;\n    const nodes = normalizeToArray(instance.props.triggerTarget || reference);\n\n    nodes.forEach((node) => {\n      const currentValue = node.getAttribute(attr);\n\n      if (instance.state.isVisible) {\n        node.setAttribute(attr, currentValue ? `${currentValue} ${id}` : id);\n      } else {\n        const nextValue = currentValue && currentValue.replace(id, '').trim();\n\n        if (nextValue) {\n          node.setAttribute(attr, nextValue);\n        } else {\n          node.removeAttribute(attr);\n        }\n      }\n    });\n  }\n\n  function handleAriaExpandedAttribute(): void {\n    if (hasAriaExpanded || !instance.props.aria.expanded) {\n      return;\n    }\n\n    const nodes = normalizeToArray(instance.props.triggerTarget || reference);\n\n    nodes.forEach((node) => {\n      if (instance.props.interactive) {\n        node.setAttribute(\n          'aria-expanded',\n          instance.state.isVisible && node === getCurrentTarget()\n            ? 'true'\n            : 'false'\n        );\n      } else {\n        node.removeAttribute('aria-expanded');\n      }\n    });\n  }\n\n  function cleanupInteractiveMouseListeners(): void {\n    getDocument().removeEventListener('mousemove', debouncedOnMouseMove);\n    mouseMoveListeners = mouseMoveListeners.filter(\n      (listener) => listener !== debouncedOnMouseMove\n    );\n  }\n\n  function onDocumentPress(event: MouseEvent | TouchEvent): void {\n    // Moved finger to scroll instead of an intentional tap outside\n    if (currentInput.isTouch) {\n      if (didTouchMove || event.type === 'mousedown') {\n        return;\n      }\n    }\n\n    // Clicked on interactive popper\n    if (\n      instance.props.interactive &&\n      popper.contains(event.target as Element)\n    ) {\n      return;\n    }\n\n    // Clicked on the event listeners target\n    if (getCurrentTarget().contains(event.target as Element)) {\n      if (currentInput.isTouch) {\n        return;\n      }\n\n      if (\n        instance.state.isVisible &&\n        instance.props.trigger.indexOf('click') >= 0\n      ) {\n        return;\n      }\n    } else {\n      invokeHook('onClickOutside', [instance, event]);\n    }\n\n    if (instance.props.hideOnClick === true) {\n      instance.clearDelayTimeouts();\n      instance.hide();\n\n      // `mousedown` event is fired right before `focus` if pressing the\n      // currentTarget. This lets a tippy with `focus` trigger know that it\n      // should not show\n      didHideDueToDocumentMouseDown = true;\n      setTimeout(() => {\n        didHideDueToDocumentMouseDown = false;\n      });\n\n      // The listener gets added in `scheduleShow()`, but this may be hiding it\n      // before it shows, and hide()'s early bail-out behavior can prevent it\n      // from being cleaned up\n      if (!instance.state.isMounted) {\n        removeDocumentPress();\n      }\n    }\n  }\n\n  function onTouchMove(): void {\n    didTouchMove = true;\n  }\n\n  function onTouchStart(): void {\n    didTouchMove = false;\n  }\n\n  function addDocumentPress(): void {\n    const doc = getDocument();\n    doc.addEventListener('mousedown', onDocumentPress, true);\n    doc.addEventListener('touchend', onDocumentPress, TOUCH_OPTIONS);\n    doc.addEventListener('touchstart', onTouchStart, TOUCH_OPTIONS);\n    doc.addEventListener('touchmove', onTouchMove, TOUCH_OPTIONS);\n  }\n\n  function removeDocumentPress(): void {\n    const doc = getDocument();\n    doc.removeEventListener('mousedown', onDocumentPress, true);\n    doc.removeEventListener('touchend', onDocumentPress, TOUCH_OPTIONS);\n    doc.removeEventListener('touchstart', onTouchStart, TOUCH_OPTIONS);\n    doc.removeEventListener('touchmove', onTouchMove, TOUCH_OPTIONS);\n  }\n\n  function onTransitionedOut(duration: number, callback: () => void): void {\n    onTransitionEnd(duration, () => {\n      if (\n        !instance.state.isVisible &&\n        popper.parentNode &&\n        popper.parentNode.contains(popper)\n      ) {\n        callback();\n      }\n    });\n  }\n\n  function onTransitionedIn(duration: number, callback: () => void): void {\n    onTransitionEnd(duration, callback);\n  }\n\n  function onTransitionEnd(duration: number, callback: () => void): void {\n    const box = getDefaultTemplateChildren().box;\n\n    function listener(event: TransitionEvent): void {\n      if (event.target === box) {\n        updateTransitionEndListener(box, 'remove', listener);\n        callback();\n      }\n    }\n\n    // Make callback synchronous if duration is 0\n    // `transitionend` won't fire otherwise\n    if (duration === 0) {\n      return callback();\n    }\n\n    updateTransitionEndListener(box, 'remove', currentTransitionEndListener);\n    updateTransitionEndListener(box, 'add', listener);\n\n    currentTransitionEndListener = listener;\n  }\n\n  function on(\n    eventType: string,\n    handler: EventListener,\n    options: boolean | object = false\n  ): void {\n    const nodes = normalizeToArray(instance.props.triggerTarget || reference);\n    nodes.forEach((node) => {\n      node.addEventListener(eventType, handler, options);\n      listeners.push({node, eventType, handler, options});\n    });\n  }\n\n  function addListeners(): void {\n    if (getIsCustomTouchBehavior()) {\n      on('touchstart', onTrigger, {passive: true});\n      on('touchend', onMouseLeave as EventListener, {passive: true});\n    }\n\n    splitBySpaces(instance.props.trigger).forEach((eventType) => {\n      if (eventType === 'manual') {\n        return;\n      }\n\n      on(eventType, onTrigger);\n\n      switch (eventType) {\n        case 'mouseenter':\n          on('mouseleave', onMouseLeave as EventListener);\n          break;\n        case 'focus':\n          on(isIE ? 'focusout' : 'blur', onBlurOrFocusOut as EventListener);\n          break;\n        case 'focusin':\n          on('focusout', onBlurOrFocusOut as EventListener);\n          break;\n      }\n    });\n  }\n\n  function removeListeners(): void {\n    listeners.forEach(({node, eventType, handler, options}: ListenerObject) => {\n      node.removeEventListener(eventType, handler, options);\n    });\n    listeners = [];\n  }\n\n  function onTrigger(event: Event): void {\n    let shouldScheduleClickHide = false;\n\n    if (\n      !instance.state.isEnabled ||\n      isEventListenerStopped(event) ||\n      didHideDueToDocumentMouseDown\n    ) {\n      return;\n    }\n\n    const wasFocused = lastTriggerEvent?.type === 'focus';\n\n    lastTriggerEvent = event;\n    currentTarget = event.currentTarget as Element;\n\n    handleAriaExpandedAttribute();\n\n    if (!instance.state.isVisible && isMouseEvent(event)) {\n      // If scrolling, `mouseenter` events can be fired if the cursor lands\n      // over a new target, but `mousemove` events don't get fired. This\n      // causes interactive tooltips to get stuck open until the cursor is\n      // moved\n      mouseMoveListeners.forEach((listener) => listener(event));\n    }\n\n    // Toggle show/hide when clicking click-triggered tooltips\n    if (\n      event.type === 'click' &&\n      (instance.props.trigger.indexOf('mouseenter') < 0 ||\n        isVisibleFromClick) &&\n      instance.props.hideOnClick !== false &&\n      instance.state.isVisible\n    ) {\n      shouldScheduleClickHide = true;\n    } else {\n      scheduleShow(event);\n    }\n\n    if (event.type === 'click') {\n      isVisibleFromClick = !shouldScheduleClickHide;\n    }\n\n    if (shouldScheduleClickHide && !wasFocused) {\n      scheduleHide(event);\n    }\n  }\n\n  function onMouseMove(event: MouseEvent): void {\n    const target = event.target as Node;\n    const isCursorOverReferenceOrPopper =\n      getCurrentTarget().contains(target) || popper.contains(target);\n\n    if (event.type === 'mousemove' && isCursorOverReferenceOrPopper) {\n      return;\n    }\n\n    const popperTreeData = getNestedPopperTree()\n      .concat(popper)\n      .map((popper) => {\n        const instance = popper._tippy!;\n        const state = instance.popperInstance?.state;\n\n        if (state) {\n          return {\n            popperRect: popper.getBoundingClientRect(),\n            popperState: state,\n            props,\n          };\n        }\n\n        return null;\n      })\n      .filter(Boolean) as PopperTreeData[];\n\n    if (isCursorOutsideInteractiveBorder(popperTreeData, event)) {\n      cleanupInteractiveMouseListeners();\n      scheduleHide(event);\n    }\n  }\n\n  function onMouseLeave(event: MouseEvent): void {\n    const shouldBail =\n      isEventListenerStopped(event) ||\n      (instance.props.trigger.indexOf('click') >= 0 && isVisibleFromClick);\n\n    if (shouldBail) {\n      return;\n    }\n\n    if (instance.props.interactive) {\n      instance.hideWithInteractivity(event);\n      return;\n    }\n\n    scheduleHide(event);\n  }\n\n  function onBlurOrFocusOut(event: FocusEvent): void {\n    if (\n      instance.props.trigger.indexOf('focusin') < 0 &&\n      event.target !== getCurrentTarget()\n    ) {\n      return;\n    }\n\n    // If focus was moved to within the popper\n    if (\n      instance.props.interactive &&\n      event.relatedTarget &&\n      popper.contains(event.relatedTarget as Element)\n    ) {\n      return;\n    }\n\n    scheduleHide(event);\n  }\n\n  function isEventListenerStopped(event: Event): boolean {\n    return currentInput.isTouch\n      ? getIsCustomTouchBehavior() !== event.type.indexOf('touch') >= 0\n      : false;\n  }\n\n  function createPopperInstance(): void {\n    destroyPopperInstance();\n\n    const {\n      popperOptions,\n      placement,\n      offset,\n      getReferenceClientRect,\n      moveTransition,\n    } = instance.props;\n\n    const arrow = getIsDefaultRenderFn() ? getChildren(popper).arrow : null;\n\n    const computedReference = getReferenceClientRect\n      ? {\n          getBoundingClientRect: getReferenceClientRect,\n          contextElement:\n            getReferenceClientRect.contextElement || getCurrentTarget(),\n        }\n      : reference;\n\n    const tippyModifier: Modifier<'$$tippy', {}> = {\n      name: '$$tippy',\n      enabled: true,\n      phase: 'beforeWrite',\n      requires: ['computeStyles'],\n      fn({state}) {\n        if (getIsDefaultRenderFn()) {\n          const {box} = getDefaultTemplateChildren();\n\n          ['placement', 'reference-hidden', 'escaped'].forEach((attr) => {\n            if (attr === 'placement') {\n              box.setAttribute('data-placement', state.placement);\n            } else {\n              if (state.attributes.popper[`data-popper-${attr}`]) {\n                box.setAttribute(`data-${attr}`, '');\n              } else {\n                box.removeAttribute(`data-${attr}`);\n              }\n            }\n          });\n\n          state.attributes.popper = {};\n        }\n      },\n    };\n\n    type TippyModifier = Modifier<'$$tippy', {}>;\n    type ExtendedModifiers = StrictModifiers | Partial<TippyModifier>;\n\n    const modifiers: Array<ExtendedModifiers> = [\n      {\n        name: 'offset',\n        options: {\n          offset,\n        },\n      },\n      {\n        name: 'preventOverflow',\n        options: {\n          padding: {\n            top: 2,\n            bottom: 2,\n            left: 5,\n            right: 5,\n          },\n        },\n      },\n      {\n        name: 'flip',\n        options: {\n          padding: 5,\n        },\n      },\n      {\n        name: 'computeStyles',\n        options: {\n          adaptive: !moveTransition,\n        },\n      },\n      tippyModifier,\n    ];\n\n    if (getIsDefaultRenderFn() && arrow) {\n      modifiers.push({\n        name: 'arrow',\n        options: {\n          element: arrow,\n          padding: 3,\n        },\n      });\n    }\n\n    modifiers.push(...(popperOptions?.modifiers || []));\n\n    instance.popperInstance = createPopper<ExtendedModifiers>(\n      computedReference,\n      popper,\n      {\n        ...popperOptions,\n        placement,\n        onFirstUpdate,\n        modifiers,\n      }\n    );\n  }\n\n  function destroyPopperInstance(): void {\n    if (instance.popperInstance) {\n      instance.popperInstance.destroy();\n      instance.popperInstance = null;\n    }\n  }\n\n  function mount(): void {\n    const {appendTo} = instance.props;\n\n    let parentNode: any;\n\n    // By default, we'll append the popper to the triggerTargets's parentNode so\n    // it's directly after the reference element so the elements inside the\n    // tippy can be tabbed to\n    // If there are clipping issues, the user can specify a different appendTo\n    // and ensure focus management is handled correctly manually\n    const node = getCurrentTarget();\n\n    if (\n      (instance.props.interactive && appendTo === defaultProps.appendTo) ||\n      appendTo === 'parent'\n    ) {\n      parentNode = node.parentNode;\n    } else {\n      parentNode = invokeWithArgsOrReturn(appendTo, [node]);\n    }\n\n    // The popper element needs to exist on the DOM before its position can be\n    // updated as Popper needs to read its dimensions\n    if (!parentNode.contains(popper)) {\n      parentNode.appendChild(popper);\n    }\n\n    createPopperInstance();\n\n    /* istanbul ignore else */\n    if (__DEV__) {\n      // Accessibility check\n      warnWhen(\n        instance.props.interactive &&\n          appendTo === defaultProps.appendTo &&\n          node.nextElementSibling !== popper,\n        [\n          'Interactive tippy element may not be accessible via keyboard',\n          'navigation because it is not directly after the reference element',\n          'in the DOM source order.',\n          '\\n\\n',\n          'Using a wrapper <div> or <span> tag around the reference element',\n          'solves this by creating a new parentNode context.',\n          '\\n\\n',\n          'Specifying `appendTo: document.body` silences this warning, but it',\n          'assumes you are using a focus management solution to handle',\n          'keyboard navigation.',\n          '\\n\\n',\n          'See: https://atomiks.github.io/tippyjs/v6/accessibility/#interactivity',\n        ].join(' ')\n      );\n    }\n  }\n\n  function getNestedPopperTree(): PopperElement[] {\n    return arrayFrom(\n      popper.querySelectorAll('[data-__NAMESPACE_PREFIX__-root]')\n    );\n  }\n\n  function scheduleShow(event?: Event): void {\n    instance.clearDelayTimeouts();\n\n    if (event) {\n      invokeHook('onTrigger', [instance, event]);\n    }\n\n    addDocumentPress();\n\n    let delay = getDelay(true);\n    const [touchValue, touchDelay] = getNormalizedTouchSettings();\n\n    if (currentInput.isTouch && touchValue === 'hold' && touchDelay) {\n      delay = touchDelay;\n    }\n\n    if (delay) {\n      showTimeout = setTimeout(() => {\n        instance.show();\n      }, delay);\n    } else {\n      instance.show();\n    }\n  }\n\n  function scheduleHide(event: Event): void {\n    instance.clearDelayTimeouts();\n\n    invokeHook('onUntrigger', [instance, event]);\n\n    if (!instance.state.isVisible) {\n      removeDocumentPress();\n\n      return;\n    }\n\n    // For interactive tippies, scheduleHide is added to a document.body handler\n    // from onMouseLeave so must intercept scheduled hides from mousemove/leave\n    // events when trigger contains mouseenter and click, and the tip is\n    // currently shown as a result of a click.\n    if (\n      instance.props.trigger.indexOf('mouseenter') >= 0 &&\n      instance.props.trigger.indexOf('click') >= 0 &&\n      ['mouseleave', 'mousemove'].indexOf(event.type) >= 0 &&\n      isVisibleFromClick\n    ) {\n      return;\n    }\n\n    const delay = getDelay(false);\n\n    if (delay) {\n      hideTimeout = setTimeout(() => {\n        if (instance.state.isVisible) {\n          instance.hide();\n        }\n      }, delay);\n    } else {\n      // Fixes a `transitionend` problem when it fires 1 frame too\n      // late sometimes, we don't want hide() to be called.\n      scheduleHideAnimationFrame = requestAnimationFrame(() => {\n        instance.hide();\n      });\n    }\n  }\n\n  // ===========================================================================\n  // 🔑 Public methods\n  // ===========================================================================\n  function enable(): void {\n    instance.state.isEnabled = true;\n  }\n\n  function disable(): void {\n    // Disabling the instance should also hide it\n    // https://github.com/atomiks/tippy.js-react/issues/106\n    instance.hide();\n    instance.state.isEnabled = false;\n  }\n\n  function clearDelayTimeouts(): void {\n    clearTimeout(showTimeout);\n    clearTimeout(hideTimeout);\n    cancelAnimationFrame(scheduleHideAnimationFrame);\n  }\n\n  function setProps(partialProps: Partial<Props>): void {\n    /* istanbul ignore else */\n    if (__DEV__) {\n      warnWhen(instance.state.isDestroyed, createMemoryLeakWarning('setProps'));\n    }\n\n    if (instance.state.isDestroyed) {\n      return;\n    }\n\n    invokeHook('onBeforeUpdate', [instance, partialProps]);\n\n    removeListeners();\n\n    const prevProps = instance.props;\n    const nextProps = evaluateProps(reference, {\n      ...instance.props,\n      ...partialProps,\n      ignoreAttributes: true,\n    });\n\n    instance.props = nextProps;\n\n    addListeners();\n\n    if (prevProps.interactiveDebounce !== nextProps.interactiveDebounce) {\n      cleanupInteractiveMouseListeners();\n      debouncedOnMouseMove = debounce(\n        onMouseMove,\n        nextProps.interactiveDebounce\n      );\n    }\n\n    // Ensure stale aria-expanded attributes are removed\n    if (prevProps.triggerTarget && !nextProps.triggerTarget) {\n      normalizeToArray(prevProps.triggerTarget).forEach((node) => {\n        node.removeAttribute('aria-expanded');\n      });\n    } else if (nextProps.triggerTarget) {\n      reference.removeAttribute('aria-expanded');\n    }\n\n    handleAriaExpandedAttribute();\n    handleStyles();\n\n    if (onUpdate) {\n      onUpdate(prevProps, nextProps);\n    }\n\n    if (instance.popperInstance) {\n      createPopperInstance();\n\n      // Fixes an issue with nested tippies if they are all getting re-rendered,\n      // and the nested ones get re-rendered first.\n      // https://github.com/atomiks/tippyjs-react/issues/177\n      // TODO: find a cleaner / more efficient solution(!)\n      getNestedPopperTree().forEach((nestedPopper) => {\n        // React (and other UI libs likely) requires a rAF wrapper as it flushes\n        // its work in one\n        requestAnimationFrame(nestedPopper._tippy!.popperInstance!.forceUpdate);\n      });\n    }\n\n    invokeHook('onAfterUpdate', [instance, partialProps]);\n  }\n\n  function setContent(content: Content): void {\n    instance.setProps({content});\n  }\n\n  function show(): void {\n    /* istanbul ignore else */\n    if (__DEV__) {\n      warnWhen(instance.state.isDestroyed, createMemoryLeakWarning('show'));\n    }\n\n    // Early bail-out\n    const isAlreadyVisible = instance.state.isVisible;\n    const isDestroyed = instance.state.isDestroyed;\n    const isDisabled = !instance.state.isEnabled;\n    const isTouchAndTouchDisabled =\n      currentInput.isTouch && !instance.props.touch;\n    const duration = getValueAtIndexOrReturn(\n      instance.props.duration,\n      0,\n      defaultProps.duration\n    );\n\n    if (\n      isAlreadyVisible ||\n      isDestroyed ||\n      isDisabled ||\n      isTouchAndTouchDisabled\n    ) {\n      return;\n    }\n\n    // Normalize `disabled` behavior across browsers.\n    // Firefox allows events on disabled elements, but Chrome doesn't.\n    // Using a wrapper element (i.e. <span>) is recommended.\n    if (getCurrentTarget().hasAttribute('disabled')) {\n      return;\n    }\n\n    invokeHook('onShow', [instance], false);\n    if (instance.props.onShow(instance) === false) {\n      return;\n    }\n\n    instance.state.isVisible = true;\n\n    if (getIsDefaultRenderFn()) {\n      popper.style.visibility = 'visible';\n    }\n\n    handleStyles();\n    addDocumentPress();\n\n    if (!instance.state.isMounted) {\n      popper.style.transition = 'none';\n    }\n\n    // If flipping to the opposite side after hiding at least once, the\n    // animation will use the wrong placement without resetting the duration\n    if (getIsDefaultRenderFn()) {\n      const {box, content} = getDefaultTemplateChildren();\n      setTransitionDuration([box, content], 0);\n    }\n\n    onFirstUpdate = (): void => {\n      if (!instance.state.isVisible || ignoreOnFirstUpdate) {\n        return;\n      }\n\n      ignoreOnFirstUpdate = true;\n\n      // reflow\n      void popper.offsetHeight;\n\n      popper.style.transition = instance.props.moveTransition;\n\n      if (getIsDefaultRenderFn() && instance.props.animation) {\n        const {box, content} = getDefaultTemplateChildren();\n        setTransitionDuration([box, content], duration);\n        setVisibilityState([box, content], 'visible');\n      }\n\n      handleAriaContentAttribute();\n      handleAriaExpandedAttribute();\n\n      pushIfUnique(mountedInstances, instance);\n\n      // certain modifiers (e.g. `maxSize`) require a second update after the\n      // popper has been positioned for the first time\n      instance.popperInstance?.forceUpdate();\n\n      instance.state.isMounted = true;\n      invokeHook('onMount', [instance]);\n\n      if (instance.props.animation && getIsDefaultRenderFn()) {\n        onTransitionedIn(duration, () => {\n          instance.state.isShown = true;\n          invokeHook('onShown', [instance]);\n        });\n      }\n    };\n\n    mount();\n  }\n\n  function hide(): void {\n    /* istanbul ignore else */\n    if (__DEV__) {\n      warnWhen(instance.state.isDestroyed, createMemoryLeakWarning('hide'));\n    }\n\n    // Early bail-out\n    const isAlreadyHidden = !instance.state.isVisible;\n    const isDestroyed = instance.state.isDestroyed;\n    const isDisabled = !instance.state.isEnabled;\n    const duration = getValueAtIndexOrReturn(\n      instance.props.duration,\n      1,\n      defaultProps.duration\n    );\n\n    if (isAlreadyHidden || isDestroyed || isDisabled) {\n      return;\n    }\n\n    invokeHook('onHide', [instance], false);\n    if (instance.props.onHide(instance) === false) {\n      return;\n    }\n\n    instance.state.isVisible = false;\n    instance.state.isShown = false;\n    ignoreOnFirstUpdate = false;\n    isVisibleFromClick = false;\n\n    if (getIsDefaultRenderFn()) {\n      popper.style.visibility = 'hidden';\n    }\n\n    cleanupInteractiveMouseListeners();\n    removeDocumentPress();\n    handleStyles();\n\n    if (getIsDefaultRenderFn()) {\n      const {box, content} = getDefaultTemplateChildren();\n\n      if (instance.props.animation) {\n        setTransitionDuration([box, content], duration);\n        setVisibilityState([box, content], 'hidden');\n      }\n    }\n\n    handleAriaContentAttribute();\n    handleAriaExpandedAttribute();\n\n    if (instance.props.animation) {\n      if (getIsDefaultRenderFn()) {\n        onTransitionedOut(duration, instance.unmount);\n      }\n    } else {\n      instance.unmount();\n    }\n  }\n\n  function hideWithInteractivity(event: MouseEvent): void {\n    /* istanbul ignore else */\n    if (__DEV__) {\n      warnWhen(\n        instance.state.isDestroyed,\n        createMemoryLeakWarning('hideWithInteractivity')\n      );\n    }\n\n    getDocument().addEventListener('mousemove', debouncedOnMouseMove);\n    pushIfUnique(mouseMoveListeners, debouncedOnMouseMove);\n    debouncedOnMouseMove(event);\n  }\n\n  function unmount(): void {\n    /* istanbul ignore else */\n    if (__DEV__) {\n      warnWhen(instance.state.isDestroyed, createMemoryLeakWarning('unmount'));\n    }\n\n    if (instance.state.isVisible) {\n      instance.hide();\n    }\n\n    if (!instance.state.isMounted) {\n      return;\n    }\n\n    destroyPopperInstance();\n\n    // If a popper is not interactive, it will be appended outside the popper\n    // tree by default. This seems mainly for interactive tippies, but we should\n    // find a workaround if possible\n    getNestedPopperTree().forEach((nestedPopper) => {\n      nestedPopper._tippy!.unmount();\n    });\n\n    if (popper.parentNode) {\n      popper.parentNode.removeChild(popper);\n    }\n\n    mountedInstances = mountedInstances.filter((i) => i !== instance);\n\n    instance.state.isMounted = false;\n    invokeHook('onHidden', [instance]);\n  }\n\n  function destroy(): void {\n    /* istanbul ignore else */\n    if (__DEV__) {\n      warnWhen(instance.state.isDestroyed, createMemoryLeakWarning('destroy'));\n    }\n\n    if (instance.state.isDestroyed) {\n      return;\n    }\n\n    instance.clearDelayTimeouts();\n    instance.unmount();\n\n    removeListeners();\n\n    delete reference._tippy;\n\n    instance.state.isDestroyed = true;\n\n    invokeHook('onDestroy', [instance]);\n  }\n}\n","import bindGlobalEventListeners, {\n  currentInput,\n} from './bindGlobalEventListeners';\nimport createTippy, {mountedInstances} from './createTippy';\nimport {getArrayOfElements, isElement, isReferenceElement} from './dom-utils';\nimport {defaultProps, setDefaultProps, validateProps} from './props';\nimport {HideAll, HideAllOptions, Instance, Props, Targets} from './types';\nimport {validateTargets, warnWhen} from './validation';\n\nfunction tippy(\n  targets: Targets,\n  optionalProps: Partial<Props> = {}\n): Instance | Instance[] {\n  const plugins = defaultProps.plugins.concat(optionalProps.plugins || []);\n\n  /* istanbul ignore else */\n  if (__DEV__) {\n    validateTargets(targets);\n    validateProps(optionalProps, plugins);\n  }\n\n  bindGlobalEventListeners();\n\n  const passedProps: Partial<Props> = {...optionalProps, plugins};\n\n  const elements = getArrayOfElements(targets);\n\n  /* istanbul ignore else */\n  if (__DEV__) {\n    const isSingleContentElement = isElement(passedProps.content);\n    const isMoreThanOneReferenceElement = elements.length > 1;\n    warnWhen(\n      isSingleContentElement && isMoreThanOneReferenceElement,\n      [\n        'tippy() was passed an Element as the `content` prop, but more than',\n        'one tippy instance was created by this invocation. This means the',\n        'content element will only be appended to the last tippy instance.',\n        '\\n\\n',\n        'Instead, pass the .innerHTML of the element, or use a function that',\n        'returns a cloned version of the element instead.',\n        '\\n\\n',\n        '1) content: element.innerHTML\\n',\n        '2) content: () => element.cloneNode(true)',\n      ].join(' ')\n    );\n  }\n\n  const instances = elements.reduce<Instance[]>(\n    (acc, reference): Instance[] => {\n      const instance = reference && createTippy(reference, passedProps);\n\n      if (instance) {\n        acc.push(instance);\n      }\n\n      return acc;\n    },\n    []\n  );\n\n  return isElement(targets) ? instances[0] : instances;\n}\n\ntippy.defaultProps = defaultProps;\ntippy.setDefaultProps = setDefaultProps;\ntippy.currentInput = currentInput;\n\nexport default tippy;\n\nexport const hideAll: HideAll = ({\n  exclude: excludedReferenceOrInstance,\n  duration,\n}: HideAllOptions = {}) => {\n  mountedInstances.forEach((instance) => {\n    let isExcluded = false;\n\n    if (excludedReferenceOrInstance) {\n      isExcluded = isReferenceElement(excludedReferenceOrInstance)\n        ? instance.reference === excludedReferenceOrInstance\n        : instance.popper === (excludedReferenceOrInstance as Instance).popper;\n    }\n\n    if (!isExcluded) {\n      const originalDuration = instance.props.duration;\n\n      instance.setProps({duration});\n      instance.hide();\n\n      if (!instance.state.isDestroyed) {\n        instance.setProps({duration: originalDuration});\n      }\n    }\n  });\n};\n","import tippy from '..';\nimport {div} from '../dom-utils';\nimport {\n  CreateSingleton,\n  Plugin,\n  CreateSingletonProps,\n  ReferenceElement,\n  CreateSingletonInstance,\n  Instance,\n  Props,\n} from '../types';\nimport {removeProperties} from '../utils';\nimport {errorWhen} from '../validation';\nimport {applyStyles, Modifier} from '@popperjs/core';\n\n// The default `applyStyles` modifier has a cleanup function that gets called\n// every time the popper is destroyed (i.e. a new target), removing the styles\n// and causing transitions to break for singletons when the console is open, but\n// most notably for non-transform styles being used, `gpuAcceleration: false`.\nconst applyStylesModifier: Modifier<'applyStyles', {}> = {\n  ...applyStyles,\n  effect({state}) {\n    const initialStyles = {\n      popper: {\n        position: state.options.strategy,\n        left: '0',\n        top: '0',\n        margin: '0',\n      },\n      arrow: {\n        position: 'absolute',\n      },\n      reference: {},\n    };\n\n    Object.assign(state.elements.popper.style, initialStyles.popper);\n    state.styles = initialStyles;\n\n    if (state.elements.arrow) {\n      Object.assign(state.elements.arrow.style, initialStyles.arrow);\n    }\n\n    // intentionally return no cleanup function\n    // return () => { ... }\n  },\n};\n\nconst createSingleton: CreateSingleton = (\n  tippyInstances,\n  optionalProps = {}\n) => {\n  /* istanbul ignore else */\n  if (__DEV__) {\n    errorWhen(\n      !Array.isArray(tippyInstances),\n      [\n        'The first argument passed to createSingleton() must be an array of',\n        'tippy instances. The passed value was',\n        String(tippyInstances),\n      ].join(' ')\n    );\n  }\n\n  let individualInstances = tippyInstances;\n  let references: Array<ReferenceElement> = [];\n  let currentTarget: Element | null;\n  let overrides = optionalProps.overrides;\n  let interceptSetPropsCleanups: Array<() => void> = [];\n  let shownOnCreate = false;\n\n  function setReferences(): void {\n    references = individualInstances.map((instance) => instance.reference);\n  }\n\n  function enableInstances(isEnabled: boolean): void {\n    individualInstances.forEach((instance) => {\n      if (isEnabled) {\n        instance.enable();\n      } else {\n        instance.disable();\n      }\n    });\n  }\n\n  function interceptSetProps(singleton: Instance): Array<() => void> {\n    return individualInstances.map((instance) => {\n      const originalSetProps = instance.setProps;\n\n      instance.setProps = (props): void => {\n        originalSetProps(props);\n\n        if (instance.reference === currentTarget) {\n          singleton.setProps(props);\n        }\n      };\n\n      return (): void => {\n        instance.setProps = originalSetProps;\n      };\n    });\n  }\n\n  // have to pass singleton, as it maybe undefined on first call\n  function prepareInstance(\n    singleton: Instance,\n    target: ReferenceElement\n  ): void {\n    const index = references.indexOf(target);\n\n    // bail-out\n    if (target === currentTarget) {\n      return;\n    }\n\n    currentTarget = target;\n\n    const overrideProps: Partial<Props> = (overrides || [])\n      .concat('content')\n      .reduce((acc, prop) => {\n        (acc as any)[prop] = individualInstances[index].props[prop];\n        return acc;\n      }, {});\n\n    singleton.setProps({\n      ...overrideProps,\n      getReferenceClientRect:\n        typeof overrideProps.getReferenceClientRect === 'function'\n          ? overrideProps.getReferenceClientRect\n          : (): ClientRect => target.getBoundingClientRect(),\n    });\n  }\n\n  enableInstances(false);\n  setReferences();\n\n  const plugin: Plugin = {\n    fn() {\n      return {\n        onDestroy(): void {\n          enableInstances(true);\n        },\n        onHidden(): void {\n          currentTarget = null;\n        },\n        onClickOutside(instance): void {\n          if (instance.props.showOnCreate && !shownOnCreate) {\n            shownOnCreate = true;\n            currentTarget = null;\n          }\n        },\n        onShow(instance): void {\n          if (instance.props.showOnCreate && !shownOnCreate) {\n            shownOnCreate = true;\n            prepareInstance(instance, references[0]);\n          }\n        },\n        onTrigger(instance, event): void {\n          prepareInstance(instance, event.currentTarget as Element);\n        },\n      };\n    },\n  };\n\n  const singleton = tippy(div(), {\n    ...removeProperties(optionalProps, ['overrides']),\n    plugins: [plugin, ...(optionalProps.plugins || [])],\n    triggerTarget: references,\n    popperOptions: {\n      ...optionalProps.popperOptions,\n      modifiers: [\n        ...(optionalProps.popperOptions?.modifiers || []),\n        applyStylesModifier,\n      ],\n    },\n  }) as CreateSingletonInstance<CreateSingletonProps>;\n\n  const originalShow = singleton.show;\n\n  singleton.show = (target?: ReferenceElement | Instance | number): void => {\n    originalShow();\n\n    // first time, showOnCreate or programmatic call with no params\n    // default to showing first instance\n    if (!currentTarget && target == null) {\n      return prepareInstance(singleton, references[0]);\n    }\n\n    // triggered from event (do nothing as prepareInstance already called by onTrigger)\n    // programmatic call with no params when already visible (do nothing again)\n    if (currentTarget && target == null) {\n      return;\n    }\n\n    // target is index of instance\n    if (typeof target === 'number') {\n      return (\n        references[target] && prepareInstance(singleton, references[target])\n      );\n    }\n\n    // target is a child tippy instance\n    if (individualInstances.includes(target as Instance)) {\n      const ref = (target as Instance).reference;\n      return prepareInstance(singleton, ref);\n    }\n\n    // target is a ReferenceElement\n    if (references.includes(target as ReferenceElement)) {\n      return prepareInstance(singleton, target as ReferenceElement);\n    }\n  };\n\n  singleton.showNext = (): void => {\n    const first = references[0];\n    if (!currentTarget) {\n      return singleton.show(0);\n    }\n    const index = references.indexOf(currentTarget);\n    singleton.show(references[index + 1] || first);\n  };\n\n  singleton.showPrevious = (): void => {\n    const last = references[references.length - 1];\n    if (!currentTarget) {\n      return singleton.show(last);\n    }\n    const index = references.indexOf(currentTarget);\n    const target = references[index - 1] || last;\n    singleton.show(target);\n  };\n\n  const originalSetProps = singleton.setProps;\n\n  singleton.setProps = (props): void => {\n    overrides = props.overrides || overrides;\n    originalSetProps(props);\n  };\n\n  singleton.setInstances = (nextInstances): void => {\n    enableInstances(true);\n    interceptSetPropsCleanups.forEach((fn) => fn());\n\n    individualInstances = nextInstances;\n\n    enableInstances(false);\n    setReferences();\n    interceptSetProps(singleton);\n\n    singleton.setProps({triggerTarget: references});\n  };\n\n  interceptSetPropsCleanups = interceptSetProps(singleton);\n\n  return singleton;\n};\n\nexport default createSingleton;\n","import tippy from '../src';\nimport {render} from '../src/template';\n\ntippy.setDefaultProps({render});\n\nexport {default, hideAll} from '../src';\nexport {default as createSingleton} from '../src/addons/createSingleton';\nexport {default as delegate} from '../src/addons/delegate';\nexport {default as animateFill} from '../src/plugins/animateFill';\nexport {default as followCursor} from '../src/plugins/followCursor';\nexport {default as inlinePositioning} from '../src/plugins/inlinePositioning';\nexport {default as sticky} from '../src/plugins/sticky';\nexport {ROUND_ARROW as roundArrow} from '../src/constants';\n","import { Editor, posToDOMRect } from '@tiptap/core'\nimport { EditorState, Plugin, PluginKey } from 'prosemirror-state'\nimport { EditorView } from 'prosemirror-view'\nimport tippy, { Instance, Props } from 'tippy.js'\n\nexport interface BubbleMenuPluginProps {\n  editor: Editor,\n  element: HTMLElement,\n  tippyOptions?: Partial<Props>,\n}\n\nexport type BubbleMenuViewProps = BubbleMenuPluginProps & {\n  view: EditorView,\n}\n\nexport class BubbleMenuView {\n  public editor: Editor\n\n  public element: HTMLElement\n\n  public view: EditorView\n\n  public preventHide = false\n\n  public tippy!: Instance\n\n  constructor({\n    editor,\n    element,\n    view,\n    tippyOptions,\n  }: BubbleMenuViewProps) {\n    this.editor = editor\n    this.element = element\n    this.view = view\n    this.element.addEventListener('mousedown', this.mousedownHandler, { capture: true })\n    this.editor.on('focus', this.focusHandler)\n    this.editor.on('blur', this.blurHandler)\n    this.createTooltip(tippyOptions)\n    this.element.style.visibility = 'visible'\n  }\n\n  mousedownHandler = () => {\n    this.preventHide = true\n  }\n\n  focusHandler = () => {\n    // we use `setTimeout` to make sure `selection` is already updated\n    setTimeout(() => this.update(this.editor.view))\n  }\n\n  blurHandler = ({ event }: { event: FocusEvent }) => {\n    if (this.preventHide) {\n      this.preventHide = false\n\n      return\n    }\n\n    if (\n      event?.relatedTarget\n      && this.element.parentNode?.contains(event.relatedTarget as Node)\n    ) {\n      return\n    }\n\n    this.hide()\n  }\n\n  createTooltip(options: Partial<Props> = {}) {\n    this.tippy = tippy(this.view.dom, {\n      duration: 0,\n      getReferenceClientRect: null,\n      content: this.element,\n      interactive: true,\n      trigger: 'manual',\n      placement: 'top',\n      hideOnClick: 'toggle',\n      ...options,\n    })\n  }\n\n  update(view: EditorView, oldState?: EditorState) {\n    const { state, composing } = view\n    const { doc, selection } = state\n    const isSame = oldState && oldState.doc.eq(doc) && oldState.selection.eq(selection)\n\n    if (composing || isSame) {\n      return\n    }\n\n    const {\n      from,\n      to,\n      empty,\n      $anchor,\n    } = selection\n\n    // Sometime check for `empty` is not enough.\n    // Doubleclick an empty paragraph returns a node size of 2.\n    // So we check also for an empty text size.\n    if (empty || !$anchor.parent.textContent) {\n      this.hide()\n\n      return\n    }\n\n    this.tippy.setProps({\n      getReferenceClientRect: () => posToDOMRect(view, from, to),\n    })\n\n    this.show()\n  }\n\n  show() {\n    this.tippy.show()\n  }\n\n  hide() {\n    this.tippy.hide()\n  }\n\n  destroy() {\n    this.tippy.destroy()\n    this.element.removeEventListener('mousedown', this.mousedownHandler)\n    this.editor.off('focus', this.focusHandler)\n    this.editor.off('blur', this.blurHandler)\n  }\n}\n\nexport const BubbleMenuPluginKey = new PluginKey('menuBubble')\n\nexport const BubbleMenuPlugin = (options: BubbleMenuPluginProps) => {\n  return new Plugin({\n    key: BubbleMenuPluginKey,\n    view: view => new BubbleMenuView({ view, ...options }),\n  })\n}\n","import { Extension } from '@tiptap/core'\nimport { BubbleMenuPlugin, BubbleMenuPluginProps } from './bubble-menu-plugin'\n\nexport type BubbleMenuOptions = Omit<BubbleMenuPluginProps, 'editor' | 'element'> & {\n  element: HTMLElement | null,\n}\n\nexport const BubbleMenu = Extension.create<BubbleMenuOptions>({\n  name: 'bubbleMenu',\n\n  defaultOptions: {\n    element: null,\n    tippyOptions: {},\n  },\n\n  addProseMirrorPlugins() {\n    if (!this.options.element) {\n      return []\n    }\n\n    return [\n      BubbleMenuPlugin({\n        editor: this.editor,\n        element: this.options.element,\n        tippyOptions: this.options.tippyOptions,\n      }),\n    ]\n  },\n})\n"],"names":["findDiffStart","a","b","pos","let","i","childCount","childA","child","childB","sameMarkup","isText","text","j","content","size","inner","nodeSize","findDiffEnd","posA","posB","iA","iB","same","minSize","Math","min","length","Fragment","this","nodesBetween","from","to","f","nodeStart","parent","end","start","max","descendants","textBetween","blockSeparator","leafText","separated","node","slice","isLeaf","isBlock","append","other","last","lastChild","first","firstChild","withText","push","cut","result","cutByIndex","empty","replaceChild","index","current","copy","addToStart","concat","addToEnd","eq","found","RangeError","maybeChild","forEach","p","otherPos","findIndex","round","retIndex","curPos","toString","toStringInner","join","toJSON","map","n","fromJSON","schema","value","Array","isArray","nodeFromJSON","fromArray","array","joined","nodes","attrs","const","offset","compareDeep","Mark","type","ReplaceError","message","err","Error","call","__proto__","prototype","addToSet","set","placed","excludes","rank","removeFromSet","isInSet","obj","name","_","json","marks","create","sameSet","setFrom","none","sort","Object","constructor","Slice","openStart","openEnd","removeRange","offsetTo","indexTo","insertInto","dist","insert","canReplace","replace","$from","$to","depth","replaceOuter","$along","extra","resolveNoCache","prepareSliceForReplace","close","replaceThreeWay","parentOffset","replaceTwoWay","checkJoin","main","sub","compatibleContent","joinable","$before","$after","addNode","target","addRange","$start","$end","startIndex","endIndex","textOffset","nodeAfter","nodeBefore","validContent","insertAt","fragment","removeBetween","maxOpen","openIsolating","spec","isolating","ResolvedPos","path","resolveDepth","val","doc","indexAfter","before","after","dOff","posAtIndex","tmp","inclusive","marksAcross","isInline","next","sharedDepth","blockRange","pred","d","inlineContent","NodeRange","sameParent","str","resolve","rem","resolveCached","resolveCache","cached","resolveCachePos","resolveCacheSize","emptyAttrs","Node","startPos","textContent","hasMarkup","defaultAttrs","mark","includeParents","nodeAt","childAfter","childBefore","rangeHasMark","isTextblock","isAtom","toDebugString","wrapMarks","contentMatchAt","match","contentMatch","matchFragment","replacement","one","two","validEnd","allowsMarks","canReplaceWith","matchType","canAppend","check","m","markFromJSON","nodeType","ContentMatch","wrapCache","parse","string","nodeTypes","stream","TokenStream","expr","parseExpr","nfa","labeled","explore","nullFrom","states","out","term","known","indexOf","state","cmp","dfa","connect","compile","edge","edges","exprs","reduce","loop","cur","work","dead","hasRequiredAttrs","checkForDeadEnds","frag","prototypeAccessors","defaultType","compatible","fillBefore","toEnd","seen","search","types","finished","tp","createAndFill","findWrapping","computed","computeWrapping","active","via","shift","reverse","edgeCount","scan","inline","tokens","split","pop","parseExprSeq","eat","parseExprSubscript","test","typeName","groups","resolveName","parseExprAtom","parseExprRange","parseNum","Number","defaults","attrName","attr","hasDefault","default","computeAttrs","built","given","undefined","initAttrs","Attribute","tok","SyntaxError","NodeType","group","markSet","atom","isRequired","createChecked","allowsMarkType","markType","allowedMarks","topType","topNode","options","hasOwnProperty","prototypeAccessors$1","MarkType","excluded","instance","DOMParser","rules","tags","styles","rule","tag","style","normalizeLists","some","r","dom","context","ParseContext","addAll","finish","parseSlice","matchTag","matches","namespace","namespaceURI","matchesContext","getAttrs","matchStyle","prop","charCodeAt","schemaRules","priority","splice","parseDOM","fromSchema","domParser","blockTags","address","article","aside","blockquote","canvas","dd","div","dl","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","header","hgroup","hr","li","noscript","ol","output","pre","section","table","tfoot","ul","ignoreTags","head","object","script","title","listTags","wsOptionsFor","preserveWhitespace","NodeContext","pendingMarks","solid","activeMarks","stashMarks","fill","wrap","exec","popFromStashMark","applyPending","nextType","pending","markMayApply","parser","open","isOpen","topContext","topOptions","topMatch","topNodeType","find","findPositions","needsBlock","selector","msMatchesSelector","webkitMatchesSelector","mozMatchesSelector","top","addDOM","addTextNode","getAttribute","readStyles","re","trim","parseStyles","addPendingMark","addElement","removePendingMark","nodeValue","domNodeBefore","previousSibling","nodeName","insertNode","findInText","findInside","matchAfter","ruleID","toLowerCase","prevItem","nextSibling","appendChild","normalizeList","ruleFromNode","ignore","ignoreFallback","skip","closeParent","sync","oldNeedsBlock","leafFallback","addElementByRule","consuming","ownerDocument","createTextNode","findPlace","continueAfter","enter","startIn","getContent","contentDOM","contentElement","querySelector","findAround","childNodes","findAtPoint","route","cx","enterInner","block","textblockFromContext","closeExtra","preserveWS","ok","topOpen","currentPos","contains","compareDocumentPosition","textNode","parts","option","useRoot","minDepth","part","$context","deflt","findSameMarkInSet","upto","level","lastIndexOf","stashMark","DOMSerializer","gatherToDOM","toDOM","document","window","serializeFragment","createDocumentFragment","keep","rendered","spanning","add","markDOM","serializeMark","serializeNode","renderSpec","onContent","serializeNodeAndMarks","structure","xmlNS","tagName","space","createElementNS","createElement","setAttributeNS","setAttribute","innerContent","domSerializer","nodesFromSchema","marksFromSchema","factor16","pow","makeRecover","recoverIndex","MapResult","deleted","recover","StepMap","ranges","inverted","diff","recoverOffset","mapResult","assoc","_map","simple","oldIndex","newIndex","oldSize","newSize","touches","oldStart","newStart","invert","JSON","stringify","Mapping","maps","mirror","TransformError","appendMap","mirrors","setMirror","appendMapping","mapping","startSize","mirr","getMirror","appendMappingInverted","totalSize","inverse","corr","Transform","steps","docs","mustOverride","step","maybeStep","failed","apply","addStep","docChanged","getMap","stepsByID","Step","_doc","_mapping","merge","_other","stepType","jsonID","id","stepClass","StepResult","fail","fromReplace","e","ReplaceStep","super","contentBetween","ReplaceAroundStep","gapFrom","gapTo","gap","inserted","mapFragment","mapped","lift","range","gapStart","gapEnd","splitting","wrappers","setBlockType","mapFrom","$pos","canChangeType","clearIncompatible","startM","endM","setNodeMarkup","newNode","replaceWith","typesAfter","typeAfter","AddMarkStep","oldSlice","RemoveMarkStep","fitsTrivially","addMark","removed","added","removing","adding","newSet","s","removeMark","matched","toRemove","parentType","delSteps","allowed","Fitter","fit","replaceStep","delete","unplaced","frontier","dropFromFragment","count","addToFragment","contentAt","closeNodeStart","contentAfterFits","invalidMarks","closeFragment","oldOpen","newOpen","coveredDepths","findFittable","placeNodes","openMore","dropNode","moveInline","mustMoveInline","placedSize","pass","sliceDepth","frontierDepth","inject","openAtEnd","closeFrontierNode","openFrontierNode","taken","openEndCount","findCloseLevel","dropInner","move","replaceRange","deleteRange","targetDepths","preferredTarget","unshift","defining","preferredTargetIndex","leftNodes","preferredDepth","openDepth","targetDepth","expand","startSteps","replaceRangeWith","point","insertPoint","covered","classesById","Selection","$anchor","$head","SelectionRange","anchor","tr","lastNode","lastParent","selectionToInsertionEnd","findFrom","dir","textOnly","TextSelection","findSelectionIn","near","bias","AllSelection","atStart","atEnd","cls","selectionClass","getBookmark","between","visible","$cursor","ensureMarks","TextBookmark","dPos","NodeSelection","NodeBookmark","isSelectable","selectable","sel","selection","setSelection","AllBookmark","startLen","_from","_to","_newFrom","newTo","Transaction","time","Date","now","curSelection","curSelectionFor","storedMarks","updated","meta","selectionSet","setStoredMarks","addStoredMark","removeStoredMark","storedMarksSet","setTime","replaceSelection","replaceSelectionWith","inheritMarks","deleteSelection","insertText","setMeta","key","getMeta","isGeneric","scrollIntoView","scrolledIntoView","bind","self","FieldDesc","desc","init","baseFields","config","_marks","_old","prev","Configuration","plugins","fields","pluginsByKey","plugin","EditorState","applyTransaction","filterTransaction","rootTr","transactions","trs","newState","applyInner","haveNew","appendTransaction","oldState","newInstance","field","applyListeners","$config","reconfigure","pluginFields","addApplyListener","removeApplyListener","bindProps","Function","Plugin","props","createKey","getState","keys","PluginKey","get","bottom","right","left","auto","basePlacements","viewport","popper","variationPlacements","acc","placement","placements","modifierPhases","getNodeName","element","getWindow","defaultView","isElement","Element","isHTMLElement","HTMLElement","isShadowRoot","ShadowRoot","enabled","phase","fn","_ref","elements","attributes","assign","removeAttribute","effect","_ref2","initialStyles","position","strategy","margin","arrow","reference","property","attribute","requires","getBasePlacement","getBoundingClientRect","rect","width","height","x","y","getLayoutRect","clientRect","offsetWidth","offsetHeight","abs","offsetLeft","offsetTop","rootNode","getRootNode","isSameNode","parentNode","host","getComputedStyle","isTableElement","getDocumentElement","documentElement","getParentNode","assignedSlot","getTrueOffsetParent","offsetParent","getOffsetParent","isFirefox","navigator","userAgent","currentNode","css","transform","perspective","contain","willChange","filter","getContainingBlock","getMainAxisFromPlacement","within","mathMax","mathMin","mergePaddingObject","paddingObject","expandToHashMap","hashMap","unsetSides","mapToStyles","_Object$assign2","popperRect","offsets","gpuAcceleration","adaptive","roundOffsets","_ref3","dpr","devicePixelRatio","roundOffsetsByDPR","_ref3$x","_ref3$y","hasX","hasY","sideX","sideY","win","heightProp","widthProp","_Object$assign","commonStyles","passive","hash","getOppositePlacement","getOppositeVariationPlacement","getWindowScroll","scrollLeft","pageXOffset","scrollTop","pageYOffset","getWindowScrollBarX","isScrollParent","_getComputedStyle","overflow","overflowX","overflowY","getScrollParent","body","listScrollParents","list","_element$ownerDocumen","scrollParent","isBody","visualViewport","updatedList","rectToClientRect","getClientRectFromMixedType","clippingParent","html","clientWidth","clientHeight","getViewportRect","clientTop","clientLeft","getInnerBoundingClientRect","winScroll","scrollWidth","scrollHeight","direction","getDocumentRect","getClippingRect","boundary","rootBoundary","mainClippingParents","clippingParents","clipperElement","getClippingParents","firstClippingParent","clippingRect","accRect","getVariation","computeOffsets","basePlacement","variation","commonX","commonY","mainAxis","len","detectOverflow","_options","_options$placement","_options$boundary","_options$rootBoundary","_options$elementConte","elementContext","_options$altBoundary","altBoundary","_options$padding","padding","altContext","referenceElement","rects","clippingClientRect","contextElement","referenceClientRect","popperOffsets","popperClientRect","elementClientRect","overflowOffsets","offsetData","modifiersData","multiply","axis","computeAutoPlacement","flipVariations","_options$allowedAutoP","allowedAutoPlacements","allPlacements","allowedPlacements","process","env","NODE_ENV","console","error","overflows","getSideOffsets","preventedOffsets","isAnySideFullyClipped","side","getCompositeRect","elementOrVirtualElement","isFixed","isOffsetParentAnElement","scroll","order","modifiers","Map","visited","Set","modifier","requiresIfExists","dep","has","depModifier","format","_len","arguments","args","_key","c","INVALID_MODIFIER_ERROR","VALID_PROPERTIES","INVALID_ELEMENT_ERROR","DEFAULT_OPTIONS","areValidElements","popperGenerator","generatorOptions","_generatorOptions","_generatorOptions$def","defaultModifiers","_generatorOptions$def2","defaultOptions","orderedModifiers","effectCleanupFns","isDestroyed","setOptions","cleanupModifierEffects","scrollParents","arr","identifiers","orderModifiers","merged","existing","data","mergeByName","String","requirement","mod","validateModifiers","item","identifier","marginTop","marginRight","marginBottom","marginLeft","parseFloat","warn","_ref3$options","cleanupFn","noopFn","update","forceUpdate","_state$elements","reset","__debug_loops__","_state$orderedModifie","_state$orderedModifie2","Promise","then","destroy","onFirstUpdate","createPopper","_options$scroll","_options$resize","resize","addEventListener","removeEventListener","_ref4","_options$gpuAccelerat","_options$adaptive","_options$roundOffsets","transitionProperty","data-popper-placement","applyStyles","_options$offset","invertDistance","skidding","distance","distanceAndSkiddingToXY","_data$state$placement","_skip","_options$mainAxis","checkMainAxis","_options$altAxis","altAxis","checkAltAxis","specifiedFallbackPlacements","fallbackPlacements","_options$flipVariatio","preferredPlacement","oppositePlacement","getExpandedFallbackPlacements","referenceRect","checksMap","makeFallbackChecks","firstFittingPlacement","_basePlacement","isStartVariation","isVertical","mainVariationSide","altVariationSide","checks","every","_loop","_i","fittingPlacement","_options$tether","tether","_options$tetherOffset","tetherOffset","isBasePlacement","tetherOffsetValue","mainSide","altSide","additive","minLen","maxLen","arrowElement","arrowRect","arrowPaddingObject","arrowPaddingMin","arrowPaddingMax","arrowLen","minOffset","maxOffset","arrowOffsetParent","clientOffset","offsetModifierValue","tetherMin","tetherMax","preventedOffset","_mainSide","_altSide","_offset","_min","_max","_preventedOffset","_state$modifiersData$","toPaddingObject","minProp","maxProp","endDiff","startDiff","clientSize","centerToReference","center","axisProp","centerOffset","_options$element","preventOverflow","referenceOverflow","popperAltOverflow","referenceClippingOffsets","popperEscapeOffsets","isReferenceHidden","hasPopperEscaped","data-popper-reference-hidden","data-popper-escaped","CONTENT_CLASS","ARROW_CLASS","SVG_ARROW_CLASS","TOUCH_OPTIONS","capture","getValueAtIndexOrReturn","defaultValue","v","isType","invokeWithArgsOrReturn","debounce","ms","arg","clearTimeout","timeout","setTimeout","normalizeToArray","pushIfUnique","arrayFrom","getArrayOfElements","isNodeList","querySelectorAll","setTransitionDuration","els","el","transitionDuration","setVisibilityState","updateTransitionEndListener","box","action","listener","method","event","currentInput","isTouch","lastMouseMoveTime","onDocumentTouchStart","performance","onDocumentMouseMove","onWindowBlur","activeElement","_tippy","blur","isVisible","visitedMessages","ua","isIE","createMemoryLeakWarning","clean","getDevMessage","getFormattedMessage","warnWhen","condition","errorWhen","pluginProps","animateFill","followCursor","inlinePositioning","sticky","defaultProps","appendTo","aria","expanded","delay","duration","getReferenceClientRect","hideOnClick","ignoreAttributes","interactive","interactiveBorder","interactiveDebounce","moveTransition","onAfterUpdate","onBeforeUpdate","onCreate","onDestroy","onHidden","onHide","onMount","onShow","onShown","onTrigger","onUntrigger","onClickOutside","popperOptions","render","showOnCreate","touch","trigger","triggerTarget","allowHTML","animation","inertia","maxWidth","role","theme","zIndex","defaultKeys","getExtendedPassedProps","passedProps","evaluateProps","valueAsString","getDataAttributeProps","validateProps","partialProps","nonPluginProps","clone","removeProperties","didPassUnknownProp","dangerouslySetInnerHTML","createArrowElement","className","setContent","getChildren","firstElementChild","boxChildren","children","classList","backdrop","onUpdate","prevProps","nextProps","removeChild","$$tippy","idCounter","mouseMoveListeners","mountedInstances","createTippy","showTimeout","hideTimeout","scheduleHideAnimationFrame","lastTriggerEvent","currentTransitionEndListener","currentTarget","isVisibleFromClick","didHideDueToDocumentMouseDown","didTouchMove","ignoreOnFirstUpdate","listeners","debouncedOnMouseMove","onMouseMove","popperInstance","isEnabled","isMounted","isShown","clearDelayTimeouts","cancelAnimationFrame","setProps","invokeHook","removeListeners","addListeners","cleanupInteractiveMouseListeners","handleAriaExpandedAttribute","handleStyles","createPopperInstance","getNestedPopperTree","nestedPopper","requestAnimationFrame","show","isAlreadyVisible","isDisabled","isTouchAndTouchDisabled","getCurrentTarget","hasAttribute","getIsDefaultRenderFn","visibility","addDocumentPress","transition","getDefaultTemplateChildren","handleAriaContentAttribute","callback","onTransitionEnd","onTransitionedIn","nextElementSibling","mount","hide","isAlreadyHidden","removeDocumentPress","onTransitionedOut","unmount","hideWithInteractivity","getDocument","enable","disable","destroyPopperInstance","pluginsHooks","hasAriaExpanded","scheduleShow","getNormalizedTouchSettings","getIsCustomTouchBehavior","_instance$props$rende","getDelay","isShow","pointerEvents","hook","shouldInvokePropsHook","pluginHooks","currentValue","nextValue","onDocumentPress","onTouchMove","onTouchStart","on","eventType","handler","onMouseLeave","Boolean","onBlurOrFocusOut","shouldScheduleClickHide","isEventListenerStopped","wasFocused","scheduleHide","isCursorOverReferenceOrPopper","popperTreeData","clientX","clientY","popperState","topDistance","bottomDistance","leftDistance","rightDistance","exceedsTop","exceedsBottom","exceedsLeft","exceedsRight","isCursorOutsideInteractiveBorder","_instance$popperInsta","relatedTarget","computedReference","touchValue","touchDelay","tippy","targets","optionalProps","didPassFalsyValue","didPassPlainObject","validateTargets","isSingleContentElement","isMoreThanOneReferenceElement","instances","setDefaultProps","BubbleMenuView","[object Object]","editor","view","tippyOptions","preventHide","mousedownHandler","focusHandler","blurHandler","createTooltip","composing","isSame","posToDOMRect","off","BubbleMenuPluginKey","BubbleMenuPlugin","BubbleMenu","Extension"],"mappings":"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"}