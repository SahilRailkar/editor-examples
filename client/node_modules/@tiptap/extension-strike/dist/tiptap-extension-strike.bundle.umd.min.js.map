{"version":3,"file":"tiptap-extension-strike.bundle.umd.min.js","sources":["../src/strike.ts"],"sourcesContent":["import {\n  Command,\n  Mark,\n  markInputRule,\n  markPasteRule,\n  mergeAttributes,\n} from '@tiptap/core'\n\nexport interface StrikeOptions {\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands {\n    strike: {\n      /**\n       * Set a strike mark\n       */\n      setStrike: () => Command,\n      /**\n       * Toggle a strike mark\n       */\n      toggleStrike: () => Command,\n      /**\n       * Unset a strike mark\n       */\n      unsetStrike: () => Command,\n    }\n  }\n}\n\nexport const inputRegex = /(?:^|\\s)((?:~~)((?:[^~]+))(?:~~))$/gm\nexport const pasteRegex = /(?:^|\\s)((?:~~)((?:[^~]+))(?:~~))/gm\n\nexport const Strike = Mark.create<StrikeOptions>({\n  name: 'strike',\n\n  defaultOptions: {\n    HTMLAttributes: {},\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: 's',\n      },\n      {\n        tag: 'del',\n      },\n      {\n        tag: 'strike',\n      },\n      {\n        style: 'text-decoration',\n        consuming: false,\n        getAttrs: style => ((style as string).includes('line-through') ? {} : false),\n      },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['s', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      setStrike: () => ({ commands }) => {\n        return commands.setMark('strike')\n      },\n      toggleStrike: () => ({ commands }) => {\n        return commands.toggleMark('strike')\n      },\n      unsetStrike: () => ({ commands }) => {\n        return commands.unsetMark('strike')\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-Shift-x': () => this.editor.commands.toggleStrike(),\n    }\n  },\n\n  addInputRules() {\n    return [\n      markInputRule(inputRegex, this.type),\n    ]\n  },\n\n  addPasteRules() {\n    return [\n      markPasteRule(inputRegex, this.type),\n    ]\n  },\n})\n"],"names":["inputRegex","Strike","Mark","create","name","defaultOptions","HTMLAttributes","parseHTML","tag","style","consuming","getAttrs","includes","[object Object]","mergeAttributes","this","options","addCommands","setStrike","commands","setMark","toggleStrike","toggleMark","unsetStrike","unsetMark","Mod-Shift-x","editor","markInputRule","type","markPasteRule"],"mappings":"oUA+BaA,EAAa,uCAGbC,EAASC,OAAKC,OAAsB,CAC/CC,KAAM,SAENC,eAAgB,CACdC,eAAgB,IAGlBC,UAAS,IACA,CACL,CACEC,IAAK,KAEP,CACEA,IAAK,OAEP,CACEA,IAAK,UAEP,CACEC,MAAO,kBACPC,WAAW,EACXC,SAAUF,KAAWA,EAAiBG,SAAS,iBAAkB,KAKvEC,YAAWP,eAAEA,IACX,MAAO,CAAC,IAAKQ,kBAAgBC,KAAKC,QAAQV,eAAgBA,GAAiB,IAG7EW,YAAW,KACF,CACLC,UAAW,IAAM,EAAGC,SAAAA,KACXA,EAASC,QAAQ,UAE1BC,aAAc,IAAM,EAAGF,SAAAA,KACdA,EAASG,WAAW,UAE7BC,YAAa,IAAM,EAAGJ,SAAAA,KACbA,EAASK,UAAU,YAKhCX,uBACE,MAAO,CACLY,cAAe,IAAMV,KAAKW,OAAOP,SAASE,iBAI9CR,gBACE,MAAO,CACLc,gBAAc3B,EAAYe,KAAKa,QAInCf,gBACE,MAAO,CACLgB,gBAAc7B,EAAYe,KAAKa,6DA5DX"}