import { Node, mergeAttributes } from '@tiptap/core';
import { exitCode } from 'prosemirror-commands';

const HardBreak = Node.create({
    name: 'hardBreak',
    defaultOptions: {
        HTMLAttributes: {},
    },
    inline: true,
    group: 'inline',
    selectable: false,
    parseHTML() {
        return [
            { tag: 'br' },
        ];
    },
    renderHTML({ HTMLAttributes }) {
        return ['br', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes)];
    },
    addCommands() {
        return {
            setHardBreak: () => ({ commands, state, dispatch }) => {
                return commands.first([
                    () => exitCode(state, dispatch),
                    () => {
                        if (dispatch) {
                            state.tr.replaceSelectionWith(this.type.create()).scrollIntoView();
                        }
                        return true;
                    },
                ]);
            },
        };
    },
    addKeyboardShortcuts() {
        return {
            'Mod-Enter': () => this.editor.commands.setHardBreak(),
            'Shift-Enter': () => this.editor.commands.setHardBreak(),
        };
    },
});

export default HardBreak;
export { HardBreak };
//# sourceMappingURL=tiptap-extension-hard-break.esm.js.map
